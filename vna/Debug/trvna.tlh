// Created by Microsoft (R) C/C++ Compiler Version 14.27.29111.0 (055af3fb).
//
// C:\Users\hsyn\Desktop\SoftRoles\trvna-com\vna\Debug\trvna.tlh
//
// C++ source equivalent of Win32 type library C:\VNA\TRVNA\TRVNA.exe
// compiler-generated file created 12/11/20 at 21:19:58 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

//
// Forward references and typedefs
//

struct __declspec(uuid("821a6e02-21da-404f-ae93-2037a6cb9be4"))
/* LIBID */ __TR1300Lib;
struct __declspec(uuid("36e2ed6b-21e7-476e-9d8f-9b734c4b532b"))
/* dual interface */ ITR1300;
struct /* coclass */ TR1300;
struct __declspec(uuid("c528b4f7-99e7-4d15-8c3b-165a4b001e39"))
/* dual interface */ ISCPI;
struct /* coclass */ SCPI;
struct __declspec(uuid("c569beed-a31f-43b4-a935-f1af67c227cc"))
/* dual interface */ ISCPI_CALCulate;
struct /* coclass */ SCPI_CALCulate;
struct __declspec(uuid("0329fdda-08f2-48b6-93d8-b18b917f76bd"))
/* dual interface */ ISCPI_CALCulate_PARameter;
struct /* coclass */ SCPI_CALCulate_PARameter;
struct __declspec(uuid("dc990e36-3424-4125-a80e-b59cab48e71a"))
/* dual interface */ ISCPI_CALCulate_SELected;
struct /* coclass */ SCPI_CALCulate_SELected;
struct __declspec(uuid("80df3391-33ba-4957-871c-721049d18c80"))
/* dual interface */ ISCPI_CALCulate_SELected_DATA;
struct /* coclass */ SCPI_CALCulate_SELected_DATA;
struct __declspec(uuid("e3382ed8-571f-4c90-b49d-4f4c446e0b6e"))
/* dual interface */ ISCPI_CALCulate_SELected_LIMit;
struct /* coclass */ SCPI_CALCulate_SELected_LIMit;
struct __declspec(uuid("5470af84-2ea7-4230-af94-fd9381c924b2"))
/* dual interface */ ISCPI_CALCulate_SELected_LIMit_DISPlay;
struct /* coclass */ SCPI_CALCulate_SELected_LIMit_DISPlay;
struct __declspec(uuid("d282f97a-bd6a-413e-b6a9-85e6d26d4ed9"))
/* dual interface */ ISCPI_CALCulate_SELected_MARKer;
struct /* coclass */ SCPI_CALCulate_SELected_MARKer;
struct __declspec(uuid("b8fa3b79-6cd0-46f6-b469-5a053c5c1ce9"))
/* dual interface */ ISCPI_CALCulate_SELected_MARKer_BWIDth;
struct /* coclass */ SCPI_CALCulate_SELected_MARKer_BWIDth;
struct __declspec(uuid("c99aa51f-9bfa-43ee-916d-6d7b8a01a54b"))
/* dual interface */ ISCPI_CALCulate_SELected_MARKer_REFerence;
struct /* coclass */ SCPI_CALCulate_SELected_MARKer_REFerence;
struct __declspec(uuid("3f484438-df4d-45e3-851e-2598e355f479"))
/* dual interface */ ISCPI_CALCulate_SELected_MARKer_FUNCtion;
struct /* coclass */ SCPI_CALCulate_SELected_MARKer_FUNCtion;
struct __declspec(uuid("ee8c3c01-60b4-4582-8bd8-0ffe6c877731"))
/* dual interface */ ISCPI_CALCulate_SELected_MARKer_FUNCtion_DOMain;
struct /* coclass */ SCPI_CALCulate_SELected_MARKer_FUNCtion_DOMain;
struct __declspec(uuid("df541638-8c25-4a58-ba08-f0849f910b77"))
/* dual interface */ ISCPI_CALCulate_SELected_MATH;
struct /* coclass */ SCPI_CALCulate_SELected_MATH;
struct __declspec(uuid("005f282a-ada0-42bc-8f53-00c47327b9ae"))
/* dual interface */ ISCPI_CALCulate_SELected_MSTatistics;
struct /* coclass */ SCPI_CALCulate_SELected_MSTatistics;
struct __declspec(uuid("4330e8dc-126a-4353-b0f7-7e5a77f7cdcd"))
/* dual interface */ ISCPI_CALCulate_SELected_SMOothing;
struct /* coclass */ SCPI_CALCulate_SELected_SMOothing;
struct __declspec(uuid("75ad1000-3c70-4341-8d1a-4b8fa394b575"))
/* dual interface */ ISCPI_DISPlay;
struct /* coclass */ SCPI_DISPlay;
struct __declspec(uuid("5f15c1a2-4cbe-47cc-85ce-e022fa08077a"))
/* dual interface */ ISCPI_DISPlay_WINDow;
struct /* coclass */ SCPI_DISPlay_WINDow;
struct __declspec(uuid("46809295-2869-487c-b3ea-37e7294b8074"))
/* dual interface */ ISCPI_DISPlay_WINDow_TRACe;
struct /* coclass */ SCPI_DISPlay_WINDow_TRACe;
struct __declspec(uuid("aa3f48cf-b60a-439f-9564-f224293a5556"))
/* dual interface */ ISCPI_DISPlay_WINDow_TRACe_Y;
struct /* coclass */ SCPI_DISPlay_WINDow_TRACe_Y;
struct __declspec(uuid("80aefbfb-8439-4520-9bb9-211e2d72fe35"))
/* dual interface */ ISCPI_DISPlay_WINDow_TRACe_Y_SCALe;
struct /* coclass */ SCPI_DISPlay_WINDow_TRACe_Y_SCALe;
struct __declspec(uuid("e418ac5c-da19-41b1-9477-df1fffd610c2"))
/* dual interface */ ISCPI_IEEE4882;
struct /* coclass */ SCPI_IEEE4882;
struct __declspec(uuid("03ebd86a-ad90-4311-8ee9-f83daa96a446"))
/* dual interface */ ISCPI_INITiate;
struct /* coclass */ SCPI_INITiate;
struct __declspec(uuid("41e3e253-5ad8-4ee7-af92-44417cffd6a0"))
/* dual interface */ ISCPI_MMEMory;
struct /* coclass */ SCPI_MMEMory;
struct __declspec(uuid("94aad00c-8e1a-4189-b4fd-2cdf27975576"))
/* dual interface */ ISCPI_MMEMory_LOAD;
struct /* coclass */ SCPI_MMEMory_LOAD;
struct __declspec(uuid("09af183c-8f7f-4503-9518-5de23f7d553b"))
/* dual interface */ ISCPI_MMEMory_STORe;
struct /* coclass */ SCPI_MMEMory_STORe;
struct __declspec(uuid("fde9439e-96da-44cb-b0b1-ab10cf787c1b"))
/* dual interface */ ISCPI_SENSe;
struct /* coclass */ SCPI_SENSe;
struct __declspec(uuid("531314c3-428c-4ae0-8525-8325bdcd02e0"))
/* dual interface */ ISCPI_SENSe_AVERage;
struct /* coclass */ SCPI_SENSe_AVERage;
struct __declspec(uuid("42318a13-fd76-4946-9acd-04ae45187bfd"))
/* dual interface */ ISCPI_SENSe_BANDwidth;
struct /* coclass */ SCPI_SENSe_BANDwidth;
struct __declspec(uuid("3e8a3363-4f15-461d-b669-f0b8724b3137"))
/* dual interface */ ISCPI_SENSe_CORRection;
struct /* coclass */ SCPI_SENSe_CORRection;
struct __declspec(uuid("0954a3ba-07d6-4261-8241-10d3e2387f12"))
/* dual interface */ ISCPI_SENSe_FREQuency;
struct /* coclass */ SCPI_SENSe_FREQuency;
struct __declspec(uuid("f77cb816-cf58-49eb-8d33-ea99ce144ebf"))
/* dual interface */ ISCPI_SENSe_SEGMent;
struct /* coclass */ SCPI_SENSe_SEGMent;
struct __declspec(uuid("8b15f31a-99a9-44f4-be5f-00b3131c7ee6"))
/* dual interface */ ISCPI_SENSe_SWEep;
struct /* coclass */ SCPI_SENSe_SWEep;
struct __declspec(uuid("a83f1b74-7150-408f-8ae4-15d4c2cf1647"))
/* dual interface */ ISCPI_SOURce;
struct /* coclass */ SCPI_SOURce;
struct __declspec(uuid("e21ccd54-bbf8-474d-a189-900c036338c0"))
/* dual interface */ ISCPI_SOURce_POWer;
struct /* coclass */ SCPI_SOURce_POWer;
struct __declspec(uuid("abb03e6c-ef6d-4d45-bdb0-e37a10b89abc"))
/* dual interface */ ISCPI_SOURce_POWer_LEVel;
struct /* coclass */ SCPI_SOURce_POWer_LEVel;
struct __declspec(uuid("8ba4eafa-6b5f-41b9-b507-50a92225889f"))
/* dual interface */ ISCPI_SOURce_POWer_LEVel_IMMediate;
struct /* coclass */ SCPI_SOURce_POWer_LEVel_IMMediate;
struct __declspec(uuid("ec6f07a4-4e95-474c-bad3-6aaa375bf948"))
/* dual interface */ ISCPI_SOURce_POWer_LEVel_SLOPe;
struct /* coclass */ SCPI_SOURce_POWer_LEVel_SLOPe;
struct __declspec(uuid("8854034f-06d7-437c-8251-7ff2922c63fa"))
/* dual interface */ ISCPI_SYSTem;
struct /* coclass */ SCPI_SYSTem;
struct __declspec(uuid("0aebccd1-58a8-408d-b586-c17d32679ebe"))
/* dual interface */ ISCPI_TRIGger;
struct /* coclass */ SCPI_TRIGger;
struct __declspec(uuid("606e55f4-69cb-4b15-9029-98cee282b688"))
/* dual interface */ ISCPI_TRIGger_SEQuence;
struct /* coclass */ SCPI_TRIGger_SEQuence;
struct __declspec(uuid("96e82188-2f18-40b4-8bd2-1eb4de9710c8"))
/* interface */ IStateObserver;
struct __declspec(uuid("76eb83a9-86e3-4e1c-a5e1-bd8f25b0d1c6"))
/* interface */ IStateObserverEvents;
struct /* coclass */ StateObserver;
struct __declspec(uuid("f7b863f6-e877-4e29-97d1-99ef69f70882"))
/* dual interface */ ISCPI_STATus;
struct /* coclass */ SCPI_STATus;
struct __declspec(uuid("f0119ba8-d505-46cc-82b0-c6a3801d543d"))
/* dual interface */ ISCPI_STATus_OPERation;
struct /* coclass */ SCPI_STATus_OPERation;
struct __declspec(uuid("e4c843d9-9ef2-450b-985e-907eec09375a"))
/* dual interface */ ISCPI_STATus_QUEStionable;
struct /* coclass */ SCPI_STATus_QUEStionable;
struct __declspec(uuid("847d57fb-30fd-4abe-b9b6-e692e121aaac"))
/* dual interface */ ISCPI_STATus_QUEStionable_LIMit;
struct /* coclass */ SCPI_STATus_QUEStionable_LIMit;
struct __declspec(uuid("d4dbce24-96b7-4319-9c07-9fe1c70240d3"))
/* dual interface */ ISCPI_STATus_QUEStionable_LIMit_CHANnel;
struct /* coclass */ SCPI_STATus_QUEStionable_LIMit_CHANnel;
struct __declspec(uuid("2bb35c3c-d175-48d4-b5af-70d493714eeb"))
/* dual interface */ ISCPI_SENSe_CORRection_COLLect;
struct /* coclass */ SCPI_SENSe_CORRection_COLLect;
struct __declspec(uuid("a0d4b7c0-d218-483b-991f-9405897ede1c"))
/* dual interface */ ISCPI_SENSe_CORRection_COLLect_ACQuire;
struct /* coclass */ SCPI_SENSe_CORRection_COLLect_ACQuire;
struct __declspec(uuid("8c73d5a9-5696-475a-9a2d-b712e22cee85"))
/* dual interface */ ISCPI_SENSe_CORRection_COLLect_CKIT;
struct /* coclass */ SCPI_SENSe_CORRection_COLLect_CKIT;
struct __declspec(uuid("d9ea9a69-35fe-4331-8fb8-128db6fb80c0"))
/* dual interface */ ISCPI_SENSe_CORRection_COLLect_CKIT_ORDer;
struct /* coclass */ SCPI_SENSe_CORRection_COLLect_CKIT_ORDer;
struct __declspec(uuid("d520fb28-fc58-4a64-afe6-c152bc483895"))
/* dual interface */ ISCPI_OUTPut;
struct /* coclass */ SCPI_OUTPut;
struct __declspec(uuid("6e59d64d-7a17-4979-81ad-7963a28fe2f8"))
/* dual interface */ ISCPI_DISPlay_WINDow_Y;
struct /* coclass */ SCPI_DISPlay_WINDow_Y;
struct __declspec(uuid("a414c983-bdeb-4582-9c64-84a15ecb6d2c"))
/* dual interface */ ISCPI_DISPlay_WINDow_Y_SCALe;
struct /* coclass */ SCPI_DISPlay_WINDow_Y_SCALe;
struct __declspec(uuid("6bb9b822-dc5f-4b7f-b40d-471dc803b748"))
/* dual interface */ ISCPI_CALCulate_SELected_RLIMit;
struct /* coclass */ SCPI_CALCulate_SELected_RLIMit;
struct __declspec(uuid("3de7753b-e969-43b7-a187-a6b71cdcbf3d"))
/* dual interface */ ISCPI_CALCulate_SELected_RLIMit_DISPlay;
struct /* coclass */ SCPI_CALCulate_SELected_RLIMit_DISPlay;
struct __declspec(uuid("4944e500-0a49-4510-8074-f769e2ea60a9"))
/* dual interface */ ISCPI_CALCulate_SELected_RLIMit_REPort;
struct /* coclass */ SCPI_CALCulate_SELected_RLIMit_REPort;
struct __declspec(uuid("6419347b-07eb-4941-b337-153ae8074dd8"))
/* dual interface */ ISCPI_STATus_QUEStionable_RLIMit;
struct /* coclass */ SCPI_STATus_QUEStionable_RLIMit;
struct __declspec(uuid("e229ff3f-8872-4b9f-89ff-39bbfde02ef6"))
/* dual interface */ ISCPI_STATus_QUEStionable_RLIMit_CHANnel;
struct /* coclass */ SCPI_STATus_QUEStionable_RLIMit_CHANnel;
struct __declspec(uuid("d4b21b58-6d4b-44d4-a6cb-66e1e5a39cc6"))
/* dual interface */ ISCPI_SENSe_CORRection_COLLect_METHod;
struct /* coclass */ SCPI_SENSe_CORRection_COLLect_METHod;
struct __declspec(uuid("792767c1-d59f-4b45-8124-604bc6327a13"))
/* dual interface */ ISCPI_SENSe_CORRection_COLLect_METHod_RESPonse;
struct /* coclass */ SCPI_SENSe_CORRection_COLLect_METHod_RESPonse;
struct __declspec(uuid("ec3d4954-57da-463a-acd0-d0c0b21725b2"))
/* dual interface */ ISCPI_SENSe_CORRection_COEFficient;
struct /* coclass */ SCPI_SENSe_CORRection_COEFficient;
struct __declspec(uuid("2842e8c5-2adc-4011-a346-b34f22d9245b"))
/* dual interface */ ISCPI_SENSe_CORRection_COLLect_CKIT_STAN;
struct /* coclass */ SCPI_SENSe_CORRection_COLLect_CKIT_STAN;
struct __declspec(uuid("ae6c920b-f8d6-40bd-8d37-6564dfc27f56"))
/* dual interface */ ISCPI_SENSe_CORRection_EXTension;
struct /* coclass */ SCPI_SENSe_CORRection_EXTension;
struct __declspec(uuid("8842f309-829e-45dc-80bc-b5fa0855bc1a"))
/* dual interface */ ISCPI_SENSe_CORRection_EXTension_PORT;
struct /* coclass */ SCPI_SENSe_CORRection_EXTension_PORT;
struct __declspec(uuid("e84a8dba-be41-47a5-ae7b-1c4b0998cbb8"))
/* dual interface */ ISCPI_SENSe_CORRection_IMPedance;
struct /* coclass */ SCPI_SENSe_CORRection_IMPedance;
struct __declspec(uuid("76a29624-11cd-4fa5-a221-d420145d4730"))
/* dual interface */ ISCPI_SENSe_CORRection_IMPedance_INPut;
struct /* coclass */ SCPI_SENSe_CORRection_IMPedance_INPut;
struct __declspec(uuid("ed48b06e-d2b0-4db8-8991-3da9638d2156"))
/* dual interface */ ISCPI_SENSe_CORRection_EXTension_PORT_INCLude;
struct /* coclass */ SCPI_SENSe_CORRection_EXTension_PORT_INCLude;
struct __declspec(uuid("4e9f015e-89b0-4f14-8d16-04f582cf6aa2"))
/* dual interface */ ISCPI_SENSe_CORRection_RECeiver;
struct /* coclass */ SCPI_SENSe_CORRection_RECeiver;
struct __declspec(uuid("8875caea-bd99-487d-a481-1b277d8520dc"))
/* dual interface */ ISCPI_SENSe_CORRection_RECeiver_COLLect;
struct /* coclass */ SCPI_SENSe_CORRection_RECeiver_COLLect;
struct __declspec(uuid("e8251eeb-45a4-4238-9d02-6a850f324b7b"))
/* dual interface */ ISCPI_SENSe_CORRection_COEFficient_METHod;
struct /* coclass */ SCPI_SENSe_CORRection_COEFficient_METHod;
struct __declspec(uuid("613b873f-8bc1-435c-b2c4-800514ac7e17"))
/* dual interface */ ISCPI_SENSe_CORRection_COEFficient_METHod_RESPonse;
struct /* coclass */ SCPI_SENSe_CORRection_COEFficient_METHod_RESPonse;
struct __declspec(uuid("3b359f7f-1a8f-46b1-ab53-3b09dd74bd6b"))
/* dual interface */ ISCPI_SENSe_CORRection_COLLect_DATA;
struct /* coclass */ SCPI_SENSe_CORRection_COLLect_DATA;
struct __declspec(uuid("0f6ec0da-830b-4d53-b00d-5b7ff12cb725"))
/* dual interface */ ISCPI_SENSe_CORRection_COLLect_DATA_THRU;
struct /* coclass */ SCPI_SENSe_CORRection_COLLect_DATA_THRU;
struct __declspec(uuid("dfe60c88-0edf-40d9-96aa-0272d5e41c5d"))
/* dual interface */ ISCPI_SENSe_SWEep_TIME;
struct /* coclass */ SCPI_SENSe_SWEep_TIME;
struct __declspec(uuid("3f78aca6-8363-4988-9c07-0208a9513d04"))
/* dual interface */ ISCPI_DISPlay_UPDate;
struct /* coclass */ SCPI_DISPlay_UPDate;
struct __declspec(uuid("3921db7e-7b74-4860-b4ea-248858b72398"))
/* dual interface */ ISCPI_CALCulate_SELected_CORRection;
struct /* coclass */ SCPI_CALCulate_SELected_CORRection;
struct __declspec(uuid("00459916-bdb0-401a-a2ae-8960d2c22acd"))
/* dual interface */ ISCPI_CALCulate_SELected_CORRection_EDELay;
struct /* coclass */ SCPI_CALCulate_SELected_CORRection_EDELay;
struct __declspec(uuid("f7794008-97dd-4fd8-9b36-456d6f0d769a"))
/* dual interface */ ISCPI_CALCulate_SELected_CORRection_OFFSet;
struct /* coclass */ SCPI_CALCulate_SELected_CORRection_OFFSet;
struct __declspec(uuid("04374ac9-5d0a-412e-b2d8-fba7afb3c26b"))
/* dual interface */ ISCPI_DISPlay_WINDow_TRACe_MEMory;
struct /* coclass */ SCPI_DISPlay_WINDow_TRACe_MEMory;
struct __declspec(uuid("a73d74f9-b8ad-43cd-9812-992cdcd3f8d7"))
/* dual interface */ ISCPI_DISPlay_WINDow_TRACe_ANNotation;
struct /* coclass */ SCPI_DISPlay_WINDow_TRACe_ANNotation;
struct __declspec(uuid("eb13b7cc-d36b-4551-b257-dcf47759bc8e"))
/* dual interface */ ISCPI_DISPlay_WINDow_TRACe_ANNotation_MARKer;
struct /* coclass */ SCPI_DISPlay_WINDow_TRACe_ANNotation_MARKer;
struct __declspec(uuid("14895bc7-c020-4686-9ab7-17dd890c9cca"))
/* dual interface */ ISCPI_DISPlay_WINDow_TRACe_ANNotation_MARKer_POSition;
struct /* coclass */ SCPI_DISPlay_WINDow_TRACe_ANNotation_MARKer_POSition;
struct __declspec(uuid("54055f4c-082f-435a-b05c-cab0cfcf186f"))
/* dual interface */ ISCPI_SYSTem_BEEPer;
struct /* coclass */ SCPI_SYSTem_BEEPer;
struct __declspec(uuid("2a4d6c97-f1e8-402a-ac5b-37852cc16b68"))
/* dual interface */ ISCPI_SYSTem_BEEPer_COMPlete;
struct /* coclass */ SCPI_SYSTem_BEEPer_COMPlete;
struct __declspec(uuid("fa2df669-b636-4f35-8ba6-a989a141a886"))
/* dual interface */ ISCPI_SYSTem_BEEPer_WARNing;
struct /* coclass */ SCPI_SYSTem_BEEPer_WARNing;
struct __declspec(uuid("6c96531b-e77d-4159-8053-89cc238425ce"))
/* dual interface */ ISCPI_CALCulate_SELected_CONVersion;
struct /* coclass */ SCPI_CALCulate_SELected_CONVersion;
struct __declspec(uuid("6a07c9c5-61da-4bda-9cc0-0d8c840d7161"))
/* dual interface */ ISCPI_CALCulate_SELected_FILTer;
struct /* coclass */ SCPI_CALCulate_SELected_FILTer;
struct __declspec(uuid("09b4bcaa-5d90-4886-bc36-1be3efd123f8"))
/* dual interface */ ISCPI_CALCulate_SELected_FILTer_GATE;
struct /* coclass */ SCPI_CALCulate_SELected_FILTer_GATE;
struct __declspec(uuid("7821b0a1-de17-4084-8ca4-b0bfc63abf03"))
/* dual interface */ ISCPI_CALCulate_SELected_FILTer_GATE_TIME;
struct /* coclass */ SCPI_CALCulate_SELected_FILTer_GATE_TIME;
struct __declspec(uuid("5939b8ad-a716-4569-8561-b9041f320d83"))
/* dual interface */ ISCPI_CALCulate_FSIMulator;
struct /* coclass */ SCPI_CALCulate_FSIMulator;
struct __declspec(uuid("019e04dd-10a8-4e63-8996-a3e30b924707"))
/* dual interface */ ISCPI_CALCulate_FSIMulator_SENDed;
struct /* coclass */ SCPI_CALCulate_FSIMulator_SENDed;
struct __declspec(uuid("d9f70327-68bf-4c26-ace2-54b19e5c7569"))
/* dual interface */ ISCPI_CALCulate_FSIMulator_SENDed_DEEMbed;
struct /* coclass */ SCPI_CALCulate_FSIMulator_SENDed_DEEMbed;
struct __declspec(uuid("01e04a91-88e4-49fb-8c4a-6c73acee3c08"))
/* dual interface */ ISCPI_CALCulate_FSIMulator_SENDed_DEEMbed_PORT;
struct /* coclass */ SCPI_CALCulate_FSIMulator_SENDed_DEEMbed_PORT;
struct __declspec(uuid("80d4f351-8a9d-4ff1-aea4-1eb7fbf995dd"))
/* dual interface */ ISCPI_CALCulate_FSIMulator_SENDed_DEEMbed_PORT_USER;
struct /* coclass */ SCPI_CALCulate_FSIMulator_SENDed_DEEMbed_PORT_USER;
struct __declspec(uuid("78dfa40e-2488-40ad-9ce3-6e883472bf7d"))
/* dual interface */ ISCPI_CALCulate_FSIMulator_SENDed_PMCircuit;
struct /* coclass */ SCPI_CALCulate_FSIMulator_SENDed_PMCircuit;
struct __declspec(uuid("c2eb5e9e-9760-40fa-9829-514287646156"))
/* dual interface */ ISCPI_CALCulate_FSIMulator_SENDed_PMCircuit_PORT;
struct /* coclass */ SCPI_CALCulate_FSIMulator_SENDed_PMCircuit_PORT;
struct __declspec(uuid("eab84e0f-2006-4ebb-af91-72f9f685518c"))
/* dual interface */ ISCPI_CALCulate_FSIMulator_SENDed_PMCircuit_PORT_USER;
struct /* coclass */ SCPI_CALCulate_FSIMulator_SENDed_PMCircuit_PORT_USER;
struct __declspec(uuid("d3b336d9-fb5d-4495-84c1-523ef2cb05f7"))
/* dual interface */ ISCPI_CALCulate_FSIMulator_SENDed_ZCONversion;
struct /* coclass */ SCPI_CALCulate_FSIMulator_SENDed_ZCONversion;
struct __declspec(uuid("c16515e5-b5ea-4306-b9d2-a0760d600431"))
/* dual interface */ ISCPI_CALCulate_FSIMulator_SENDed_ZCONversion_PORT;
struct /* coclass */ SCPI_CALCulate_FSIMulator_SENDed_ZCONversion_PORT;
struct __declspec(uuid("e227d816-1362-4e84-b492-a0c8270d079a"))
/* dual interface */ ISCPI_CALCulate_FSIMulator_SENDed_ZCONversion_PORT_Z0;
struct /* coclass */ SCPI_CALCulate_FSIMulator_SENDed_ZCONversion_PORT_Z0;
struct __declspec(uuid("be6e6589-9080-4871-aa9c-4a808a732492"))
/* dual interface */ ISCPI_CALCulate_SELected_FUNCtion;
struct /* coclass */ SCPI_CALCulate_SELected_FUNCtion;
struct __declspec(uuid("0dd332a1-185e-413e-a227-80cd5c35ba18"))
/* dual interface */ ISCPI_CALCulate_SELected_FUNCtion_DOMain;
struct /* coclass */ SCPI_CALCulate_SELected_FUNCtion_DOMain;
struct __declspec(uuid("6423b2c1-89cf-49a0-9612-51cd34d676a4"))
/* dual interface */ ISCPI_CALCulate_SELected_LIMit_REPort;
struct /* coclass */ SCPI_CALCulate_SELected_LIMit_REPort;
struct __declspec(uuid("78aaa7ac-702c-48e9-be2e-cff443ae74d6"))
/* dual interface */ ISCPI_CALCulate_SELected_LIMit_OFFSet;
struct /* coclass */ SCPI_CALCulate_SELected_LIMit_OFFSet;
struct __declspec(uuid("c9416682-4a2f-443c-8064-ba815297a910"))
/* dual interface */ ISCPI_CALCulate_SELected_TRANsform;
struct /* coclass */ SCPI_CALCulate_SELected_TRANsform;
struct __declspec(uuid("32bc55c8-48f0-40b9-b47b-256963447568"))
/* dual interface */ ISCPI_CALCulate_SELected_TRANsform_TIME;
struct /* coclass */ SCPI_CALCulate_SELected_TRANsform_TIME;
struct __declspec(uuid("289f282d-5c1f-4a0d-850f-8f574c5fec6a"))
/* dual interface */ ISCPI_CALCulate_SELected_TRANsform_TIME_IMPulse;
struct /* coclass */ SCPI_CALCulate_SELected_TRANsform_TIME_IMPulse;
struct __declspec(uuid("7585c576-4dc0-4f4b-9372-c5c9043fdd4b"))
/* dual interface */ ISCPI_CALCulate_SELected_TRANsform_TIME_STEP;
struct /* coclass */ SCPI_CALCulate_SELected_TRANsform_TIME_STEP;
struct __declspec(uuid("28755084-93fd-436f-9adc-50d910dea64a"))
/* dual interface */ ISCPI_DISPlay_COLor;
struct /* coclass */ SCPI_DISPlay_COLor;
struct __declspec(uuid("74f81fd0-74dc-4de8-82c3-38a295db33f4"))
/* dual interface */ ISCPI_DISPlay_COLor_TRACe;
struct /* coclass */ SCPI_DISPlay_COLor_TRACe;
struct __declspec(uuid("7e2f44f8-c542-469c-9be6-41267ab805e6"))
/* dual interface */ ISCPI_DISPlay_WINDow_TITLe;
struct /* coclass */ SCPI_DISPlay_WINDow_TITLe;
struct __declspec(uuid("6971e0d1-4c00-4c5f-9774-39c398a70123"))
/* dual interface */ ISCPI_DISPlay_WINDow_X;
struct /* coclass */ SCPI_DISPlay_WINDow_X;
struct __declspec(uuid("b2e88782-9bfc-46ae-aaee-b75b53a0c248"))
/* dual interface */ ISCPI_HCOPy;
struct /* coclass */ SCPI_HCOPy;
struct __declspec(uuid("78071fdd-d645-4cc8-be33-7066f0f1321b"))
/* dual interface */ ISCPI_HCOPy_DATE;
struct /* coclass */ SCPI_HCOPy_DATE;
struct __declspec(uuid("c1b58c96-106f-4d2f-a5b1-c1e9bfd1358c"))
/* dual interface */ ISCPI_DISPlay_WINDow_ANNotation;
struct /* coclass */ SCPI_DISPlay_WINDow_ANNotation;
struct __declspec(uuid("0aa03b96-cd69-43ad-87ea-f2fff3edcbeb"))
/* dual interface */ ISCPI_DISPlay_WINDow_ANNotation_MARKer;
struct /* coclass */ SCPI_DISPlay_WINDow_ANNotation_MARKer;
struct __declspec(uuid("53b66689-8bf9-47ff-b5a8-b485e26ef9ed"))
/* dual interface */ ISCPI_DISPlay_WINDow_ANNotation_MARKer_ALIGn;
struct /* coclass */ SCPI_DISPlay_WINDow_ANNotation_MARKer_ALIGn;
struct __declspec(uuid("29b4da17-6a0e-4803-9edb-0cf6f958be88"))
/* dual interface */ ISCPI_DISPlay_WINDow_ANNotation_MARKer_SINGle;
struct /* coclass */ SCPI_DISPlay_WINDow_ANNotation_MARKer_SINGle;
struct __declspec(uuid("5fcc7ea6-8e20-4ddc-bb99-94a1291808ae"))
/* dual interface */ ISCPI_MMEMory_LOAD_CHANnel;
struct /* coclass */ SCPI_MMEMory_LOAD_CHANnel;
struct __declspec(uuid("ec95b11a-d81c-494c-82f3-aeb6fdb8a00b"))
/* dual interface */ ISCPI_MMEMory_STORe_CHANnel;
struct /* coclass */ SCPI_MMEMory_STORe_CHANnel;
struct __declspec(uuid("3377c2ca-118f-40a0-bbb9-eeb1e41df93c"))
/* dual interface */ ISCPI_MMEMory_STORe_SNP;
struct /* coclass */ SCPI_MMEMory_STORe_SNP;
struct __declspec(uuid("a1076422-07b5-4a33-8a68-1cb8674297c1"))
/* dual interface */ ISCPI_MMEMory_STORe_SNP_TYPE;
struct /* coclass */ SCPI_MMEMory_STORe_SNP_TYPE;
struct __declspec(uuid("d1b38cbb-f65a-4140-be1f-e63a2d2592b4"))
/* dual interface */ ISCPI_SENSe_ROSCillator;
struct /* coclass */ SCPI_SENSe_ROSCillator;
struct __declspec(uuid("a185d6ba-43ed-4b76-8ebf-b902914778eb"))
/* dual interface */ ISCPI_SERVice;
struct /* coclass */ SCPI_SERVice;
struct __declspec(uuid("872bf2dd-7581-4d1a-b50e-29e92cd9406b"))
/* dual interface */ ISCPI_SERVice_CHANnel;
struct /* coclass */ SCPI_SERVice_CHANnel;
struct __declspec(uuid("7d18ae16-2a61-4875-acf5-c9b672c47ee4"))
/* dual interface */ ISCPI_SERVice_CHANnel_TRACe;
struct /* coclass */ SCPI_SERVice_CHANnel_TRACe;
struct __declspec(uuid("e5833646-2ee5-4baf-bb93-a9d8f030c5ea"))
/* dual interface */ ISCPI_SERVice_PORT;
struct /* coclass */ SCPI_SERVice_PORT;
struct __declspec(uuid("d0d74ed1-84ad-4936-9afb-2ccd564df614"))
/* dual interface */ ISCPI_SERVice_SWEep;
struct /* coclass */ SCPI_SERVice_SWEep;
struct __declspec(uuid("4300d173-b0f1-49c4-b7a8-2aafbb3cc9d4"))
/* dual interface */ ISCPI_SERVice_SWEep_FREQuency;
struct /* coclass */ SCPI_SERVice_SWEep_FREQuency;
struct __declspec(uuid("ad50e8a7-bcea-4da3-bd36-49da6a6ece14"))
/* dual interface */ ISCPI_SENSe_SWEep_POINt;
struct /* coclass */ SCPI_SENSe_SWEep_POINt;
struct __declspec(uuid("ddb9b974-715d-4904-ad87-b383703e232f"))
/* dual interface */ ISCPI_SOURce_POWer_PORT;
struct /* coclass */ SCPI_SOURce_POWer_PORT;
struct __declspec(uuid("a40eaec0-34b3-4660-892f-cb1376af32c3"))
/* dual interface */ ISCPI_SOURce_POWer_PORT_CORRection;
struct /* coclass */ SCPI_SOURce_POWer_PORT_CORRection;
struct __declspec(uuid("98c6baf6-cbd1-4ffb-b363-b95e7909a635"))
/* dual interface */ ISCPI_SOURce_POWer_PORT_CORRection_COLLect;
struct /* coclass */ SCPI_SOURce_POWer_PORT_CORRection_COLLect;
struct __declspec(uuid("50f1f035-b6fb-43a0-844a-d4e631905cda"))
/* dual interface */ ISCPI_SYSTem_CORRection;
struct /* coclass */ SCPI_SYSTem_CORRection;
struct __declspec(uuid("19468960-f3ff-4db0-b68f-24a581e56173"))
/* dual interface */ ISCPI_CALCulate_SELected_MSTatistics_DOMain;
struct /* coclass */ SCPI_CALCulate_SELected_MSTatistics_DOMain;
struct __declspec(uuid("38196891-25c7-4a82-8c03-3b31a7014d26"))
/* dual interface */ ISCPI_CALCulate_SELected_MSTatistics_DOMain_MARKer;
struct /* coclass */ SCPI_CALCulate_SELected_MSTatistics_DOMain_MARKer;
struct __declspec(uuid("450b5ae8-911a-4723-a576-3ce43e015aae"))
/* dual interface */ ISCPI_SYSTem_TEMPerature;
struct /* coclass */ SCPI_SYSTem_TEMPerature;
struct __declspec(uuid("cc6c34e9-e376-4bad-a925-fe25997b5b95"))
/* dual interface */ ISCPI_CALCulate_TRACe;
struct /* coclass */ SCPI_CALCulate_TRACe;
struct __declspec(uuid("dda7fbab-76cb-4f01-a127-513dc721320c"))
/* dual interface */ ISCPI_CALCulate_TRACe_DATA;
struct /* coclass */ SCPI_CALCulate_TRACe_DATA;
struct __declspec(uuid("7f75d558-deb8-4dea-b41a-6d5f2bf9028d"))
/* dual interface */ ISCPI_SYSTem_COMMunicate;
struct /* coclass */ SCPI_SYSTem_COMMunicate;
struct __declspec(uuid("e5af5f08-54c3-4523-a06a-2611b0ac0e4e"))
/* dual interface */ ISCPI_SYSTem_COMMunicate_ECAL;
struct /* coclass */ SCPI_SYSTem_COMMunicate_ECAL;
struct __declspec(uuid("830274af-f45d-41ad-b11e-caece98b4612"))
/* dual interface */ ISCPI_SYSTem_COMMunicate_ECAL_TEMPerature;
struct /* coclass */ SCPI_SYSTem_COMMunicate_ECAL_TEMPerature;
struct __declspec(uuid("b55f3108-8f3d-4ddf-a37a-56e8dfe1af91"))
/* dual interface */ ISCPI_SENSe_CORRection_COLLect_ECAL;
struct /* coclass */ SCPI_SENSe_CORRection_COLLect_ECAL;
struct __declspec(uuid("0ae18f95-ed2b-4158-8668-7a39fefd037e"))
/* dual interface */ ISCPI_SENSe_CORRection_COLLect_ECAL_ORIentation;
struct /* coclass */ SCPI_SENSe_CORRection_COLLect_ECAL_ORIentation;
struct __declspec(uuid("43cec0be-5c04-47fc-8a10-9f01bedefae3"))
/* dual interface */ ISCPI_SENSe_CORRection_COLLect_ECAL_UTHRu;
struct /* coclass */ SCPI_SENSe_CORRection_COLLect_ECAL_UTHRu;
struct __declspec(uuid("8b4b6f0c-92cd-4974-917f-be935624e13d"))
/* dual interface */ ISCPI_CALCulate_SELected_MAXhold;
struct /* coclass */ SCPI_CALCulate_SELected_MAXhold;
struct __declspec(uuid("d800223a-978d-4d0d-aabe-cc1b96d27535"))
/* dual interface */ ITR5048;
struct /* coclass */ TR5048;
struct __declspec(uuid("829930f2-c411-4cb0-9255-750a78bd02a4"))
/* dual interface */ ITR7530;
struct /* coclass */ TR7530;
struct __declspec(uuid("daa00d04-bd3b-4b5a-8c15-ab9c541853f4"))
/* dual interface */ ISCPI_SENSe_CORRection_TRANsform;
struct /* coclass */ SCPI_SENSe_CORRection_TRANsform;
struct __declspec(uuid("a02dd618-15e4-40ab-9944-843424754196"))
/* dual interface */ ISCPI_SENSe_CORRection_TRANsform_TIME;
struct /* coclass */ SCPI_SENSe_CORRection_TRANsform_TIME;
struct __declspec(uuid("7a5c0685-8f67-4ff9-9673-7e059609e793"))
/* dual interface */ ISCPI_CALCulate_SELected_TRANsform_TIME_REFLection;
struct /* coclass */ SCPI_CALCulate_SELected_TRANsform_TIME_REFLection;
struct __declspec(uuid("6be6ca1b-60e3-4309-99b6-a43fe3d03970"))
/* dual interface */ ISCPI_SENSe_SWEep_REVerse;
struct /* coclass */ SCPI_SENSe_SWEep_REVerse;
struct __declspec(uuid("e45ef321-c6a6-4eca-8e51-ff0bdb392eef"))
/* dual interface */ ISCPI_DISPlay_ANNotation;
struct /* coclass */ SCPI_DISPlay_ANNotation;
struct __declspec(uuid("e11fa372-0514-4836-a7d5-56ec892ce97d"))
/* dual interface */ ISCPI_DISPlay_ANNotation_FREQuency;
struct /* coclass */ SCPI_DISPlay_ANNotation_FREQuency;
struct __declspec(uuid("1181dffe-44a2-4c74-8e02-cd8f823d3734"))
/* dual interface */ ISCPI_TRIGger_SEQuence_EXTernal;
struct /* coclass */ SCPI_TRIGger_SEQuence_EXTernal;
struct __declspec(uuid("1559e614-7c40-42f4-a640-234dd6aadbe2"))
/* dual interface */ ISCPI_MMEMory_LOAD_SNP;
struct /* coclass */ SCPI_MMEMory_LOAD_SNP;
struct __declspec(uuid("26c49756-f9be-49f8-b600-ba1503ebd230"))
/* dual interface */ ISCPI_MMEMory_LOAD_SNP_TRACe;
struct /* coclass */ SCPI_MMEMory_LOAD_SNP_TRACe;
struct __declspec(uuid("d70c9fe9-1619-4bdd-97a4-d01e6236f15f"))
/* dual interface */ ISCPI_SENSe_OFFSet;
struct /* coclass */ SCPI_SENSe_OFFSet;
struct __declspec(uuid("422e0590-9568-4890-8641-2534254a22d8"))
/* dual interface */ ISCPI_SENSe_OFFSet_PORT;
struct /* coclass */ SCPI_SENSe_OFFSet_PORT;
struct __declspec(uuid("b3ce41a7-e763-45fb-85f0-5e7f69d636b4"))
/* dual interface */ ISCPI_SENSe_OFFSet_PORT_FREQuency;
struct /* coclass */ SCPI_SENSe_OFFSet_PORT_FREQuency;
struct __declspec(uuid("f4103226-6371-4ab8-b0dc-4eb02921cf2c"))
/* dual interface */ ISCPI_SENSe_OFFSet_ADJust;
struct /* coclass */ SCPI_SENSe_OFFSet_ADJust;
struct __declspec(uuid("2fbed54c-f36e-4c43-ae2b-2d627644a0ba"))
/* dual interface */ ISCPI_SENSe_OFFSet_ADJust_CONTinuous;
struct /* coclass */ SCPI_SENSe_OFFSet_ADJust_CONTinuous;
struct __declspec(uuid("10f630f3-a153-458c-84fa-016b1984d6b3"))
/* dual interface */ ISCPI_SENSe_DATA;
struct /* coclass */ SCPI_SENSe_DATA;
struct __declspec(uuid("9d563b19-8ff2-48a1-a202-63b37e9d6614"))
/* dual interface */ ITRVNA;
struct /* coclass */ TRVNA;
struct __declspec(uuid("9eb0fe00-082f-4906-936f-9eb7c1e00e67"))
/* dual interface */ ISCPI_SOURce_REFerence;
struct /* coclass */ SCPI_SOURce_REFerence;
struct __declspec(uuid("501e9f61-7042-422c-b3a8-b1d953bf755d"))
/* dual interface */ ISCPI_SOURce_REFerence_CORRection;
struct /* coclass */ SCPI_SOURce_REFerence_CORRection;
struct __declspec(uuid("70d15d0c-039e-45f9-9632-fd58aa315960"))
/* dual interface */ ISCPI_SENSe_VVM_FREQuency;
struct /* coclass */ SCPI_SENSe_VVM_FREQuency;
struct __declspec(uuid("227462f6-b959-4c1d-b8f6-0e3046a7d0bc"))
/* dual interface */ ISCPI_SENSe_VVM_REFerence;
struct /* coclass */ SCPI_SENSe_VVM_REFerence;
struct __declspec(uuid("8a98561c-976d-47a8-bacf-50c5461a6084"))
/* dual interface */ ISCPI_SENSe_VVM_TABLe;
struct /* coclass */ SCPI_SENSe_VVM_TABLe;
struct __declspec(uuid("07a02e47-8f21-4325-b039-5985aca72a05"))
/* dual interface */ ISCPI_SENSe_VVM;
struct /* coclass */ SCPI_SENSe_VVM;
struct __declspec(uuid("99c98828-a742-4392-a823-a89f7dda9f01"))
/* dual interface */ ISCPI_SENSe_VVM_DISPlay;
struct /* coclass */ SCPI_SENSe_VVM_DISPlay;
struct __declspec(uuid("adb06a8c-d7a2-41e7-a112-340af082da43"))
/* dual interface */ ISCPI_SENSe_VVM_DISPlay_FONT;
struct /* coclass */ SCPI_SENSe_VVM_DISPlay_FONT;
struct __declspec(uuid("714fbbdf-06e6-4134-866f-787efb4f012f"))
/* dual interface */ ISCPI_EVENts;
struct __declspec(uuid("c15535bb-2428-4fc4-8048-41e8ef80a5da"))
/* dispinterface */ ISCPI_EVENtsEvents;
struct /* coclass */ SCPI_EVENts;
struct __declspec(uuid("977c3bd5-7aa5-40e8-95ca-b6408ef23fdf"))
/* dual interface */ ISCPI_SENSe_CORRection_COLLect_ECAL_CHECk;
struct /* coclass */ SCPI_SENSe_CORRection_COLLect_ECAL_CHECk;
struct __declspec(uuid("aa2fe89a-eed2-45d2-8566-0d09eee96af0"))
/* dual interface */ ISCPI_SENSe_CORRection_EXTension_AUTO;
struct /* coclass */ SCPI_SENSe_CORRection_EXTension_AUTO;
struct __declspec(uuid("7164c686-722b-4743-bb83-458d985bdc42"))
/* dual interface */ ISCPI_SENSe_CORRection_EXTension_AUTO_MEASure;
struct /* coclass */ SCPI_SENSe_CORRection_EXTension_AUTO_MEASure;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_PARameter, __uuidof(ISCPI_CALCulate_PARameter));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_DATA, __uuidof(ISCPI_CALCulate_SELected_DATA));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_LIMit_DISPlay, __uuidof(ISCPI_CALCulate_SELected_LIMit_DISPlay));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_MARKer_BWIDth, __uuidof(ISCPI_CALCulate_SELected_MARKer_BWIDth));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_MARKer_REFerence, __uuidof(ISCPI_CALCulate_SELected_MARKer_REFerence));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_MARKer_FUNCtion_DOMain, __uuidof(ISCPI_CALCulate_SELected_MARKer_FUNCtion_DOMain));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_MARKer_FUNCtion, __uuidof(ISCPI_CALCulate_SELected_MARKer_FUNCtion));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_MARKer, __uuidof(ISCPI_CALCulate_SELected_MARKer));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_MATH, __uuidof(ISCPI_CALCulate_SELected_MATH));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_SMOothing, __uuidof(ISCPI_CALCulate_SELected_SMOothing));
_COM_SMARTPTR_TYPEDEF(ISCPI_DISPlay_WINDow_TRACe_Y_SCALe, __uuidof(ISCPI_DISPlay_WINDow_TRACe_Y_SCALe));
_COM_SMARTPTR_TYPEDEF(ISCPI_DISPlay_WINDow_TRACe_Y, __uuidof(ISCPI_DISPlay_WINDow_TRACe_Y));
_COM_SMARTPTR_TYPEDEF(ISCPI_IEEE4882, __uuidof(ISCPI_IEEE4882));
_COM_SMARTPTR_TYPEDEF(ISCPI_INITiate, __uuidof(ISCPI_INITiate));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_AVERage, __uuidof(ISCPI_SENSe_AVERage));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_BANDwidth, __uuidof(ISCPI_SENSe_BANDwidth));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_FREQuency, __uuidof(ISCPI_SENSe_FREQuency));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_SEGMent, __uuidof(ISCPI_SENSe_SEGMent));
_COM_SMARTPTR_TYPEDEF(ISCPI_SOURce_POWer_LEVel_IMMediate, __uuidof(ISCPI_SOURce_POWer_LEVel_IMMediate));
_COM_SMARTPTR_TYPEDEF(ISCPI_SOURce_POWer_LEVel_SLOPe, __uuidof(ISCPI_SOURce_POWer_LEVel_SLOPe));
_COM_SMARTPTR_TYPEDEF(ISCPI_SOURce_POWer_LEVel, __uuidof(ISCPI_SOURce_POWer_LEVel));
_COM_SMARTPTR_TYPEDEF(IStateObserver, __uuidof(IStateObserver));
_COM_SMARTPTR_TYPEDEF(IStateObserverEvents, __uuidof(IStateObserverEvents));
_COM_SMARTPTR_TYPEDEF(ISCPI_STATus_OPERation, __uuidof(ISCPI_STATus_OPERation));
_COM_SMARTPTR_TYPEDEF(ISCPI_STATus_QUEStionable_LIMit_CHANnel, __uuidof(ISCPI_STATus_QUEStionable_LIMit_CHANnel));
_COM_SMARTPTR_TYPEDEF(ISCPI_STATus_QUEStionable_LIMit, __uuidof(ISCPI_STATus_QUEStionable_LIMit));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection_COLLect_ACQuire, __uuidof(ISCPI_SENSe_CORRection_COLLect_ACQuire));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection_COLLect_CKIT_ORDer, __uuidof(ISCPI_SENSe_CORRection_COLLect_CKIT_ORDer));
_COM_SMARTPTR_TYPEDEF(ISCPI_OUTPut, __uuidof(ISCPI_OUTPut));
_COM_SMARTPTR_TYPEDEF(ISCPI_DISPlay_WINDow_Y_SCALe, __uuidof(ISCPI_DISPlay_WINDow_Y_SCALe));
_COM_SMARTPTR_TYPEDEF(ISCPI_DISPlay_WINDow_Y, __uuidof(ISCPI_DISPlay_WINDow_Y));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_RLIMit_DISPlay, __uuidof(ISCPI_CALCulate_SELected_RLIMit_DISPlay));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_RLIMit_REPort, __uuidof(ISCPI_CALCulate_SELected_RLIMit_REPort));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_RLIMit, __uuidof(ISCPI_CALCulate_SELected_RLIMit));
_COM_SMARTPTR_TYPEDEF(ISCPI_STATus_QUEStionable_RLIMit_CHANnel, __uuidof(ISCPI_STATus_QUEStionable_RLIMit_CHANnel));
_COM_SMARTPTR_TYPEDEF(ISCPI_STATus_QUEStionable_RLIMit, __uuidof(ISCPI_STATus_QUEStionable_RLIMit));
_COM_SMARTPTR_TYPEDEF(ISCPI_STATus_QUEStionable, __uuidof(ISCPI_STATus_QUEStionable));
_COM_SMARTPTR_TYPEDEF(ISCPI_STATus, __uuidof(ISCPI_STATus));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection_COLLect_METHod_RESPonse, __uuidof(ISCPI_SENSe_CORRection_COLLect_METHod_RESPonse));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection_COLLect_METHod, __uuidof(ISCPI_SENSe_CORRection_COLLect_METHod));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection_COLLect_CKIT_STAN, __uuidof(ISCPI_SENSe_CORRection_COLLect_CKIT_STAN));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection_COLLect_CKIT, __uuidof(ISCPI_SENSe_CORRection_COLLect_CKIT));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection_IMPedance_INPut, __uuidof(ISCPI_SENSe_CORRection_IMPedance_INPut));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection_IMPedance, __uuidof(ISCPI_SENSe_CORRection_IMPedance));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection_EXTension_PORT_INCLude, __uuidof(ISCPI_SENSe_CORRection_EXTension_PORT_INCLude));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection_EXTension_PORT, __uuidof(ISCPI_SENSe_CORRection_EXTension_PORT));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection_RECeiver_COLLect, __uuidof(ISCPI_SENSe_CORRection_RECeiver_COLLect));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection_RECeiver, __uuidof(ISCPI_SENSe_CORRection_RECeiver));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection_COEFficient_METHod_RESPonse, __uuidof(ISCPI_SENSe_CORRection_COEFficient_METHod_RESPonse));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection_COEFficient_METHod, __uuidof(ISCPI_SENSe_CORRection_COEFficient_METHod));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection_COEFficient, __uuidof(ISCPI_SENSe_CORRection_COEFficient));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection_COLLect_DATA_THRU, __uuidof(ISCPI_SENSe_CORRection_COLLect_DATA_THRU));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection_COLLect_DATA, __uuidof(ISCPI_SENSe_CORRection_COLLect_DATA));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_SWEep_TIME, __uuidof(ISCPI_SENSe_SWEep_TIME));
_COM_SMARTPTR_TYPEDEF(ISCPI_DISPlay_UPDate, __uuidof(ISCPI_DISPlay_UPDate));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_CORRection_EDELay, __uuidof(ISCPI_CALCulate_SELected_CORRection_EDELay));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_CORRection_OFFSet, __uuidof(ISCPI_CALCulate_SELected_CORRection_OFFSet));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_CORRection, __uuidof(ISCPI_CALCulate_SELected_CORRection));
_COM_SMARTPTR_TYPEDEF(ISCPI_DISPlay_WINDow_TRACe_MEMory, __uuidof(ISCPI_DISPlay_WINDow_TRACe_MEMory));
_COM_SMARTPTR_TYPEDEF(ISCPI_DISPlay_WINDow_TRACe_ANNotation_MARKer_POSition, __uuidof(ISCPI_DISPlay_WINDow_TRACe_ANNotation_MARKer_POSition));
_COM_SMARTPTR_TYPEDEF(ISCPI_DISPlay_WINDow_TRACe_ANNotation_MARKer, __uuidof(ISCPI_DISPlay_WINDow_TRACe_ANNotation_MARKer));
_COM_SMARTPTR_TYPEDEF(ISCPI_DISPlay_WINDow_TRACe_ANNotation, __uuidof(ISCPI_DISPlay_WINDow_TRACe_ANNotation));
_COM_SMARTPTR_TYPEDEF(ISCPI_DISPlay_WINDow_TRACe, __uuidof(ISCPI_DISPlay_WINDow_TRACe));
_COM_SMARTPTR_TYPEDEF(ISCPI_SYSTem_BEEPer_COMPlete, __uuidof(ISCPI_SYSTem_BEEPer_COMPlete));
_COM_SMARTPTR_TYPEDEF(ISCPI_SYSTem_BEEPer_WARNing, __uuidof(ISCPI_SYSTem_BEEPer_WARNing));
_COM_SMARTPTR_TYPEDEF(ISCPI_SYSTem_BEEPer, __uuidof(ISCPI_SYSTem_BEEPer));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_CONVersion, __uuidof(ISCPI_CALCulate_SELected_CONVersion));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_FILTer_GATE_TIME, __uuidof(ISCPI_CALCulate_SELected_FILTer_GATE_TIME));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_FILTer_GATE, __uuidof(ISCPI_CALCulate_SELected_FILTer_GATE));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_FILTer, __uuidof(ISCPI_CALCulate_SELected_FILTer));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_FSIMulator_SENDed_DEEMbed_PORT_USER, __uuidof(ISCPI_CALCulate_FSIMulator_SENDed_DEEMbed_PORT_USER));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_FSIMulator_SENDed_DEEMbed_PORT, __uuidof(ISCPI_CALCulate_FSIMulator_SENDed_DEEMbed_PORT));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_FSIMulator_SENDed_DEEMbed, __uuidof(ISCPI_CALCulate_FSIMulator_SENDed_DEEMbed));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_FSIMulator_SENDed_PMCircuit_PORT_USER, __uuidof(ISCPI_CALCulate_FSIMulator_SENDed_PMCircuit_PORT_USER));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_FSIMulator_SENDed_PMCircuit_PORT, __uuidof(ISCPI_CALCulate_FSIMulator_SENDed_PMCircuit_PORT));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_FSIMulator_SENDed_PMCircuit, __uuidof(ISCPI_CALCulate_FSIMulator_SENDed_PMCircuit));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_FSIMulator_SENDed_ZCONversion_PORT_Z0, __uuidof(ISCPI_CALCulate_FSIMulator_SENDed_ZCONversion_PORT_Z0));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_FSIMulator_SENDed_ZCONversion_PORT, __uuidof(ISCPI_CALCulate_FSIMulator_SENDed_ZCONversion_PORT));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_FSIMulator_SENDed_ZCONversion, __uuidof(ISCPI_CALCulate_FSIMulator_SENDed_ZCONversion));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_FSIMulator_SENDed, __uuidof(ISCPI_CALCulate_FSIMulator_SENDed));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_FSIMulator, __uuidof(ISCPI_CALCulate_FSIMulator));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_FUNCtion_DOMain, __uuidof(ISCPI_CALCulate_SELected_FUNCtion_DOMain));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_FUNCtion, __uuidof(ISCPI_CALCulate_SELected_FUNCtion));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_LIMit_REPort, __uuidof(ISCPI_CALCulate_SELected_LIMit_REPort));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_LIMit_OFFSet, __uuidof(ISCPI_CALCulate_SELected_LIMit_OFFSet));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_LIMit, __uuidof(ISCPI_CALCulate_SELected_LIMit));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_TRANsform_TIME_IMPulse, __uuidof(ISCPI_CALCulate_SELected_TRANsform_TIME_IMPulse));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_TRANsform_TIME_STEP, __uuidof(ISCPI_CALCulate_SELected_TRANsform_TIME_STEP));
_COM_SMARTPTR_TYPEDEF(ISCPI_DISPlay_COLor_TRACe, __uuidof(ISCPI_DISPlay_COLor_TRACe));
_COM_SMARTPTR_TYPEDEF(ISCPI_DISPlay_COLor, __uuidof(ISCPI_DISPlay_COLor));
_COM_SMARTPTR_TYPEDEF(ISCPI_DISPlay_WINDow_TITLe, __uuidof(ISCPI_DISPlay_WINDow_TITLe));
_COM_SMARTPTR_TYPEDEF(ISCPI_DISPlay_WINDow_X, __uuidof(ISCPI_DISPlay_WINDow_X));
_COM_SMARTPTR_TYPEDEF(ISCPI_HCOPy_DATE, __uuidof(ISCPI_HCOPy_DATE));
_COM_SMARTPTR_TYPEDEF(ISCPI_HCOPy, __uuidof(ISCPI_HCOPy));
_COM_SMARTPTR_TYPEDEF(ISCPI_DISPlay_WINDow_ANNotation_MARKer_ALIGn, __uuidof(ISCPI_DISPlay_WINDow_ANNotation_MARKer_ALIGn));
_COM_SMARTPTR_TYPEDEF(ISCPI_DISPlay_WINDow_ANNotation_MARKer_SINGle, __uuidof(ISCPI_DISPlay_WINDow_ANNotation_MARKer_SINGle));
_COM_SMARTPTR_TYPEDEF(ISCPI_DISPlay_WINDow_ANNotation_MARKer, __uuidof(ISCPI_DISPlay_WINDow_ANNotation_MARKer));
_COM_SMARTPTR_TYPEDEF(ISCPI_DISPlay_WINDow_ANNotation, __uuidof(ISCPI_DISPlay_WINDow_ANNotation));
_COM_SMARTPTR_TYPEDEF(ISCPI_DISPlay_WINDow, __uuidof(ISCPI_DISPlay_WINDow));
_COM_SMARTPTR_TYPEDEF(ISCPI_MMEMory_LOAD_CHANnel, __uuidof(ISCPI_MMEMory_LOAD_CHANnel));
_COM_SMARTPTR_TYPEDEF(ISCPI_MMEMory_STORe_CHANnel, __uuidof(ISCPI_MMEMory_STORe_CHANnel));
_COM_SMARTPTR_TYPEDEF(ISCPI_MMEMory_STORe_SNP_TYPE, __uuidof(ISCPI_MMEMory_STORe_SNP_TYPE));
_COM_SMARTPTR_TYPEDEF(ISCPI_MMEMory_STORe_SNP, __uuidof(ISCPI_MMEMory_STORe_SNP));
_COM_SMARTPTR_TYPEDEF(ISCPI_MMEMory_STORe, __uuidof(ISCPI_MMEMory_STORe));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_ROSCillator, __uuidof(ISCPI_SENSe_ROSCillator));
_COM_SMARTPTR_TYPEDEF(ISCPI_SERVice_CHANnel_TRACe, __uuidof(ISCPI_SERVice_CHANnel_TRACe));
_COM_SMARTPTR_TYPEDEF(ISCPI_SERVice_CHANnel, __uuidof(ISCPI_SERVice_CHANnel));
_COM_SMARTPTR_TYPEDEF(ISCPI_SERVice_PORT, __uuidof(ISCPI_SERVice_PORT));
_COM_SMARTPTR_TYPEDEF(ISCPI_SERVice_SWEep_FREQuency, __uuidof(ISCPI_SERVice_SWEep_FREQuency));
_COM_SMARTPTR_TYPEDEF(ISCPI_SERVice_SWEep, __uuidof(ISCPI_SERVice_SWEep));
_COM_SMARTPTR_TYPEDEF(ISCPI_SERVice, __uuidof(ISCPI_SERVice));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_SWEep_POINt, __uuidof(ISCPI_SENSe_SWEep_POINt));
_COM_SMARTPTR_TYPEDEF(ISCPI_SOURce_POWer_PORT_CORRection_COLLect, __uuidof(ISCPI_SOURce_POWer_PORT_CORRection_COLLect));
_COM_SMARTPTR_TYPEDEF(ISCPI_SOURce_POWer_PORT_CORRection, __uuidof(ISCPI_SOURce_POWer_PORT_CORRection));
_COM_SMARTPTR_TYPEDEF(ISCPI_SOURce_POWer_PORT, __uuidof(ISCPI_SOURce_POWer_PORT));
_COM_SMARTPTR_TYPEDEF(ISCPI_SOURce_POWer, __uuidof(ISCPI_SOURce_POWer));
_COM_SMARTPTR_TYPEDEF(ISCPI_SYSTem_CORRection, __uuidof(ISCPI_SYSTem_CORRection));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_MSTatistics_DOMain_MARKer, __uuidof(ISCPI_CALCulate_SELected_MSTatistics_DOMain_MARKer));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_MSTatistics_DOMain, __uuidof(ISCPI_CALCulate_SELected_MSTatistics_DOMain));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_MSTatistics, __uuidof(ISCPI_CALCulate_SELected_MSTatistics));
_COM_SMARTPTR_TYPEDEF(ISCPI_SYSTem_TEMPerature, __uuidof(ISCPI_SYSTem_TEMPerature));
_COM_SMARTPTR_TYPEDEF(ISCPI_SYSTem, __uuidof(ISCPI_SYSTem));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_TRACe_DATA, __uuidof(ISCPI_CALCulate_TRACe_DATA));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_TRACe, __uuidof(ISCPI_CALCulate_TRACe));
_COM_SMARTPTR_TYPEDEF(ISCPI_SYSTem_COMMunicate, __uuidof(ISCPI_SYSTem_COMMunicate));
_COM_SMARTPTR_TYPEDEF(ISCPI_SYSTem_COMMunicate_ECAL_TEMPerature, __uuidof(ISCPI_SYSTem_COMMunicate_ECAL_TEMPerature));
_COM_SMARTPTR_TYPEDEF(ISCPI_SYSTem_COMMunicate_ECAL, __uuidof(ISCPI_SYSTem_COMMunicate_ECAL));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection_COLLect_ECAL_ORIentation, __uuidof(ISCPI_SENSe_CORRection_COLLect_ECAL_ORIentation));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection_COLLect_ECAL_UTHRu, __uuidof(ISCPI_SENSe_CORRection_COLLect_ECAL_UTHRu));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_MAXhold, __uuidof(ISCPI_CALCulate_SELected_MAXhold));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection_TRANsform_TIME, __uuidof(ISCPI_SENSe_CORRection_TRANsform_TIME));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection_TRANsform, __uuidof(ISCPI_SENSe_CORRection_TRANsform));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_TRANsform_TIME_REFLection, __uuidof(ISCPI_CALCulate_SELected_TRANsform_TIME_REFLection));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_TRANsform_TIME, __uuidof(ISCPI_CALCulate_SELected_TRANsform_TIME));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected_TRANsform, __uuidof(ISCPI_CALCulate_SELected_TRANsform));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate_SELected, __uuidof(ISCPI_CALCulate_SELected));
_COM_SMARTPTR_TYPEDEF(ISCPI_CALCulate, __uuidof(ISCPI_CALCulate));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_SWEep_REVerse, __uuidof(ISCPI_SENSe_SWEep_REVerse));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_SWEep, __uuidof(ISCPI_SENSe_SWEep));
_COM_SMARTPTR_TYPEDEF(ISCPI_DISPlay_ANNotation_FREQuency, __uuidof(ISCPI_DISPlay_ANNotation_FREQuency));
_COM_SMARTPTR_TYPEDEF(ISCPI_DISPlay_ANNotation, __uuidof(ISCPI_DISPlay_ANNotation));
_COM_SMARTPTR_TYPEDEF(ISCPI_DISPlay, __uuidof(ISCPI_DISPlay));
_COM_SMARTPTR_TYPEDEF(ISCPI_TRIGger_SEQuence_EXTernal, __uuidof(ISCPI_TRIGger_SEQuence_EXTernal));
_COM_SMARTPTR_TYPEDEF(ISCPI_TRIGger_SEQuence, __uuidof(ISCPI_TRIGger_SEQuence));
_COM_SMARTPTR_TYPEDEF(ISCPI_TRIGger, __uuidof(ISCPI_TRIGger));
_COM_SMARTPTR_TYPEDEF(ISCPI_MMEMory_LOAD_SNP_TRACe, __uuidof(ISCPI_MMEMory_LOAD_SNP_TRACe));
_COM_SMARTPTR_TYPEDEF(ISCPI_MMEMory_LOAD_SNP, __uuidof(ISCPI_MMEMory_LOAD_SNP));
_COM_SMARTPTR_TYPEDEF(ISCPI_MMEMory_LOAD, __uuidof(ISCPI_MMEMory_LOAD));
_COM_SMARTPTR_TYPEDEF(ISCPI_MMEMory, __uuidof(ISCPI_MMEMory));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_OFFSet_PORT_FREQuency, __uuidof(ISCPI_SENSe_OFFSet_PORT_FREQuency));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_OFFSet_PORT, __uuidof(ISCPI_SENSe_OFFSet_PORT));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_OFFSet_ADJust_CONTinuous, __uuidof(ISCPI_SENSe_OFFSet_ADJust_CONTinuous));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_OFFSet_ADJust, __uuidof(ISCPI_SENSe_OFFSet_ADJust));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_OFFSet, __uuidof(ISCPI_SENSe_OFFSet));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_DATA, __uuidof(ISCPI_SENSe_DATA));
_COM_SMARTPTR_TYPEDEF(ISCPI_SOURce_REFerence_CORRection, __uuidof(ISCPI_SOURce_REFerence_CORRection));
_COM_SMARTPTR_TYPEDEF(ISCPI_SOURce_REFerence, __uuidof(ISCPI_SOURce_REFerence));
_COM_SMARTPTR_TYPEDEF(ISCPI_SOURce, __uuidof(ISCPI_SOURce));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_VVM_FREQuency, __uuidof(ISCPI_SENSe_VVM_FREQuency));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_VVM_REFerence, __uuidof(ISCPI_SENSe_VVM_REFerence));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_VVM_TABLe, __uuidof(ISCPI_SENSe_VVM_TABLe));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_VVM_DISPlay_FONT, __uuidof(ISCPI_SENSe_VVM_DISPlay_FONT));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_VVM_DISPlay, __uuidof(ISCPI_SENSe_VVM_DISPlay));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_VVM, __uuidof(ISCPI_SENSe_VVM));
_COM_SMARTPTR_TYPEDEF(ISCPI_EVENts, __uuidof(ISCPI_EVENts));
_COM_SMARTPTR_TYPEDEF(ISCPI_EVENtsEvents, __uuidof(ISCPI_EVENtsEvents));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection_COLLect_ECAL_CHECk, __uuidof(ISCPI_SENSe_CORRection_COLLect_ECAL_CHECk));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection_COLLect_ECAL, __uuidof(ISCPI_SENSe_CORRection_COLLect_ECAL));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection_COLLect, __uuidof(ISCPI_SENSe_CORRection_COLLect));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection_EXTension_AUTO_MEASure, __uuidof(ISCPI_SENSe_CORRection_EXTension_AUTO_MEASure));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection_EXTension_AUTO, __uuidof(ISCPI_SENSe_CORRection_EXTension_AUTO));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection_EXTension, __uuidof(ISCPI_SENSe_CORRection_EXTension));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe_CORRection, __uuidof(ISCPI_SENSe_CORRection));
_COM_SMARTPTR_TYPEDEF(ISCPI_SENSe, __uuidof(ISCPI_SENSe));
_COM_SMARTPTR_TYPEDEF(ISCPI, __uuidof(ISCPI));
_COM_SMARTPTR_TYPEDEF(ITR1300, __uuidof(ITR1300));
_COM_SMARTPTR_TYPEDEF(ITR5048, __uuidof(ITR5048));
_COM_SMARTPTR_TYPEDEF(ITR7530, __uuidof(ITR7530));
_COM_SMARTPTR_TYPEDEF(ITRVNA, __uuidof(ITRVNA));

//
// Type library items
//

struct __declspec(uuid("9a8c25f4-fa4a-49c2-bd06-7f4f9f9a3ffd"))
TR1300;
    // [ default ] interface ITR1300

struct __declspec(uuid("55a41d6a-1228-4df4-9e54-52c97a7fa355"))
SCPI;
    // [ default ] interface ISCPI

struct __declspec(uuid("2d31d007-7da3-48ec-a56e-45657485bb03"))
SCPI_CALCulate;
    // [ default ] interface ISCPI_CALCulate

struct __declspec(uuid("0329fdda-08f2-48b6-93d8-b18b917f76bd"))
ISCPI_CALCulate_PARameter : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCOUNt,put=PutCOUNt))
    long COUNt;
    __declspec(property(get=GetDEFine,put=PutDEFine))
    _bstr_t DEFine;
    __declspec(property(get=GetSPORt,put=PutSPORt))
    long SPORt;

    //
    // Wrapper methods for error-handling
    //

    long GetCOUNt ( );
    void PutCOUNt (
        long Value );
    _bstr_t GetDEFine ( );
    void PutDEFine (
        _bstr_t Value );
    HRESULT SELect ( );
    long GetSPORt ( );
    void PutSPORt (
        long Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_COUNt (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_COUNt (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_DEFine (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_DEFine (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall raw_SELect ( ) = 0;
      virtual HRESULT __stdcall get_SPORt (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_SPORt (
        /*[in]*/ long Value ) = 0;
};

struct __declspec(uuid("c80f4b3e-2f12-4d4b-829b-1067a40e231a"))
SCPI_CALCulate_PARameter;
    // [ default ] interface ISCPI_CALCulate_PARameter

struct __declspec(uuid("cf1aecae-9399-4ec2-a2ac-3743ffe80af3"))
SCPI_CALCulate_SELected;
    // [ default ] interface ISCPI_CALCulate_SELected

struct __declspec(uuid("80df3391-33ba-4957-871c-721049d18c80"))
ISCPI_CALCulate_SELected_DATA : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFDATa,put=PutFDATa))
    _variant_t FDATa;
    __declspec(property(get=GetFMEMory,put=PutFMEMory))
    _variant_t FMEMory;
    __declspec(property(get=GetSDATa,put=PutSDATa))
    _variant_t SDATa;
    __declspec(property(get=GetSMEMory,put=PutSMEMory))
    _variant_t SMEMory;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetFDATa ( );
    void PutFDATa (
        const _variant_t & Value );
    _variant_t GetFMEMory ( );
    void PutFMEMory (
        const _variant_t & Value );
    _variant_t GetSDATa ( );
    void PutSDATa (
        const _variant_t & Value );
    _variant_t GetSMEMory ( );
    void PutSMEMory (
        const _variant_t & Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_FDATa (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_FDATa (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_FMEMory (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_FMEMory (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_SDATa (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_SDATa (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_SMEMory (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_SMEMory (
        /*[in]*/ VARIANT Value ) = 0;
};

struct __declspec(uuid("bceeb5c3-384d-4830-9204-90c5ad121e70"))
SCPI_CALCulate_SELected_DATA;
    // [ default ] interface ISCPI_CALCulate_SELected_DATA

struct __declspec(uuid("624eb5ca-1c83-4748-87b1-dd74f3c9154c"))
SCPI_CALCulate_SELected_LIMit;
    // [ default ] interface ISCPI_CALCulate_SELected_LIMit

struct __declspec(uuid("5470af84-2ea7-4230-af94-fd9381c924b2"))
ISCPI_CALCulate_SELected_LIMit_DISPlay : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("17a2295c-d11e-4a48-a9f4-0f45b5d7e63d"))
SCPI_CALCulate_SELected_LIMit_DISPlay;
    // [ default ] interface ISCPI_CALCulate_SELected_LIMit_DISPlay

struct __declspec(uuid("74f310f2-a540-4f3e-a495-954be7c8dd81"))
SCPI_CALCulate_SELected_MARKer;
    // [ default ] interface ISCPI_CALCulate_SELected_MARKer

struct __declspec(uuid("b8fa3b79-6cd0-46f6-b469-5a053c5c1ce9"))
ISCPI_CALCulate_SELected_MARKer_BWIDth : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDATA))
    _variant_t DATA;
    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;
    __declspec(property(get=GetTHReshold,put=PutTHReshold))
    double THReshold;
    __declspec(property(get=GetTYPE,put=PutTYPE))
    _bstr_t TYPE;
    __declspec(property(get=GetREFerence,put=PutREFerence))
    _bstr_t REFerence;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetDATA ( );
    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );
    double GetTHReshold ( );
    void PutTHReshold (
        double Value );
    _bstr_t GetTYPE ( );
    void PutTYPE (
        _bstr_t Value );
    _bstr_t GetREFerence ( );
    void PutREFerence (
        _bstr_t Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DATA (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_THReshold (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_THReshold (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_TYPE (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_TYPE (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_REFerence (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_REFerence (
        /*[in]*/ BSTR Value ) = 0;
};

struct __declspec(uuid("225a5f83-470a-471c-b8fe-7c5e5fcca093"))
SCPI_CALCulate_SELected_MARKer_BWIDth;
    // [ default ] interface ISCPI_CALCulate_SELected_MARKer_BWIDth

struct __declspec(uuid("c99aa51f-9bfa-43ee-916d-6d7b8a01a54b"))
ISCPI_CALCulate_SELected_MARKer_REFerence : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("a35fb887-c238-49bb-87b3-3abd4c40c0df"))
SCPI_CALCulate_SELected_MARKer_REFerence;
    // [ default ] interface ISCPI_CALCulate_SELected_MARKer_REFerence

struct __declspec(uuid("439f8a5d-0526-464b-b242-5cc973638b0e"))
SCPI_CALCulate_SELected_MARKer_FUNCtion;
    // [ default ] interface ISCPI_CALCulate_SELected_MARKer_FUNCtion

struct __declspec(uuid("ee8c3c01-60b4-4582-8bd8-0ffe6c877731"))
ISCPI_CALCulate_SELected_MARKer_FUNCtion_DOMain : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSTARt,put=PutSTARt))
    double STARt;
    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;
    __declspec(property(get=GetSTOP,put=PutSTOP))
    double STOP;
    __declspec(property(get=GetCOUPle,put=PutCOUPle))
    VARIANT_BOOL COUPle;

    //
    // Wrapper methods for error-handling
    //

    double GetSTARt ( );
    void PutSTARt (
        double Value );
    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );
    double GetSTOP ( );
    void PutSTOP (
        double Value );
    VARIANT_BOOL GetCOUPle ( );
    void PutCOUPle (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_STARt (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_STARt (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_STOP (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_STOP (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_COUPle (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_COUPle (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("3f484438-df4d-45e3-851e-2598e355f479"))
ISCPI_CALCulate_SELected_MARKer_FUNCtion : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDOMain))
    ISCPI_CALCulate_SELected_MARKer_FUNCtion_DOMainPtr DOMain;
    __declspec(property(get=GetPEXCursion,put=PutPEXCursion))
    double PEXCursion;
    __declspec(property(get=GetPPOLarity,put=PutPPOLarity))
    _bstr_t PPOLarity;
    __declspec(property(get=GetTARGet,put=PutTARGet))
    double TARGet;
    __declspec(property(get=GetTRACking,put=PutTRACking))
    VARIANT_BOOL TRACking;
    __declspec(property(get=GetTTRansition,put=PutTTRansition))
    _bstr_t TTRansition;
    __declspec(property(get=GetTYPE,put=PutTYPE))
    _bstr_t TYPE;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_CALCulate_SELected_MARKer_FUNCtion_DOMainPtr GetDOMain ( );
    HRESULT EXECute ( );
    double GetPEXCursion ( );
    void PutPEXCursion (
        double Value );
    _bstr_t GetPPOLarity ( );
    void PutPPOLarity (
        _bstr_t Value );
    double GetTARGet ( );
    void PutTARGet (
        double Value );
    VARIANT_BOOL GetTRACking ( );
    void PutTRACking (
        VARIANT_BOOL Value );
    _bstr_t GetTTRansition ( );
    void PutTTRansition (
        _bstr_t Value );
    _bstr_t GetTYPE ( );
    void PutTYPE (
        _bstr_t Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DOMain (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_MARKer_FUNCtion_DOMain * * Value ) = 0;
      virtual HRESULT __stdcall raw_EXECute ( ) = 0;
      virtual HRESULT __stdcall get_PEXCursion (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_PEXCursion (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_PPOLarity (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_PPOLarity (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_TARGet (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_TARGet (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_TRACking (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_TRACking (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_TTRansition (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_TTRansition (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_TYPE (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_TYPE (
        /*[in]*/ BSTR Value ) = 0;
};

struct __declspec(uuid("d282f97a-bd6a-413e-b6a9-85e6d26d4ed9"))
ISCPI_CALCulate_SELected_MARKer : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBWIDth))
    ISCPI_CALCulate_SELected_MARKer_BWIDthPtr BWIDth;
    __declspec(property(get=GetCOUPle,put=PutCOUPle))
    VARIANT_BOOL COUPle;
    __declspec(property(get=GetREFerence))
    ISCPI_CALCulate_SELected_MARKer_REFerencePtr REFerence;
    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;
    __declspec(property(get=GetX,put=PutX))
    double X;
    __declspec(property(get=GetY))
    _variant_t Y;
    __declspec(property(get=GetFUNCtion))
    ISCPI_CALCulate_SELected_MARKer_FUNCtionPtr FUNCtion;
    __declspec(property(put=PutSET_))
    _bstr_t SET_;
    __declspec(property(get=GetCOUNt,put=PutCOUNt))
    long COUNt;

    //
    // Wrapper methods for error-handling
    //

    HRESULT ACTivate ( );
    ISCPI_CALCulate_SELected_MARKer_BWIDthPtr GetBWIDth ( );
    VARIANT_BOOL GetCOUPle ( );
    void PutCOUPle (
        VARIANT_BOOL Value );
    ISCPI_CALCulate_SELected_MARKer_REFerencePtr GetREFerence ( );
    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );
    double GetX ( );
    void PutX (
        double Value );
    _variant_t GetY ( );
    ISCPI_CALCulate_SELected_MARKer_FUNCtionPtr GetFUNCtion ( );
    void PutSET_ (
        _bstr_t _arg1 );
    long GetCOUNt ( );
    void PutCOUNt (
        long Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_ACTivate ( ) = 0;
      virtual HRESULT __stdcall get_BWIDth (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_MARKer_BWIDth * * Value ) = 0;
      virtual HRESULT __stdcall get_COUPle (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_COUPle (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_REFerence (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_MARKer_REFerence * * Value ) = 0;
      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_X (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_X (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_Y (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall get_FUNCtion (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_MARKer_FUNCtion * * Value ) = 0;
      virtual HRESULT __stdcall put_SET_ (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_COUNt (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_COUNt (
        /*[in]*/ long Value ) = 0;
};

struct __declspec(uuid("1417f447-5ddd-45f6-adc0-8855386eb368"))
SCPI_CALCulate_SELected_MARKer_FUNCtion_DOMain;
    // [ default ] interface ISCPI_CALCulate_SELected_MARKer_FUNCtion_DOMain

struct __declspec(uuid("df541638-8c25-4a58-ba08-f0849f910b77"))
ISCPI_CALCulate_SELected_MATH : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFUNCtion,put=PutFUNCtion))
    _bstr_t FUNCtion;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetFUNCtion ( );
    void PutFUNCtion (
        _bstr_t Value );
    HRESULT MEMorize ( );
    HRESULT DELete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_FUNCtion (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_FUNCtion (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall raw_MEMorize ( ) = 0;
      virtual HRESULT __stdcall raw_DELete ( ) = 0;
};

struct __declspec(uuid("5851a460-ef1f-4b52-a9de-3f467efd02f1"))
SCPI_CALCulate_SELected_MATH;
    // [ default ] interface ISCPI_CALCulate_SELected_MATH

struct __declspec(uuid("9f1896d1-ab11-4aa7-ba39-89bb25c44c57"))
SCPI_CALCulate_SELected_MSTatistics;
    // [ default ] interface ISCPI_CALCulate_SELected_MSTatistics

struct __declspec(uuid("4330e8dc-126a-4353-b0f7-7e5a77f7cdcd"))
ISCPI_CALCulate_SELected_SMOothing : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAPERture,put=PutAPERture))
    double APERture;
    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;

    //
    // Wrapper methods for error-handling
    //

    double GetAPERture ( );
    void PutAPERture (
        double Value );
    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_APERture (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_APERture (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("b1aeca88-9706-47c4-bfcd-a7c322ba89ee"))
SCPI_CALCulate_SELected_SMOothing;
    // [ default ] interface ISCPI_CALCulate_SELected_SMOothing

struct __declspec(uuid("096bce79-5dca-43de-b9f5-30d7167033b8"))
SCPI_DISPlay;
    // [ default ] interface ISCPI_DISPlay

struct __declspec(uuid("54787197-4b53-498c-a303-24115363423d"))
SCPI_DISPlay_WINDow;
    // [ default ] interface ISCPI_DISPlay_WINDow

struct __declspec(uuid("04fac42c-a98f-46b8-822b-94fcfea9cbaa"))
SCPI_DISPlay_WINDow_TRACe;
    // [ default ] interface ISCPI_DISPlay_WINDow_TRACe

struct __declspec(uuid("c4ab8a6c-b6ba-4d26-85b9-c98e2b18a802"))
SCPI_DISPlay_WINDow_TRACe_Y;
    // [ default ] interface ISCPI_DISPlay_WINDow_TRACe_Y

struct __declspec(uuid("80aefbfb-8439-4520-9bb9-211e2d72fe35"))
ISCPI_DISPlay_WINDow_TRACe_Y_SCALe : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetPDIVision,put=PutPDIVision))
    double PDIVision;
    __declspec(property(get=GetRLEVel,put=PutRLEVel))
    double RLEVel;
    __declspec(property(get=GetRPOSition,put=PutRPOSition))
    long RPOSition;

    //
    // Wrapper methods for error-handling
    //

    HRESULT AUTO ( );
    double GetPDIVision ( );
    void PutPDIVision (
        double Value );
    double GetRLEVel ( );
    void PutRLEVel (
        double Value );
    long GetRPOSition ( );
    void PutRPOSition (
        long Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_AUTO ( ) = 0;
      virtual HRESULT __stdcall get_PDIVision (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_PDIVision (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_RLEVel (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_RLEVel (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_RPOSition (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_RPOSition (
        /*[in]*/ long Value ) = 0;
};

struct __declspec(uuid("aa3f48cf-b60a-439f-9564-f224293a5556"))
ISCPI_DISPlay_WINDow_TRACe_Y : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSCALe))
    ISCPI_DISPlay_WINDow_TRACe_Y_SCALePtr SCALe;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_DISPlay_WINDow_TRACe_Y_SCALePtr GetSCALe ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SCALe (
        /*[out,retval]*/ struct ISCPI_DISPlay_WINDow_TRACe_Y_SCALe * * Value ) = 0;
};

struct __declspec(uuid("d5a2633b-df5e-4bb3-a550-a364be60aee7"))
SCPI_DISPlay_WINDow_TRACe_Y_SCALe;
    // [ default ] interface ISCPI_DISPlay_WINDow_TRACe_Y_SCALe

struct __declspec(uuid("e418ac5c-da19-41b1-9477-df1fffd610c2"))
ISCPI_IEEE4882 : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetIDN))
    _bstr_t IDN;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetIDN ( );
    HRESULT RST ( );
    HRESULT TRG ( );
    HRESULT WAI ( );
    HRESULT CLS ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_IDN (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall raw_RST ( ) = 0;
      virtual HRESULT __stdcall raw_TRG ( ) = 0;
      virtual HRESULT __stdcall raw_WAI ( ) = 0;
      virtual HRESULT __stdcall raw_CLS ( ) = 0;
};

struct __declspec(uuid("a80917d0-92f5-4a4d-ba36-ea2187571310"))
SCPI_IEEE4882;
    // [ default ] interface ISCPI_IEEE4882

struct __declspec(uuid("03ebd86a-ad90-4311-8ee9-f83daa96a446"))
ISCPI_INITiate : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCONTinuous,put=PutCONTinuous))
    VARIANT_BOOL CONTinuous;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetCONTinuous ( );
    void PutCONTinuous (
        VARIANT_BOOL Value );
    HRESULT IMMediate ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CONTinuous (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_CONTinuous (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall raw_IMMediate ( ) = 0;
};

struct __declspec(uuid("686af9c4-0640-409e-bb52-d9eba4be635d"))
SCPI_INITiate;
    // [ default ] interface ISCPI_INITiate

struct __declspec(uuid("3b442fa2-d427-469a-8b9a-b97e895b02dd"))
SCPI_MMEMory;
    // [ default ] interface ISCPI_MMEMory

struct __declspec(uuid("1664c3ab-ba28-4c62-abad-09792f77a6c6"))
SCPI_MMEMory_LOAD;
    // [ default ] interface ISCPI_MMEMory_LOAD

struct __declspec(uuid("796cc292-9ca3-4ae9-b476-a622e5621f43"))
SCPI_MMEMory_STORe;
    // [ default ] interface ISCPI_MMEMory_STORe

struct __declspec(uuid("4f67a288-695a-4ae4-979e-852e58e40ba6"))
SCPI_SENSe;
    // [ default ] interface ISCPI_SENSe

struct __declspec(uuid("531314c3-428c-4ae0-8525-8325bdcd02e0"))
ISCPI_SENSe_AVERage : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCOUNt,put=PutCOUNt))
    long COUNt;
    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;
    __declspec(property(get=GetCURRent))
    long CURRent;

    //
    // Wrapper methods for error-handling
    //

    HRESULT CLEar ( );
    long GetCOUNt ( );
    void PutCOUNt (
        long Value );
    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );
    long GetCURRent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_CLEar ( ) = 0;
      virtual HRESULT __stdcall get_COUNt (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_COUNt (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_CURRent (
        /*[out,retval]*/ long * Value ) = 0;
};

struct __declspec(uuid("1e6a0f15-06b6-4c41-9ab7-07153eb0ce02"))
SCPI_SENSe_AVERage;
    // [ default ] interface ISCPI_SENSe_AVERage

struct __declspec(uuid("42318a13-fd76-4946-9acd-04ae45187bfd"))
ISCPI_SENSe_BANDwidth : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRESolution,put=PutRESolution))
    double RESolution;

    //
    // Wrapper methods for error-handling
    //

    double GetRESolution ( );
    void PutRESolution (
        double Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RESolution (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_RESolution (
        /*[in]*/ double Value ) = 0;
};

struct __declspec(uuid("0ce80d29-040f-4c27-975a-7da4120f0485"))
SCPI_SENSe_BANDwidth;
    // [ default ] interface ISCPI_SENSe_BANDwidth

struct __declspec(uuid("b266f1cd-b486-4165-9d26-67880a17d872"))
SCPI_SENSe_CORRection;
    // [ default ] interface ISCPI_SENSe_CORRection

struct __declspec(uuid("0954a3ba-07d6-4261-8241-10d3e2387f12"))
ISCPI_SENSe_FREQuency : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCENTer,put=PutCENTer))
    double CENTer;
    __declspec(property(get=GetCW,put=PutCW))
    double CW;
    __declspec(property(get=GetDATA))
    _variant_t DATA;
    __declspec(property(get=GetSPAN,put=PutSPAN))
    double SPAN;
    __declspec(property(get=GetSTARt,put=PutSTARt))
    double STARt;
    __declspec(property(get=GetSTOP,put=PutSTOP))
    double STOP;

    //
    // Wrapper methods for error-handling
    //

    double GetCENTer ( );
    void PutCENTer (
        double Value );
    double GetCW ( );
    void PutCW (
        double Value );
    _variant_t GetDATA ( );
    double GetSPAN ( );
    void PutSPAN (
        double Value );
    double GetSTARt ( );
    void PutSTARt (
        double Value );
    double GetSTOP ( );
    void PutSTOP (
        double Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CENTer (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_CENTer (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_CW (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_CW (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_DATA (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall get_SPAN (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_SPAN (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_STARt (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_STARt (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_STOP (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_STOP (
        /*[in]*/ double Value ) = 0;
};

struct __declspec(uuid("f14c804d-00b9-4335-9acf-f0e51cc36ec6"))
SCPI_SENSe_FREQuency;
    // [ default ] interface ISCPI_SENSe_FREQuency

struct __declspec(uuid("f77cb816-cf58-49eb-8d33-ea99ce144ebf"))
ISCPI_SENSe_SEGMent : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDATA,put=PutDATA))
    _variant_t DATA;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetDATA ( );
    void PutDATA (
        const _variant_t & Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DATA (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_DATA (
        /*[in]*/ VARIANT Value ) = 0;
};

struct __declspec(uuid("194db57d-202d-4934-b5f8-5c876c1368d4"))
SCPI_SENSe_SEGMent;
    // [ default ] interface ISCPI_SENSe_SEGMent

struct __declspec(uuid("cbc6c6fa-df73-468f-a906-ed6f8db62f44"))
SCPI_SENSe_SWEep;
    // [ default ] interface ISCPI_SENSe_SWEep

struct __declspec(uuid("2baf75c2-aa0b-4614-90e9-9655824802a0"))
SCPI_SOURce;
    // [ default ] interface ISCPI_SOURce

struct __declspec(uuid("0fc6878b-9abd-4635-a465-e0c3540fe08c"))
SCPI_SOURce_POWer;
    // [ default ] interface ISCPI_SOURce_POWer

struct __declspec(uuid("ee4830fa-811c-4163-878a-76538cc8f5f5"))
SCPI_SOURce_POWer_LEVel;
    // [ default ] interface ISCPI_SOURce_POWer_LEVel

struct __declspec(uuid("8ba4eafa-6b5f-41b9-b507-50a92225889f"))
ISCPI_SOURce_POWer_LEVel_IMMediate : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAMPLitude,put=PutAMPLitude))
    double AMPLitude;

    //
    // Wrapper methods for error-handling
    //

    double GetAMPLitude ( );
    void PutAMPLitude (
        double Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AMPLitude (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_AMPLitude (
        /*[in]*/ double Value ) = 0;
};

struct __declspec(uuid("b2810a05-b99e-42b6-b602-e17b2e65a79e"))
SCPI_SOURce_POWer_LEVel_IMMediate;
    // [ default ] interface ISCPI_SOURce_POWer_LEVel_IMMediate

struct __declspec(uuid("ec6f07a4-4e95-474c-bad3-6aaa375bf948"))
ISCPI_SOURce_POWer_LEVel_SLOPe : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDATA,put=PutDATA))
    double DATA;

    //
    // Wrapper methods for error-handling
    //

    double GetDATA ( );
    void PutDATA (
        double Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DATA (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_DATA (
        /*[in]*/ double Value ) = 0;
};

struct __declspec(uuid("abb03e6c-ef6d-4d45-bdb0-e37a10b89abc"))
ISCPI_SOURce_POWer_LEVel : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetIMMediate))
    ISCPI_SOURce_POWer_LEVel_IMMediatePtr IMMediate;
    __declspec(property(get=GetSLOPe))
    ISCPI_SOURce_POWer_LEVel_SLOPePtr SLOPe;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_SOURce_POWer_LEVel_IMMediatePtr GetIMMediate ( );
    ISCPI_SOURce_POWer_LEVel_SLOPePtr GetSLOPe ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_IMMediate (
        /*[out,retval]*/ struct ISCPI_SOURce_POWer_LEVel_IMMediate * * Value ) = 0;
      virtual HRESULT __stdcall get_SLOPe (
        /*[out,retval]*/ struct ISCPI_SOURce_POWer_LEVel_SLOPe * * Value ) = 0;
};

struct __declspec(uuid("7cb24c45-2d47-4787-baff-805ed93f50f3"))
SCPI_SOURce_POWer_LEVel_SLOPe;
    // [ default ] interface ISCPI_SOURce_POWer_LEVel_SLOPe

struct __declspec(uuid("6992d119-e5bc-4fea-9c94-337eadfc4106"))
SCPI_SYSTem;
    // [ default ] interface ISCPI_SYSTem

struct __declspec(uuid("00fbcc13-5a2f-4f1e-b8a8-523c90c013b3"))
SCPI_TRIGger;
    // [ default ] interface ISCPI_TRIGger

struct __declspec(uuid("6c22543d-42a3-4c91-8756-171534f3b967"))
SCPI_TRIGger_SEQuence;
    // [ default ] interface ISCPI_TRIGger_SEQuence

struct __declspec(uuid("96e82188-2f18-40b4-8bd2-1eb4de9710c8"))
IStateObserver : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Advise (
        IUnknown * pUnk );
    HRESULT Unadvise ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Advise (
        /*[in]*/ IUnknown * pUnk ) = 0;
      virtual HRESULT __stdcall raw_Unadvise ( ) = 0;
};

struct __declspec(uuid("76eb83a9-86e3-4e1c-a5e1-bd8f25b0d1c6"))
IStateObserverEvents : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT OnStateChange (
        long Vaue );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_OnStateChange (
        /*[in]*/ long Vaue ) = 0;
};

struct __declspec(uuid("f886051f-ae5f-4804-80b3-c724e14cef41"))
StateObserver;
    // [ default ] interface IStateObserver
    // [ default, source ] interface IStateObserverEvents

struct __declspec(uuid("6565aae2-df66-4e5d-8e0d-9ccbb8ed7acc"))
SCPI_STATus;
    // [ default ] interface ISCPI_STATus

struct __declspec(uuid("f0119ba8-d505-46cc-82b0-c6a3801d543d"))
ISCPI_STATus_OPERation : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCONDition))
    long CONDition;
    __declspec(property(get=GetENABle,put=PutENABle))
    long ENABle;
    __declspec(property(get=GetEVENt))
    long EVENt;
    __declspec(property(get=GetNTRansition,put=PutNTRansition))
    long NTRansition;
    __declspec(property(get=GetPTRansition,put=PutPTRansition))
    long PTRansition;

    //
    // Wrapper methods for error-handling
    //

    long GetCONDition ( );
    long GetENABle ( );
    void PutENABle (
        long Value );
    long GetEVENt ( );
    long GetNTRansition ( );
    void PutNTRansition (
        long Value );
    long GetPTRansition ( );
    void PutPTRansition (
        long Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CONDition (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall get_ENABle (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_ENABle (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_EVENt (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall get_NTRansition (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_NTRansition (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_PTRansition (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_PTRansition (
        /*[in]*/ long Value ) = 0;
};

struct __declspec(uuid("949aa4ad-ea65-40de-90c3-0430f0b753e2"))
SCPI_STATus_OPERation;
    // [ default ] interface ISCPI_STATus_OPERation

struct __declspec(uuid("94d9ba87-dfa3-4aad-9116-1240fc71af31"))
SCPI_STATus_QUEStionable;
    // [ default ] interface ISCPI_STATus_QUEStionable

struct __declspec(uuid("22580705-dde0-4098-87f6-18d771d7501a"))
SCPI_STATus_QUEStionable_LIMit;
    // [ default ] interface ISCPI_STATus_QUEStionable_LIMit

struct __declspec(uuid("d4dbce24-96b7-4319-9c07-9fe1c70240d3"))
ISCPI_STATus_QUEStionable_LIMit_CHANnel : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCONDition))
    long CONDition;
    __declspec(property(get=GetENABle,put=PutENABle))
    long ENABle;
    __declspec(property(get=GetEVENt))
    long EVENt;
    __declspec(property(get=GetNTRansition,put=PutNTRansition))
    long NTRansition;
    __declspec(property(get=GetPTRansition,put=PutPTRansition))
    long PTRansition;

    //
    // Wrapper methods for error-handling
    //

    long GetCONDition ( );
    long GetENABle ( );
    void PutENABle (
        long Value );
    long GetEVENt ( );
    long GetNTRansition ( );
    void PutNTRansition (
        long Value );
    long GetPTRansition ( );
    void PutPTRansition (
        long Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CONDition (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall get_ENABle (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_ENABle (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_EVENt (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall get_NTRansition (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_NTRansition (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_PTRansition (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_PTRansition (
        /*[in]*/ long Value ) = 0;
};

struct __declspec(uuid("847d57fb-30fd-4abe-b9b6-e692e121aaac"))
ISCPI_STATus_QUEStionable_LIMit : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCONDition))
    long CONDition;
    __declspec(property(get=GetENABle,put=PutENABle))
    long ENABle;
    __declspec(property(get=GetNTRansition,put=PutNTRansition))
    long NTRansition;
    __declspec(property(get=GetPTRansition,put=PutPTRansition))
    long PTRansition;
    __declspec(property(get=GetEVENt))
    long EVENt;
    __declspec(property(get=GetCHANnel))
    ISCPI_STATus_QUEStionable_LIMit_CHANnelPtr CHANnel[];

    //
    // Wrapper methods for error-handling
    //

    long GetCONDition ( );
    long GetENABle ( );
    void PutENABle (
        long Value );
    long GetNTRansition ( );
    void PutNTRansition (
        long Value );
    long GetPTRansition ( );
    void PutPTRansition (
        long Value );
    long GetEVENt ( );
    ISCPI_STATus_QUEStionable_LIMit_CHANnelPtr GetCHANnel (
        long Ch );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CONDition (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall get_ENABle (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_ENABle (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_NTRansition (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_NTRansition (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_PTRansition (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_PTRansition (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_EVENt (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall get_CHANnel (
        /*[in]*/ long Ch,
        /*[out,retval]*/ struct ISCPI_STATus_QUEStionable_LIMit_CHANnel * * Value ) = 0;
};

struct __declspec(uuid("2aab6154-ff30-41c8-8056-30bb101d5351"))
SCPI_STATus_QUEStionable_LIMit_CHANnel;
    // [ default ] interface ISCPI_STATus_QUEStionable_LIMit_CHANnel

struct __declspec(uuid("13846a38-3873-428a-b743-56e93a5daf4e"))
SCPI_SENSe_CORRection_COLLect;
    // [ default ] interface ISCPI_SENSe_CORRection_COLLect

struct __declspec(uuid("a0d4b7c0-d218-483b-991f-9405897ede1c"))
ISCPI_SENSe_CORRection_COLLect_ACQuire : IDispatch
{
    //
    // Property data
    //

    __declspec(property(put=PutISOLation))
    _variant_t ISOLation;
    __declspec(property(put=PutLOAD))
    long LOAD;
    __declspec(property(put=PutOPEN))
    long OPEN;
    __declspec(property(put=PutSHORt))
    long SHORt;
    __declspec(property(put=PutTHRU))
    _variant_t THRU;

    //
    // Wrapper methods for error-handling
    //

    void PutISOLation (
        const _variant_t & _arg1 );
    void PutLOAD (
        long _arg1 );
    void PutOPEN (
        long _arg1 );
    void PutSHORt (
        long _arg1 );
    void PutTHRU (
        const _variant_t & _arg1 );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_ISOLation (
        /*[in]*/ VARIANT _arg1 ) = 0;
      virtual HRESULT __stdcall put_LOAD (
        /*[in]*/ long _arg1 ) = 0;
      virtual HRESULT __stdcall put_OPEN (
        /*[in]*/ long _arg1 ) = 0;
      virtual HRESULT __stdcall put_SHORt (
        /*[in]*/ long _arg1 ) = 0;
      virtual HRESULT __stdcall put_THRU (
        /*[in]*/ VARIANT _arg1 ) = 0;
};

struct __declspec(uuid("89d6038b-4795-40ec-87e0-75d59b6e1ba7"))
SCPI_SENSe_CORRection_COLLect_ACQuire;
    // [ default ] interface ISCPI_SENSe_CORRection_COLLect_ACQuire

struct __declspec(uuid("8434010d-199d-4688-82d0-5411ea5a22e4"))
SCPI_SENSe_CORRection_COLLect_CKIT;
    // [ default ] interface ISCPI_SENSe_CORRection_COLLect_CKIT

struct __declspec(uuid("d9ea9a69-35fe-4331-8fb8-128db6fb80c0"))
ISCPI_SENSe_CORRection_COLLect_CKIT_ORDer : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetLOAD,put=PutLOAD))
    long LOAD[];
    __declspec(property(get=GetOPEN,put=PutOPEN))
    long OPEN[];
    __declspec(property(get=GetSHORt,put=PutSHORt))
    long SHORt[];
    __declspec(property(get=GetTHRU,put=PutTHRU))
    long THRU[][];

    //
    // Wrapper methods for error-handling
    //

    long GetLOAD (
        long Cpt );
    void PutLOAD (
        long Cpt,
        long Value );
    long GetOPEN (
        long Cpt );
    void PutOPEN (
        long Cpt,
        long Value );
    long GetSHORt (
        long Cpt );
    void PutSHORt (
        long Cpt,
        long Value );
    long GetTHRU (
        long Cpt_m,
        long Cpt_n );
    void PutTHRU (
        long Cpt_m,
        long Cpt_n,
        long Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_LOAD (
        /*[in]*/ long Cpt,
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_LOAD (
        /*[in]*/ long Cpt,
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_OPEN (
        /*[in]*/ long Cpt,
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_OPEN (
        /*[in]*/ long Cpt,
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_SHORt (
        /*[in]*/ long Cpt,
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_SHORt (
        /*[in]*/ long Cpt,
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_THRU (
        /*[in]*/ long Cpt_m,
        /*[in]*/ long Cpt_n,
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_THRU (
        /*[in]*/ long Cpt_m,
        /*[in]*/ long Cpt_n,
        /*[in]*/ long Value ) = 0;
};

struct __declspec(uuid("b1923a75-bf6c-4454-aeac-24f095d9d1c7"))
SCPI_SENSe_CORRection_COLLect_CKIT_ORDer;
    // [ default ] interface ISCPI_SENSe_CORRection_COLLect_CKIT_ORDer

struct __declspec(uuid("d520fb28-fc58-4a64-afe6-c152bc483895"))
ISCPI_OUTPut : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("d66772e3-0e58-44a5-9531-b1c1c27ae867"))
SCPI_OUTPut;
    // [ default ] interface ISCPI_OUTPut

struct __declspec(uuid("86801fa9-a2c0-4e95-ba1b-4fab86418ccc"))
SCPI_DISPlay_WINDow_Y;
    // [ default ] interface ISCPI_DISPlay_WINDow_Y

struct __declspec(uuid("a414c983-bdeb-4582-9c64-84a15ecb6d2c"))
ISCPI_DISPlay_WINDow_Y_SCALe : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDIVisions,put=PutDIVisions))
    long DIVisions;

    //
    // Wrapper methods for error-handling
    //

    long GetDIVisions ( );
    void PutDIVisions (
        long Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DIVisions (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_DIVisions (
        /*[in]*/ long Value ) = 0;
};

struct __declspec(uuid("6e59d64d-7a17-4979-81ad-7963a28fe2f8"))
ISCPI_DISPlay_WINDow_Y : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSCALe))
    ISCPI_DISPlay_WINDow_Y_SCALePtr SCALe;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_DISPlay_WINDow_Y_SCALePtr GetSCALe ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SCALe (
        /*[out,retval]*/ struct ISCPI_DISPlay_WINDow_Y_SCALe * * Value ) = 0;
};

struct __declspec(uuid("f5c04359-e0be-47b6-b08f-dd4495763528"))
SCPI_DISPlay_WINDow_Y_SCALe;
    // [ default ] interface ISCPI_DISPlay_WINDow_Y_SCALe

struct __declspec(uuid("abc7d4a9-72f6-4906-8f79-447b43d624c8"))
SCPI_CALCulate_SELected_RLIMit;
    // [ default ] interface ISCPI_CALCulate_SELected_RLIMit

struct __declspec(uuid("3de7753b-e969-43b7-a187-a6b71cdcbf3d"))
ISCPI_CALCulate_SELected_RLIMit_DISPlay : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetLINE,put=PutLINE))
    VARIANT_BOOL LINE;
    __declspec(property(get=GetSELect,put=PutSELect))
    long SELect;
    __declspec(property(get=GetValue,put=PutValue))
    _bstr_t Value;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetLINE ( );
    void PutLINE (
        VARIANT_BOOL Value );
    long GetSELect ( );
    void PutSELect (
        long Value );
    _bstr_t GetValue ( );
    void PutValue (
        _bstr_t Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_LINE (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_LINE (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_SELect (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_SELect (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ BSTR Value ) = 0;
};

struct __declspec(uuid("3afcc4f6-3a2d-4d00-b257-84ad77575295"))
SCPI_CALCulate_SELected_RLIMit_DISPlay;
    // [ default ] interface ISCPI_CALCulate_SELected_RLIMit_DISPlay

struct __declspec(uuid("4944e500-0a49-4510-8074-f769e2ea60a9"))
ISCPI_CALCulate_SELected_RLIMit_REPort : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDATA))
    _variant_t DATA;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetDATA ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DATA (
        /*[out,retval]*/ VARIANT * Value ) = 0;
};

struct __declspec(uuid("6bb9b822-dc5f-4b7f-b40d-471dc803b748"))
ISCPI_CALCulate_SELected_RLIMit : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDATA,put=PutDATA))
    _variant_t DATA;
    __declspec(property(get=GetDISPlay))
    ISCPI_CALCulate_SELected_RLIMit_DISPlayPtr DISPlay;
    __declspec(property(get=GetFAIL))
    VARIANT_BOOL FAIL;
    __declspec(property(get=GetREPort))
    ISCPI_CALCulate_SELected_RLIMit_REPortPtr REPort;
    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetDATA ( );
    void PutDATA (
        const _variant_t & Value );
    ISCPI_CALCulate_SELected_RLIMit_DISPlayPtr GetDISPlay ( );
    VARIANT_BOOL GetFAIL ( );
    ISCPI_CALCulate_SELected_RLIMit_REPortPtr GetREPort ( );
    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DATA (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_DATA (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_DISPlay (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_RLIMit_DISPlay * * Value ) = 0;
      virtual HRESULT __stdcall get_FAIL (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall get_REPort (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_RLIMit_REPort * * Value ) = 0;
      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("e2179af2-4cdf-44da-9f85-16920d818c70"))
SCPI_CALCulate_SELected_RLIMit_REPort;
    // [ default ] interface ISCPI_CALCulate_SELected_RLIMit_REPort

struct __declspec(uuid("1d7f99fa-b86e-4965-be5c-6a6e359015b2"))
SCPI_STATus_QUEStionable_RLIMit;
    // [ default ] interface ISCPI_STATus_QUEStionable_RLIMit

struct __declspec(uuid("e229ff3f-8872-4b9f-89ff-39bbfde02ef6"))
ISCPI_STATus_QUEStionable_RLIMit_CHANnel : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCONDition))
    long CONDition;
    __declspec(property(get=GetENABle,put=PutENABle))
    long ENABle;
    __declspec(property(get=GetEVENt))
    long EVENt;
    __declspec(property(get=GetNTRansition,put=PutNTRansition))
    long NTRansition;
    __declspec(property(get=GetPTRansition,put=PutPTRansition))
    long PTRansition;

    //
    // Wrapper methods for error-handling
    //

    long GetCONDition ( );
    long GetENABle ( );
    void PutENABle (
        long Value );
    long GetEVENt ( );
    long GetNTRansition ( );
    void PutNTRansition (
        long Value );
    long GetPTRansition ( );
    void PutPTRansition (
        long Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CONDition (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall get_ENABle (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_ENABle (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_EVENt (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall get_NTRansition (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_NTRansition (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_PTRansition (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_PTRansition (
        /*[in]*/ long Value ) = 0;
};

struct __declspec(uuid("6419347b-07eb-4941-b337-153ae8074dd8"))
ISCPI_STATus_QUEStionable_RLIMit : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCONDition))
    long CONDition;
    __declspec(property(get=GetENABle,put=PutENABle))
    long ENABle;
    __declspec(property(get=GetNTRansition,put=PutNTRansition))
    long NTRansition;
    __declspec(property(get=GetPTRansition,put=PutPTRansition))
    long PTRansition;
    __declspec(property(get=GetEVENt))
    long EVENt;
    __declspec(property(get=GetCHANnel))
    ISCPI_STATus_QUEStionable_RLIMit_CHANnelPtr CHANnel[];

    //
    // Wrapper methods for error-handling
    //

    long GetCONDition ( );
    long GetENABle ( );
    void PutENABle (
        long Value );
    long GetNTRansition ( );
    void PutNTRansition (
        long Value );
    long GetPTRansition ( );
    void PutPTRansition (
        long Value );
    long GetEVENt ( );
    ISCPI_STATus_QUEStionable_RLIMit_CHANnelPtr GetCHANnel (
        long Ch );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CONDition (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall get_ENABle (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_ENABle (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_NTRansition (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_NTRansition (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_PTRansition (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_PTRansition (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_EVENt (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall get_CHANnel (
        /*[in]*/ long Ch,
        /*[out,retval]*/ struct ISCPI_STATus_QUEStionable_RLIMit_CHANnel * * Value ) = 0;
};

struct __declspec(uuid("e4c843d9-9ef2-450b-985e-907eec09375a"))
ISCPI_STATus_QUEStionable : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCONDition))
    long CONDition;
    __declspec(property(get=GetENABle,put=PutENABle))
    long ENABle;
    __declspec(property(get=GetEVENt))
    long EVENt;
    __declspec(property(get=GetNTRansition,put=PutNTRansition))
    long NTRansition;
    __declspec(property(get=GetPTRansition,put=PutPTRansition))
    long PTRansition;
    __declspec(property(get=GetLIMit))
    ISCPI_STATus_QUEStionable_LIMitPtr LIMit;
    __declspec(property(get=GetRLIMit))
    ISCPI_STATus_QUEStionable_RLIMitPtr RLIMit;

    //
    // Wrapper methods for error-handling
    //

    long GetCONDition ( );
    long GetENABle ( );
    void PutENABle (
        long Value );
    long GetEVENt ( );
    long GetNTRansition ( );
    void PutNTRansition (
        long Value );
    long GetPTRansition ( );
    void PutPTRansition (
        long Value );
    ISCPI_STATus_QUEStionable_LIMitPtr GetLIMit ( );
    ISCPI_STATus_QUEStionable_RLIMitPtr GetRLIMit ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CONDition (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall get_ENABle (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_ENABle (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_EVENt (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall get_NTRansition (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_NTRansition (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_PTRansition (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_PTRansition (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_LIMit (
        /*[out,retval]*/ struct ISCPI_STATus_QUEStionable_LIMit * * Value ) = 0;
      virtual HRESULT __stdcall get_RLIMit (
        /*[out,retval]*/ struct ISCPI_STATus_QUEStionable_RLIMit * * Value ) = 0;
};

struct __declspec(uuid("f7b863f6-e877-4e29-97d1-99ef69f70882"))
ISCPI_STATus : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetOPERation))
    ISCPI_STATus_OPERationPtr OPERation;
    __declspec(property(get=GetQUEStionable))
    ISCPI_STATus_QUEStionablePtr QUEStionable;

    //
    // Wrapper methods for error-handling
    //

    HRESULT PRESet ( );
    ISCPI_STATus_OPERationPtr GetOPERation ( );
    ISCPI_STATus_QUEStionablePtr GetQUEStionable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_PRESet ( ) = 0;
      virtual HRESULT __stdcall get_OPERation (
        /*[out,retval]*/ struct ISCPI_STATus_OPERation * * Value ) = 0;
      virtual HRESULT __stdcall get_QUEStionable (
        /*[out,retval]*/ struct ISCPI_STATus_QUEStionable * * Value ) = 0;
};

struct __declspec(uuid("ff626add-5154-4059-9b2a-1d7a9b04b13f"))
SCPI_STATus_QUEStionable_RLIMit_CHANnel;
    // [ default ] interface ISCPI_STATus_QUEStionable_RLIMit_CHANnel

struct __declspec(uuid("b948e21f-410a-4070-8cda-522473a9e597"))
SCPI_SENSe_CORRection_COLLect_METHod;
    // [ default ] interface ISCPI_SENSe_CORRection_COLLect_METHod

struct __declspec(uuid("792767c1-d59f-4b45-8124-604bc6327a13"))
ISCPI_SENSe_CORRection_COLLect_METHod_RESPonse : IDispatch
{
    //
    // Property data
    //

    __declspec(property(put=PutOPEN))
    long OPEN;
    __declspec(property(put=PutSHORt))
    long SHORt;
    __declspec(property(put=PutTHRU))
    _variant_t THRU;

    //
    // Wrapper methods for error-handling
    //

    void PutOPEN (
        long _arg1 );
    void PutSHORt (
        long _arg1 );
    void PutTHRU (
        const _variant_t & _arg1 );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_OPEN (
        /*[in]*/ long _arg1 ) = 0;
      virtual HRESULT __stdcall put_SHORt (
        /*[in]*/ long _arg1 ) = 0;
      virtual HRESULT __stdcall put_THRU (
        /*[in]*/ VARIANT _arg1 ) = 0;
};

struct __declspec(uuid("d4b21b58-6d4b-44d4-a6cb-66e1e5a39cc6"))
ISCPI_SENSe_CORRection_COLLect_METHod : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRESPonse))
    ISCPI_SENSe_CORRection_COLLect_METHod_RESPonsePtr RESPonse;
    __declspec(property(put=PutERESponse))
    _variant_t ERESponse;
    __declspec(property(put=PutSOLT1))
    long SOLT1;
    __declspec(property(put=PutSOLT2))
    _variant_t SOLT2;
    __declspec(property(get=GetTYPE))
    _bstr_t TYPE;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_SENSe_CORRection_COLLect_METHod_RESPonsePtr GetRESPonse ( );
    void PutERESponse (
        const _variant_t & _arg1 );
    void PutSOLT1 (
        long _arg1 );
    void PutSOLT2 (
        const _variant_t & _arg1 );
    _bstr_t GetTYPE ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RESPonse (
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection_COLLect_METHod_RESPonse * * Value ) = 0;
      virtual HRESULT __stdcall put_ERESponse (
        /*[in]*/ VARIANT _arg1 ) = 0;
      virtual HRESULT __stdcall put_SOLT1 (
        /*[in]*/ long _arg1 ) = 0;
      virtual HRESULT __stdcall put_SOLT2 (
        /*[in]*/ VARIANT _arg1 ) = 0;
      virtual HRESULT __stdcall get_TYPE (
        /*[out,retval]*/ BSTR * Value ) = 0;
};

struct __declspec(uuid("e9021167-ad6a-408a-a6b7-3815cb9860ee"))
SCPI_SENSe_CORRection_COLLect_METHod_RESPonse;
    // [ default ] interface ISCPI_SENSe_CORRection_COLLect_METHod_RESPonse

struct __declspec(uuid("adebb6c0-a415-4981-aa29-c0fd8d5f53d8"))
SCPI_SENSe_CORRection_COEFficient;
    // [ default ] interface ISCPI_SENSe_CORRection_COEFficient

struct __declspec(uuid("2842e8c5-2adc-4011-a346-b34f22d9245b"))
ISCPI_SENSe_CORRection_COLLect_CKIT_STAN : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetARBitrary,put=PutARBitrary))
    double ARBitrary;
    __declspec(property(get=GetC0,put=PutC0))
    double C0;
    __declspec(property(get=GetC1,put=PutC1))
    double C1;
    __declspec(property(get=GetC2,put=PutC2))
    double C2;
    __declspec(property(get=GetC3,put=PutC3))
    double C3;
    __declspec(property(get=GetDelay,put=PutDelay))
    double Delay;
    __declspec(property(get=GetL0,put=PutL0))
    double L0;
    __declspec(property(get=GetL1,put=PutL1))
    double L1;
    __declspec(property(get=GetL2,put=PutL2))
    double L2;
    __declspec(property(get=GetL3,put=PutL3))
    double L3;
    __declspec(property(get=GetLABel,put=PutLABel))
    _bstr_t LABel;
    __declspec(property(get=GetLOSS,put=PutLOSS))
    double LOSS;
    __declspec(property(get=GetTYPE,put=PutTYPE))
    _bstr_t TYPE;
    __declspec(property(get=GetZ0,put=PutZ0))
    double Z0;

    //
    // Wrapper methods for error-handling
    //

    double GetARBitrary ( );
    void PutARBitrary (
        double Value );
    double GetC0 ( );
    void PutC0 (
        double Value );
    double GetC1 ( );
    void PutC1 (
        double Value );
    double GetC2 ( );
    void PutC2 (
        double Value );
    double GetC3 ( );
    void PutC3 (
        double Value );
    double GetDelay ( );
    void PutDelay (
        double Value );
    double GetL0 ( );
    void PutL0 (
        double Value );
    double GetL1 ( );
    void PutL1 (
        double Value );
    double GetL2 ( );
    void PutL2 (
        double Value );
    double GetL3 ( );
    void PutL3 (
        double Value );
    _bstr_t GetLABel ( );
    void PutLABel (
        _bstr_t Value );
    double GetLOSS ( );
    void PutLOSS (
        double Value );
    _bstr_t GetTYPE ( );
    void PutTYPE (
        _bstr_t Value );
    double GetZ0 ( );
    void PutZ0 (
        double Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ARBitrary (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_ARBitrary (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_C0 (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_C0 (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_C1 (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_C1 (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_C2 (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_C2 (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_C3 (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_C3 (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_Delay (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_Delay (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_L0 (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_L0 (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_L1 (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_L1 (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_L2 (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_L2 (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_L3 (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_L3 (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_LABel (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_LABel (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_LOSS (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_LOSS (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_TYPE (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_TYPE (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_Z0 (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_Z0 (
        /*[in]*/ double Value ) = 0;
};

struct __declspec(uuid("8c73d5a9-5696-475a-9a2d-b712e22cee85"))
ISCPI_SENSe_CORRection_COLLect_CKIT : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetORDer))
    ISCPI_SENSe_CORRection_COLLect_CKIT_ORDerPtr ORDer;
    __declspec(property(get=GetLABel,put=PutLABel))
    _bstr_t LABel;
    __declspec(property(get=GetSELect,put=PutSELect))
    long SELect;
    __declspec(property(get=GetSTAN))
    ISCPI_SENSe_CORRection_COLLect_CKIT_STANPtr STAN[];

    //
    // Wrapper methods for error-handling
    //

    ISCPI_SENSe_CORRection_COLLect_CKIT_ORDerPtr GetORDer ( );
    _bstr_t GetLABel ( );
    void PutLABel (
        _bstr_t Value );
    HRESULT RESet ( );
    long GetSELect ( );
    void PutSELect (
        long Value );
    ISCPI_SENSe_CORRection_COLLect_CKIT_STANPtr GetSTAN (
        long Std );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ORDer (
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection_COLLect_CKIT_ORDer * * Value ) = 0;
      virtual HRESULT __stdcall get_LABel (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_LABel (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall raw_RESet ( ) = 0;
      virtual HRESULT __stdcall get_SELect (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_SELect (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_STAN (
        /*[in]*/ long Std,
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection_COLLect_CKIT_STAN * * Value ) = 0;
};

struct __declspec(uuid("885f4557-907d-478c-9196-c557c3b3c987"))
SCPI_SENSe_CORRection_COLLect_CKIT_STAN;
    // [ default ] interface ISCPI_SENSe_CORRection_COLLect_CKIT_STAN

struct __declspec(uuid("a3bd7e53-e4d3-4cf0-95d5-e4d7259243b8"))
SCPI_SENSe_CORRection_EXTension;
    // [ default ] interface ISCPI_SENSe_CORRection_EXTension

struct __declspec(uuid("dc7a3092-ff70-4a45-bcd6-aac8545b18cd"))
SCPI_SENSe_CORRection_EXTension_PORT;
    // [ default ] interface ISCPI_SENSe_CORRection_EXTension_PORT

struct __declspec(uuid("59eb1667-5e88-4e0f-b729-1507960c037b"))
SCPI_SENSe_CORRection_IMPedance;
    // [ default ] interface ISCPI_SENSe_CORRection_IMPedance

struct __declspec(uuid("76a29624-11cd-4fa5-a221-d420145d4730"))
ISCPI_SENSe_CORRection_IMPedance_INPut : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetMAGNitude,put=PutMAGNitude))
    double MAGNitude;

    //
    // Wrapper methods for error-handling
    //

    double GetMAGNitude ( );
    void PutMAGNitude (
        double Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_MAGNitude (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_MAGNitude (
        /*[in]*/ double Value ) = 0;
};

struct __declspec(uuid("e84a8dba-be41-47a5-ae7b-1c4b0998cbb8"))
ISCPI_SENSe_CORRection_IMPedance : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetINPut))
    ISCPI_SENSe_CORRection_IMPedance_INPutPtr INPut;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_SENSe_CORRection_IMPedance_INPutPtr GetINPut ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_INPut (
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection_IMPedance_INPut * * Value ) = 0;
};

struct __declspec(uuid("b18e287b-d16e-4249-a695-a9cc849636f6"))
SCPI_SENSe_CORRection_IMPedance_INPut;
    // [ default ] interface ISCPI_SENSe_CORRection_IMPedance_INPut

struct __declspec(uuid("ed48b06e-d2b0-4db8-8991-3da9638d2156"))
ISCPI_SENSe_CORRection_EXTension_PORT_INCLude : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("8842f309-829e-45dc-80bc-b5fa0855bc1a"))
ISCPI_SENSe_CORRection_EXTension_PORT : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetTIME,put=PutTIME))
    double TIME;
    __declspec(property(get=GetLOSS,put=PutLOSS))
    double LOSS[];
    __declspec(property(get=GetINCLude))
    ISCPI_SENSe_CORRection_EXTension_PORT_INCLudePtr INCLude[];
    __declspec(property(get=GetLDC,put=PutLDC))
    double LDC;
    __declspec(property(get=GetFREQuency,put=PutFREQuency))
    double FREQuency[];

    //
    // Wrapper methods for error-handling
    //

    double GetTIME ( );
    void PutTIME (
        double Value );
    ISCPI_SENSe_CORRection_EXTension_PORT_INCLudePtr GetINCLude (
        long Il );
    double GetLDC ( );
    void PutLDC (
        double Value );
    double GetLOSS (
        long Ls );
    void PutLOSS (
        long Ls,
        double Value );
    double GetFREQuency (
        long Fq );
    void PutFREQuency (
        long Fq,
        double Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TIME (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_TIME (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_INCLude (
        /*[in]*/ long Il,
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection_EXTension_PORT_INCLude * * Value ) = 0;
      virtual HRESULT __stdcall get_LDC (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_LDC (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_LOSS (
        /*[in]*/ long Ls,
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_LOSS (
        /*[in]*/ long Ls,
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_FREQuency (
        /*[in]*/ long Fq,
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_FREQuency (
        /*[in]*/ long Fq,
        /*[in]*/ double Value ) = 0;
};

struct __declspec(uuid("47db3286-2a33-47ef-adaa-c3f0c4b60056"))
SCPI_SENSe_CORRection_EXTension_PORT_INCLude;
    // [ default ] interface ISCPI_SENSe_CORRection_EXTension_PORT_INCLude

struct __declspec(uuid("a67387eb-805e-4436-b2de-da38a4b2ccfa"))
SCPI_SENSe_CORRection_RECeiver;
    // [ default ] interface ISCPI_SENSe_CORRection_RECeiver

struct __declspec(uuid("8875caea-bd99-487d-a481-1b277d8520dc"))
ISCPI_SENSe_CORRection_RECeiver_COLLect : IDispatch
{
    //
    // Property data
    //

    __declspec(property(put=PutACQuire))
    long ACQuire;

    //
    // Wrapper methods for error-handling
    //

    void PutACQuire (
        long _arg1 );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_ACQuire (
        /*[in]*/ long _arg1 ) = 0;
};

struct __declspec(uuid("4e9f015e-89b0-4f14-8d16-04f582cf6aa2"))
ISCPI_SENSe_CORRection_RECeiver : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCOLLect))
    ISCPI_SENSe_CORRection_RECeiver_COLLectPtr COLLect;
    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_SENSe_CORRection_RECeiver_COLLectPtr GetCOLLect ( );
    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_COLLect (
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection_RECeiver_COLLect * * Value ) = 0;
      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("1c7fb79e-0317-4e4f-8777-3e4e7a5ffc28"))
SCPI_SENSe_CORRection_RECeiver_COLLect;
    // [ default ] interface ISCPI_SENSe_CORRection_RECeiver_COLLect

struct __declspec(uuid("a810329d-e82c-40b3-83a1-9fa278401ade"))
SCPI_SENSe_CORRection_COEFficient_METHod;
    // [ default ] interface ISCPI_SENSe_CORRection_COEFficient_METHod

struct __declspec(uuid("613b873f-8bc1-435c-b2c4-800514ac7e17"))
ISCPI_SENSe_CORRection_COEFficient_METHod_RESPonse : IDispatch
{
    //
    // Property data
    //

    __declspec(property(put=PutOPEN))
    long OPEN;
    __declspec(property(put=PutSHORt))
    long SHORt;
    __declspec(property(put=PutTHRU))
    _variant_t THRU;

    //
    // Wrapper methods for error-handling
    //

    void PutOPEN (
        long _arg1 );
    void PutSHORt (
        long _arg1 );
    void PutTHRU (
        const _variant_t & _arg1 );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_OPEN (
        /*[in]*/ long _arg1 ) = 0;
      virtual HRESULT __stdcall put_SHORt (
        /*[in]*/ long _arg1 ) = 0;
      virtual HRESULT __stdcall put_THRU (
        /*[in]*/ VARIANT _arg1 ) = 0;
};

struct __declspec(uuid("e8251eeb-45a4-4238-9d02-6a850f324b7b"))
ISCPI_SENSe_CORRection_COEFficient_METHod : IDispatch
{
    //
    // Property data
    //

    __declspec(property(put=PutERESponse))
    _variant_t ERESponse;
    __declspec(property(get=GetRESPonse))
    ISCPI_SENSe_CORRection_COEFficient_METHod_RESPonsePtr RESPonse;
    __declspec(property(put=PutSOLT1))
    long SOLT1;
    __declspec(property(put=PutSOLT2))
    _variant_t SOLT2;

    //
    // Wrapper methods for error-handling
    //

    void PutERESponse (
        const _variant_t & _arg1 );
    ISCPI_SENSe_CORRection_COEFficient_METHod_RESPonsePtr GetRESPonse ( );
    void PutSOLT1 (
        long _arg1 );
    void PutSOLT2 (
        const _variant_t & _arg1 );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_ERESponse (
        /*[in]*/ VARIANT _arg1 ) = 0;
      virtual HRESULT __stdcall get_RESPonse (
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection_COEFficient_METHod_RESPonse * * Value ) = 0;
      virtual HRESULT __stdcall put_SOLT1 (
        /*[in]*/ long _arg1 ) = 0;
      virtual HRESULT __stdcall put_SOLT2 (
        /*[in]*/ VARIANT _arg1 ) = 0;
};

struct __declspec(uuid("ec3d4954-57da-463a-acd0-d0c0b21725b2"))
ISCPI_SENSe_CORRection_COEFficient : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDATA,put=PutDATA))
    _variant_t DATA[][][];
    __declspec(property(get=GetMETHod))
    ISCPI_SENSe_CORRection_COEFficient_METHodPtr METHod;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetDATA (
        _bstr_t Str,
        long Rpt,
        long Spt );
    void PutDATA (
        _bstr_t Str,
        long Rpt,
        long Spt,
        const _variant_t & Value );
    ISCPI_SENSe_CORRection_COEFficient_METHodPtr GetMETHod ( );
    HRESULT SAVE ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DATA (
        /*[in]*/ BSTR Str,
        /*[in]*/ long Rpt,
        /*[in]*/ long Spt,
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_DATA (
        /*[in]*/ BSTR Str,
        /*[in]*/ long Rpt,
        /*[in]*/ long Spt,
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_METHod (
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection_COEFficient_METHod * * Value ) = 0;
      virtual HRESULT __stdcall raw_SAVE ( ) = 0;
};

struct __declspec(uuid("c8b25f72-eb19-4ce8-a1d8-a007e0289dfc"))
SCPI_SENSe_CORRection_COEFficient_METHod_RESPonse;
    // [ default ] interface ISCPI_SENSe_CORRection_COEFficient_METHod_RESPonse

struct __declspec(uuid("9a536e68-2e2e-4eff-a31d-d6246417f340"))
SCPI_SENSe_CORRection_COLLect_DATA;
    // [ default ] interface ISCPI_SENSe_CORRection_COLLect_DATA

struct __declspec(uuid("0f6ec0da-830b-4d53-b00d-5b7ff12cb725"))
ISCPI_SENSe_CORRection_COLLect_DATA_THRU : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetMATCh,put=PutMATCh))
    _variant_t MATCh[][];
    __declspec(property(get=GetTRANsmission,put=PutTRANsmission))
    _variant_t TRANsmission[][];

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetMATCh (
        long Rpt,
        long Spt );
    void PutMATCh (
        long Rpt,
        long Spt,
        const _variant_t & Value );
    _variant_t GetTRANsmission (
        long Rpt,
        long Spt );
    void PutTRANsmission (
        long Rpt,
        long Spt,
        const _variant_t & Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_MATCh (
        /*[in]*/ long Rpt,
        /*[in]*/ long Spt,
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_MATCh (
        /*[in]*/ long Rpt,
        /*[in]*/ long Spt,
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_TRANsmission (
        /*[in]*/ long Rpt,
        /*[in]*/ long Spt,
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_TRANsmission (
        /*[in]*/ long Rpt,
        /*[in]*/ long Spt,
        /*[in]*/ VARIANT Value ) = 0;
};

struct __declspec(uuid("3b359f7f-1a8f-46b1-ab53-3b09dd74bd6b"))
ISCPI_SENSe_CORRection_COLLect_DATA : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetISOLation,put=PutISOLation))
    _variant_t ISOLation[][];
    __declspec(property(get=GetLOAD,put=PutLOAD))
    _variant_t LOAD[];
    __declspec(property(get=GetOPEN,put=PutOPEN))
    _variant_t OPEN[];
    __declspec(property(get=GetSHORt,put=PutSHORt))
    _variant_t SHORt[];
    __declspec(property(get=GetTHRU))
    ISCPI_SENSe_CORRection_COLLect_DATA_THRUPtr THRU;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetISOLation (
        long Rpt,
        long Spt );
    void PutISOLation (
        long Rpt,
        long Spt,
        const _variant_t & Value );
    _variant_t GetLOAD (
        long Pt );
    void PutLOAD (
        long Pt,
        const _variant_t & Value );
    _variant_t GetOPEN (
        long Pt );
    void PutOPEN (
        long Pt,
        const _variant_t & Value );
    _variant_t GetSHORt (
        long Pt );
    void PutSHORt (
        long Pt,
        const _variant_t & Value );
    ISCPI_SENSe_CORRection_COLLect_DATA_THRUPtr GetTHRU ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ISOLation (
        /*[in]*/ long Rpt,
        /*[in]*/ long Spt,
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_ISOLation (
        /*[in]*/ long Rpt,
        /*[in]*/ long Spt,
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_LOAD (
        /*[in]*/ long Pt,
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_LOAD (
        /*[in]*/ long Pt,
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_OPEN (
        /*[in]*/ long Pt,
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_OPEN (
        /*[in]*/ long Pt,
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_SHORt (
        /*[in]*/ long Pt,
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_SHORt (
        /*[in]*/ long Pt,
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_THRU (
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection_COLLect_DATA_THRU * * Value ) = 0;
};

struct __declspec(uuid("e71354ab-a457-49d0-88d7-5c1af2db0729"))
SCPI_SENSe_CORRection_COLLect_DATA_THRU;
    // [ default ] interface ISCPI_SENSe_CORRection_COLLect_DATA_THRU

struct __declspec(uuid("dfe60c88-0edf-40d9-96aa-0272d5e41c5d"))
ISCPI_SENSe_SWEep_TIME : IDispatch
{};

struct __declspec(uuid("602a8e06-f60e-44cc-be29-805b31341c24"))
SCPI_SENSe_SWEep_TIME;
    // [ default ] interface ISCPI_SENSe_SWEep_TIME

struct __declspec(uuid("3f78aca6-8363-4988-9c07-0208a9513d04"))
ISCPI_DISPlay_UPDate : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT IMMediate ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_IMMediate ( ) = 0;
};

struct __declspec(uuid("f5c507dc-912b-4e6d-b6b0-a6f9e1d89350"))
SCPI_DISPlay_UPDate;
    // [ default ] interface ISCPI_DISPlay_UPDate

struct __declspec(uuid("79dd1214-a2fe-4088-b8e7-d4edffa616a9"))
SCPI_CALCulate_SELected_CORRection;
    // [ default ] interface ISCPI_CALCulate_SELected_CORRection

struct __declspec(uuid("00459916-bdb0-401a-a2ae-8960d2c22acd"))
ISCPI_CALCulate_SELected_CORRection_EDELay : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetTIME,put=PutTIME))
    double TIME;

    //
    // Wrapper methods for error-handling
    //

    double GetTIME ( );
    void PutTIME (
        double Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TIME (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_TIME (
        /*[in]*/ double Value ) = 0;
};

struct __declspec(uuid("95b0a481-f69c-47d5-8b36-c35079854d78"))
SCPI_CALCulate_SELected_CORRection_EDELay;
    // [ default ] interface ISCPI_CALCulate_SELected_CORRection_EDELay

struct __declspec(uuid("f7794008-97dd-4fd8-9b36-456d6f0d769a"))
ISCPI_CALCulate_SELected_CORRection_OFFSet : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetPHASe,put=PutPHASe))
    double PHASe;

    //
    // Wrapper methods for error-handling
    //

    double GetPHASe ( );
    void PutPHASe (
        double Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PHASe (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_PHASe (
        /*[in]*/ double Value ) = 0;
};

struct __declspec(uuid("3921db7e-7b74-4860-b4ea-248858b72398"))
ISCPI_CALCulate_SELected_CORRection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetEDELay))
    ISCPI_CALCulate_SELected_CORRection_EDELayPtr EDELay;
    __declspec(property(get=GetOFFSet))
    ISCPI_CALCulate_SELected_CORRection_OFFSetPtr OFFSet;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_CALCulate_SELected_CORRection_EDELayPtr GetEDELay ( );
    ISCPI_CALCulate_SELected_CORRection_OFFSetPtr GetOFFSet ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_EDELay (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_CORRection_EDELay * * Value ) = 0;
      virtual HRESULT __stdcall get_OFFSet (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_CORRection_OFFSet * * Value ) = 0;
};

struct __declspec(uuid("52f86390-f33d-4239-9e7c-229fb71bffd2"))
SCPI_CALCulate_SELected_CORRection_OFFSet;
    // [ default ] interface ISCPI_CALCulate_SELected_CORRection_OFFSet

struct __declspec(uuid("04374ac9-5d0a-412e-b2d8-fba7afb3c26b"))
ISCPI_DISPlay_WINDow_TRACe_MEMory : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("d1264c44-42e0-4bc2-98d9-d13d7bc958ec"))
SCPI_DISPlay_WINDow_TRACe_MEMory;
    // [ default ] interface ISCPI_DISPlay_WINDow_TRACe_MEMory

struct __declspec(uuid("397183fd-4d15-4922-be17-449e81a07864"))
SCPI_DISPlay_WINDow_TRACe_ANNotation;
    // [ default ] interface ISCPI_DISPlay_WINDow_TRACe_ANNotation

struct __declspec(uuid("7aed3daa-d49d-4eb5-865b-5ee99c3ac67a"))
SCPI_DISPlay_WINDow_TRACe_ANNotation_MARKer;
    // [ default ] interface ISCPI_DISPlay_WINDow_TRACe_ANNotation_MARKer

struct __declspec(uuid("14895bc7-c020-4686-9ab7-17dd890c9cca"))
ISCPI_DISPlay_WINDow_TRACe_ANNotation_MARKer_POSition : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetX,put=PutX))
    double X;
    __declspec(property(get=GetY,put=PutY))
    double Y;

    //
    // Wrapper methods for error-handling
    //

    double GetX ( );
    void PutX (
        double Value );
    double GetY ( );
    void PutY (
        double Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_X (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_X (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_Y (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_Y (
        /*[in]*/ double Value ) = 0;
};

struct __declspec(uuid("eb13b7cc-d36b-4551-b257-dcf47759bc8e"))
ISCPI_DISPlay_WINDow_TRACe_ANNotation_MARKer : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetPOSition))
    ISCPI_DISPlay_WINDow_TRACe_ANNotation_MARKer_POSitionPtr POSition;
    __declspec(property(get=GetMEMory,put=PutMEMory))
    VARIANT_BOOL MEMory;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_DISPlay_WINDow_TRACe_ANNotation_MARKer_POSitionPtr GetPOSition ( );
    VARIANT_BOOL GetMEMory ( );
    void PutMEMory (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_POSition (
        /*[out,retval]*/ struct ISCPI_DISPlay_WINDow_TRACe_ANNotation_MARKer_POSition * * Value ) = 0;
      virtual HRESULT __stdcall get_MEMory (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_MEMory (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("a73d74f9-b8ad-43cd-9812-992cdcd3f8d7"))
ISCPI_DISPlay_WINDow_TRACe_ANNotation : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetMARKer))
    ISCPI_DISPlay_WINDow_TRACe_ANNotation_MARKerPtr MARKer;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_DISPlay_WINDow_TRACe_ANNotation_MARKerPtr GetMARKer ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_MARKer (
        /*[out,retval]*/ struct ISCPI_DISPlay_WINDow_TRACe_ANNotation_MARKer * * Value ) = 0;
};

struct __declspec(uuid("46809295-2869-487c-b3ea-37e7294b8074"))
ISCPI_DISPlay_WINDow_TRACe : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetY))
    ISCPI_DISPlay_WINDow_TRACe_YPtr Y;
    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;
    __declspec(property(get=GetMEMory))
    ISCPI_DISPlay_WINDow_TRACe_MEMoryPtr MEMory;
    __declspec(property(get=GetANNotation))
    ISCPI_DISPlay_WINDow_TRACe_ANNotationPtr ANNotation;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_DISPlay_WINDow_TRACe_YPtr GetY ( );
    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );
    ISCPI_DISPlay_WINDow_TRACe_MEMoryPtr GetMEMory ( );
    ISCPI_DISPlay_WINDow_TRACe_ANNotationPtr GetANNotation ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Y (
        /*[out,retval]*/ struct ISCPI_DISPlay_WINDow_TRACe_Y * * Value ) = 0;
      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_MEMory (
        /*[out,retval]*/ struct ISCPI_DISPlay_WINDow_TRACe_MEMory * * Value ) = 0;
      virtual HRESULT __stdcall get_ANNotation (
        /*[out,retval]*/ struct ISCPI_DISPlay_WINDow_TRACe_ANNotation * * Value ) = 0;
};

struct __declspec(uuid("43997328-e442-4aa2-9250-a4deb6ed5a56"))
SCPI_DISPlay_WINDow_TRACe_ANNotation_MARKer_POSition;
    // [ default ] interface ISCPI_DISPlay_WINDow_TRACe_ANNotation_MARKer_POSition

struct __declspec(uuid("b73c6946-5fbe-445b-8ea1-d226f3009a46"))
SCPI_SYSTem_BEEPer;
    // [ default ] interface ISCPI_SYSTem_BEEPer

struct __declspec(uuid("2a4d6c97-f1e8-402a-ac5b-37852cc16b68"))
ISCPI_SYSTem_BEEPer_COMPlete : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;

    //
    // Wrapper methods for error-handling
    //

    HRESULT IMMediate ( );
    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_IMMediate ( ) = 0;
      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("81e52b65-e5bc-405b-9771-61fc34bd294a"))
SCPI_SYSTem_BEEPer_COMPlete;
    // [ default ] interface ISCPI_SYSTem_BEEPer_COMPlete

struct __declspec(uuid("fa2df669-b636-4f35-8ba6-a989a141a886"))
ISCPI_SYSTem_BEEPer_WARNing : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;

    //
    // Wrapper methods for error-handling
    //

    HRESULT IMMediate ( );
    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_IMMediate ( ) = 0;
      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("54055f4c-082f-435a-b05c-cab0cfcf186f"))
ISCPI_SYSTem_BEEPer : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCOMPlete))
    ISCPI_SYSTem_BEEPer_COMPletePtr COMPlete;
    __declspec(property(get=GetWARNing))
    ISCPI_SYSTem_BEEPer_WARNingPtr WARNing;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_SYSTem_BEEPer_COMPletePtr GetCOMPlete ( );
    ISCPI_SYSTem_BEEPer_WARNingPtr GetWARNing ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_COMPlete (
        /*[out,retval]*/ struct ISCPI_SYSTem_BEEPer_COMPlete * * Value ) = 0;
      virtual HRESULT __stdcall get_WARNing (
        /*[out,retval]*/ struct ISCPI_SYSTem_BEEPer_WARNing * * Value ) = 0;
};

struct __declspec(uuid("b03bf808-db62-407d-b2d6-e755f2d21d30"))
SCPI_SYSTem_BEEPer_WARNing;
    // [ default ] interface ISCPI_SYSTem_BEEPer_WARNing

struct __declspec(uuid("6c96531b-e77d-4159-8053-89cc238425ce"))
ISCPI_CALCulate_SELected_CONVersion : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFUNCtion,put=PutFUNCtion))
    _bstr_t FUNCtion;
    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetFUNCtion ( );
    void PutFUNCtion (
        _bstr_t Value );
    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_FUNCtion (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_FUNCtion (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("80bb6073-ff66-424e-9452-5c882b86b019"))
SCPI_CALCulate_SELected_CONVersion;
    // [ default ] interface ISCPI_CALCulate_SELected_CONVersion

struct __declspec(uuid("a0389f0e-1ba8-4c6d-b70a-aa25c9ddc46c"))
SCPI_CALCulate_SELected_FILTer;
    // [ default ] interface ISCPI_CALCulate_SELected_FILTer

struct __declspec(uuid("a354b9f6-af63-4337-a504-a80e802f0bae"))
SCPI_CALCulate_SELected_FILTer_GATE;
    // [ default ] interface ISCPI_CALCulate_SELected_FILTer_GATE

struct __declspec(uuid("7821b0a1-de17-4084-8ca4-b0bfc63abf03"))
ISCPI_CALCulate_SELected_FILTer_GATE_TIME : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCENTer,put=PutCENTer))
    double CENTer;
    __declspec(property(get=GetSHAPe,put=PutSHAPe))
    _bstr_t SHAPe;
    __declspec(property(get=GetSPAN,put=PutSPAN))
    double SPAN;
    __declspec(property(get=GetSTARt,put=PutSTARt))
    double STARt;
    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;
    __declspec(property(get=GetSTOP,put=PutSTOP))
    double STOP;
    __declspec(property(get=GetTYPE,put=PutTYPE))
    _bstr_t TYPE;

    //
    // Wrapper methods for error-handling
    //

    double GetCENTer ( );
    void PutCENTer (
        double Value );
    _bstr_t GetSHAPe ( );
    void PutSHAPe (
        _bstr_t Value );
    double GetSPAN ( );
    void PutSPAN (
        double Value );
    double GetSTARt ( );
    void PutSTARt (
        double Value );
    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );
    double GetSTOP ( );
    void PutSTOP (
        double Value );
    _bstr_t GetTYPE ( );
    void PutTYPE (
        _bstr_t Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CENTer (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_CENTer (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_SHAPe (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_SHAPe (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_SPAN (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_SPAN (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_STARt (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_STARt (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_STOP (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_STOP (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_TYPE (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_TYPE (
        /*[in]*/ BSTR Value ) = 0;
};

struct __declspec(uuid("09b4bcaa-5d90-4886-bc36-1be3efd123f8"))
ISCPI_CALCulate_SELected_FILTer_GATE : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetTIME))
    ISCPI_CALCulate_SELected_FILTer_GATE_TIMEPtr TIME;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_CALCulate_SELected_FILTer_GATE_TIMEPtr GetTIME ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TIME (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_FILTer_GATE_TIME * * Value ) = 0;
};

struct __declspec(uuid("6a07c9c5-61da-4bda-9cc0-0d8c840d7161"))
ISCPI_CALCulate_SELected_FILTer : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetGATE))
    ISCPI_CALCulate_SELected_FILTer_GATEPtr GATE;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_CALCulate_SELected_FILTer_GATEPtr GetGATE ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_GATE (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_FILTer_GATE * * Value ) = 0;
};

struct __declspec(uuid("e75db115-a3a4-48d3-b316-74fc58d1e22a"))
SCPI_CALCulate_SELected_FILTer_GATE_TIME;
    // [ default ] interface ISCPI_CALCulate_SELected_FILTer_GATE_TIME

struct __declspec(uuid("25519f78-0241-402d-b778-d7f70a3380c4"))
SCPI_CALCulate_FSIMulator;
    // [ default ] interface ISCPI_CALCulate_FSIMulator

struct __declspec(uuid("30caff80-2429-47fc-bee9-fe63e5112a67"))
SCPI_CALCulate_FSIMulator_SENDed;
    // [ default ] interface ISCPI_CALCulate_FSIMulator_SENDed

struct __declspec(uuid("40c0d2e4-b8e5-4e31-971c-00602646d5a9"))
SCPI_CALCulate_FSIMulator_SENDed_DEEMbed;
    // [ default ] interface ISCPI_CALCulate_FSIMulator_SENDed_DEEMbed

struct __declspec(uuid("97c5274b-2271-447d-90cc-aaed85a517b8"))
SCPI_CALCulate_FSIMulator_SENDed_DEEMbed_PORT;
    // [ default ] interface ISCPI_CALCulate_FSIMulator_SENDed_DEEMbed_PORT

struct __declspec(uuid("80d4f351-8a9d-4ff1-aea4-1eb7fbf995dd"))
ISCPI_CALCulate_FSIMulator_SENDed_DEEMbed_PORT_USER : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFILename,put=PutFILename))
    _bstr_t FILename;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetFILename ( );
    void PutFILename (
        _bstr_t Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_FILename (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_FILename (
        /*[in]*/ BSTR Value ) = 0;
};

struct __declspec(uuid("01e04a91-88e4-49fb-8c4a-6c73acee3c08"))
ISCPI_CALCulate_FSIMulator_SENDed_DEEMbed_PORT : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUSER))
    ISCPI_CALCulate_FSIMulator_SENDed_DEEMbed_PORT_USERPtr USER;
    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_CALCulate_FSIMulator_SENDed_DEEMbed_PORT_USERPtr GetUSER ( );
    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_USER (
        /*[out,retval]*/ struct ISCPI_CALCulate_FSIMulator_SENDed_DEEMbed_PORT_USER * * Value ) = 0;
      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("d9f70327-68bf-4c26-ace2-54b19e5c7569"))
ISCPI_CALCulate_FSIMulator_SENDed_DEEMbed : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetPORT))
    ISCPI_CALCulate_FSIMulator_SENDed_DEEMbed_PORTPtr PORT[];

    //
    // Wrapper methods for error-handling
    //

    ISCPI_CALCulate_FSIMulator_SENDed_DEEMbed_PORTPtr GetPORT (
        long Pt );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PORT (
        /*[in]*/ long Pt,
        /*[out,retval]*/ struct ISCPI_CALCulate_FSIMulator_SENDed_DEEMbed_PORT * * Value ) = 0;
};

struct __declspec(uuid("4f2ab6d5-5535-4ff3-a65e-6ceb21f9e20d"))
SCPI_CALCulate_FSIMulator_SENDed_DEEMbed_PORT_USER;
    // [ default ] interface ISCPI_CALCulate_FSIMulator_SENDed_DEEMbed_PORT_USER

struct __declspec(uuid("350e053e-cea9-4d9c-9072-766ff06d213b"))
SCPI_CALCulate_FSIMulator_SENDed_PMCircuit;
    // [ default ] interface ISCPI_CALCulate_FSIMulator_SENDed_PMCircuit

struct __declspec(uuid("7e372d1a-76f6-450b-a8ab-cfac4f14dae8"))
SCPI_CALCulate_FSIMulator_SENDed_PMCircuit_PORT;
    // [ default ] interface ISCPI_CALCulate_FSIMulator_SENDed_PMCircuit_PORT

struct __declspec(uuid("eab84e0f-2006-4ebb-af91-72f9f685518c"))
ISCPI_CALCulate_FSIMulator_SENDed_PMCircuit_PORT_USER : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFILename,put=PutFILename))
    _bstr_t FILename;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetFILename ( );
    void PutFILename (
        _bstr_t Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_FILename (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_FILename (
        /*[in]*/ BSTR Value ) = 0;
};

struct __declspec(uuid("c2eb5e9e-9760-40fa-9829-514287646156"))
ISCPI_CALCulate_FSIMulator_SENDed_PMCircuit_PORT : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUSER))
    ISCPI_CALCulate_FSIMulator_SENDed_PMCircuit_PORT_USERPtr USER;
    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_CALCulate_FSIMulator_SENDed_PMCircuit_PORT_USERPtr GetUSER ( );
    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_USER (
        /*[out,retval]*/ struct ISCPI_CALCulate_FSIMulator_SENDed_PMCircuit_PORT_USER * * Value ) = 0;
      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("78dfa40e-2488-40ad-9ce3-6e883472bf7d"))
ISCPI_CALCulate_FSIMulator_SENDed_PMCircuit : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetPORT))
    ISCPI_CALCulate_FSIMulator_SENDed_PMCircuit_PORTPtr PORT[];

    //
    // Wrapper methods for error-handling
    //

    ISCPI_CALCulate_FSIMulator_SENDed_PMCircuit_PORTPtr GetPORT (
        long Pt );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PORT (
        /*[in]*/ long Pt,
        /*[out,retval]*/ struct ISCPI_CALCulate_FSIMulator_SENDed_PMCircuit_PORT * * Value ) = 0;
};

struct __declspec(uuid("77293193-362e-418c-b374-5cadfa0cee78"))
SCPI_CALCulate_FSIMulator_SENDed_PMCircuit_PORT_USER;
    // [ default ] interface ISCPI_CALCulate_FSIMulator_SENDed_PMCircuit_PORT_USER

struct __declspec(uuid("f7c68046-d790-43c8-89f9-65da661da215"))
SCPI_CALCulate_FSIMulator_SENDed_ZCONversion;
    // [ default ] interface ISCPI_CALCulate_FSIMulator_SENDed_ZCONversion

struct __declspec(uuid("b58038ed-6c87-4ad0-ad50-aa994aee0534"))
SCPI_CALCulate_FSIMulator_SENDed_ZCONversion_PORT;
    // [ default ] interface ISCPI_CALCulate_FSIMulator_SENDed_ZCONversion_PORT

struct __declspec(uuid("e227d816-1362-4e84-b492-a0c8270d079a"))
ISCPI_CALCulate_FSIMulator_SENDed_ZCONversion_PORT_Z0 : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetR,put=PutR))
    double R;

    //
    // Wrapper methods for error-handling
    //

    double GetR ( );
    void PutR (
        double Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_R (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_R (
        /*[in]*/ double Value ) = 0;
};

struct __declspec(uuid("c16515e5-b5ea-4306-b9d2-a0760d600431"))
ISCPI_CALCulate_FSIMulator_SENDed_ZCONversion_PORT : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetZ0))
    ISCPI_CALCulate_FSIMulator_SENDed_ZCONversion_PORT_Z0Ptr Z0;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_CALCulate_FSIMulator_SENDed_ZCONversion_PORT_Z0Ptr GetZ0 ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Z0 (
        /*[out,retval]*/ struct ISCPI_CALCulate_FSIMulator_SENDed_ZCONversion_PORT_Z0 * * Value ) = 0;
};

struct __declspec(uuid("d3b336d9-fb5d-4495-84c1-523ef2cb05f7"))
ISCPI_CALCulate_FSIMulator_SENDed_ZCONversion : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;
    __declspec(property(get=GetPORT))
    ISCPI_CALCulate_FSIMulator_SENDed_ZCONversion_PORTPtr PORT[];

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );
    ISCPI_CALCulate_FSIMulator_SENDed_ZCONversion_PORTPtr GetPORT (
        long Pt );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_PORT (
        /*[in]*/ long Pt,
        /*[out,retval]*/ struct ISCPI_CALCulate_FSIMulator_SENDed_ZCONversion_PORT * * Value ) = 0;
};

struct __declspec(uuid("019e04dd-10a8-4e63-8996-a3e30b924707"))
ISCPI_CALCulate_FSIMulator_SENDed : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDEEMbed))
    ISCPI_CALCulate_FSIMulator_SENDed_DEEMbedPtr DEEMbed;
    __declspec(property(get=GetPMCircuit))
    ISCPI_CALCulate_FSIMulator_SENDed_PMCircuitPtr PMCircuit;
    __declspec(property(get=GetZCONversion))
    ISCPI_CALCulate_FSIMulator_SENDed_ZCONversionPtr ZCONversion;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_CALCulate_FSIMulator_SENDed_DEEMbedPtr GetDEEMbed ( );
    ISCPI_CALCulate_FSIMulator_SENDed_PMCircuitPtr GetPMCircuit ( );
    ISCPI_CALCulate_FSIMulator_SENDed_ZCONversionPtr GetZCONversion ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DEEMbed (
        /*[out,retval]*/ struct ISCPI_CALCulate_FSIMulator_SENDed_DEEMbed * * Value ) = 0;
      virtual HRESULT __stdcall get_PMCircuit (
        /*[out,retval]*/ struct ISCPI_CALCulate_FSIMulator_SENDed_PMCircuit * * Value ) = 0;
      virtual HRESULT __stdcall get_ZCONversion (
        /*[out,retval]*/ struct ISCPI_CALCulate_FSIMulator_SENDed_ZCONversion * * Value ) = 0;
};

struct __declspec(uuid("5939b8ad-a716-4569-8561-b9041f320d83"))
ISCPI_CALCulate_FSIMulator : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSENDed))
    ISCPI_CALCulate_FSIMulator_SENDedPtr SENDed;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_CALCulate_FSIMulator_SENDedPtr GetSENDed ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SENDed (
        /*[out,retval]*/ struct ISCPI_CALCulate_FSIMulator_SENDed * * Value ) = 0;
};

struct __declspec(uuid("2764767e-60e7-47c2-b2c1-bfd37693c47d"))
SCPI_CALCulate_FSIMulator_SENDed_ZCONversion_PORT_Z0;
    // [ default ] interface ISCPI_CALCulate_FSIMulator_SENDed_ZCONversion_PORT_Z0

struct __declspec(uuid("4819ef8d-902b-4fd1-9874-8adf57f70cd0"))
SCPI_CALCulate_SELected_FUNCtion;
    // [ default ] interface ISCPI_CALCulate_SELected_FUNCtion

struct __declspec(uuid("0dd332a1-185e-413e-a227-80cd5c35ba18"))
ISCPI_CALCulate_SELected_FUNCtion_DOMain : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCOUPle,put=PutCOUPle))
    VARIANT_BOOL COUPle;
    __declspec(property(get=GetSTARt,put=PutSTARt))
    double STARt;
    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;
    __declspec(property(get=GetSTOP,put=PutSTOP))
    double STOP;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetCOUPle ( );
    void PutCOUPle (
        VARIANT_BOOL Value );
    double GetSTARt ( );
    void PutSTARt (
        double Value );
    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );
    double GetSTOP ( );
    void PutSTOP (
        double Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_COUPle (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_COUPle (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_STARt (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_STARt (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_STOP (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_STOP (
        /*[in]*/ double Value ) = 0;
};

struct __declspec(uuid("be6e6589-9080-4871-aa9c-4a808a732492"))
ISCPI_CALCulate_SELected_FUNCtion : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDATA))
    _variant_t DATA;
    __declspec(property(get=GetDOMain))
    ISCPI_CALCulate_SELected_FUNCtion_DOMainPtr DOMain;
    __declspec(property(get=GetPEXCursion,put=PutPEXCursion))
    double PEXCursion;
    __declspec(property(get=GetPOINts))
    long POINts;
    __declspec(property(get=GetPPOLarity,put=PutPPOLarity))
    _bstr_t PPOLarity;
    __declspec(property(get=GetTARGet,put=PutTARGet))
    double TARGet;
    __declspec(property(get=GetTTRansition,put=PutTTRansition))
    _bstr_t TTRansition;
    __declspec(property(get=GetTYPE,put=PutTYPE))
    _bstr_t TYPE;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetDATA ( );
    ISCPI_CALCulate_SELected_FUNCtion_DOMainPtr GetDOMain ( );
    HRESULT EXECute ( );
    double GetPEXCursion ( );
    void PutPEXCursion (
        double Value );
    long GetPOINts ( );
    _bstr_t GetPPOLarity ( );
    void PutPPOLarity (
        _bstr_t Value );
    double GetTARGet ( );
    void PutTARGet (
        double Value );
    _bstr_t GetTTRansition ( );
    void PutTTRansition (
        _bstr_t Value );
    _bstr_t GetTYPE ( );
    void PutTYPE (
        _bstr_t Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DATA (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall get_DOMain (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_FUNCtion_DOMain * * Value ) = 0;
      virtual HRESULT __stdcall raw_EXECute ( ) = 0;
      virtual HRESULT __stdcall get_PEXCursion (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_PEXCursion (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_POINts (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall get_PPOLarity (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_PPOLarity (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_TARGet (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_TARGet (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_TTRansition (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_TTRansition (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_TYPE (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_TYPE (
        /*[in]*/ BSTR Value ) = 0;
};

struct __declspec(uuid("e510bc8a-d5c3-44e3-a4d1-334c70cdace3"))
SCPI_CALCulate_SELected_FUNCtion_DOMain;
    // [ default ] interface ISCPI_CALCulate_SELected_FUNCtion_DOMain

struct __declspec(uuid("6423b2c1-89cf-49a0-9612-51cd34d676a4"))
ISCPI_CALCulate_SELected_LIMit_REPort : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetALL))
    _variant_t ALL;
    __declspec(property(get=GetDATA))
    _variant_t DATA;
    __declspec(property(get=GetPOINts))
    long POINts;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetALL ( );
    _variant_t GetDATA ( );
    long GetPOINts ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ALL (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall get_DATA (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall get_POINts (
        /*[out,retval]*/ long * Value ) = 0;
};

struct __declspec(uuid("505eae1e-28a4-4e98-a039-73a037b0e582"))
SCPI_CALCulate_SELected_LIMit_REPort;
    // [ default ] interface ISCPI_CALCulate_SELected_LIMit_REPort

struct __declspec(uuid("78aaa7ac-702c-48e9-be2e-cff443ae74d6"))
ISCPI_CALCulate_SELected_LIMit_OFFSet : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAMPLitude,put=PutAMPLitude))
    double AMPLitude;
    __declspec(property(get=GetSTIMulus,put=PutSTIMulus))
    double STIMulus;

    //
    // Wrapper methods for error-handling
    //

    double GetAMPLitude ( );
    void PutAMPLitude (
        double Value );
    HRESULT MARKer ( );
    double GetSTIMulus ( );
    void PutSTIMulus (
        double Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AMPLitude (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_AMPLitude (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall raw_MARKer ( ) = 0;
      virtual HRESULT __stdcall get_STIMulus (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_STIMulus (
        /*[in]*/ double Value ) = 0;
};

struct __declspec(uuid("e3382ed8-571f-4c90-b49d-4f4c446e0b6e"))
ISCPI_CALCulate_SELected_LIMit : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDATA,put=PutDATA))
    _variant_t DATA;
    __declspec(property(get=GetFAIL))
    VARIANT_BOOL FAIL;
    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;
    __declspec(property(get=GetDISPlay))
    ISCPI_CALCulate_SELected_LIMit_DISPlayPtr DISPlay;
    __declspec(property(get=GetREPort))
    ISCPI_CALCulate_SELected_LIMit_REPortPtr REPort;
    __declspec(property(get=GetOFFSet))
    ISCPI_CALCulate_SELected_LIMit_OFFSetPtr OFFSet;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetDATA ( );
    void PutDATA (
        const _variant_t & Value );
    VARIANT_BOOL GetFAIL ( );
    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );
    ISCPI_CALCulate_SELected_LIMit_DISPlayPtr GetDISPlay ( );
    ISCPI_CALCulate_SELected_LIMit_REPortPtr GetREPort ( );
    ISCPI_CALCulate_SELected_LIMit_OFFSetPtr GetOFFSet ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DATA (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_DATA (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_FAIL (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_DISPlay (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_LIMit_DISPlay * * Value ) = 0;
      virtual HRESULT __stdcall get_REPort (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_LIMit_REPort * * Value ) = 0;
      virtual HRESULT __stdcall get_OFFSet (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_LIMit_OFFSet * * Value ) = 0;
};

struct __declspec(uuid("fcd07ea1-ecdc-4010-9c84-bf03444589ff"))
SCPI_CALCulate_SELected_LIMit_OFFSet;
    // [ default ] interface ISCPI_CALCulate_SELected_LIMit_OFFSet

struct __declspec(uuid("2bae8f20-b2a4-4ad1-a618-94a47ff85882"))
SCPI_CALCulate_SELected_TRANsform;
    // [ default ] interface ISCPI_CALCulate_SELected_TRANsform

struct __declspec(uuid("14020d21-bec3-496d-aa0c-72c5c35701ff"))
SCPI_CALCulate_SELected_TRANsform_TIME;
    // [ default ] interface ISCPI_CALCulate_SELected_TRANsform_TIME

struct __declspec(uuid("289f282d-5c1f-4a0d-850f-8f574c5fec6a"))
ISCPI_CALCulate_SELected_TRANsform_TIME_IMPulse : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetWIDTh,put=PutWIDTh))
    double WIDTh;

    //
    // Wrapper methods for error-handling
    //

    double GetWIDTh ( );
    void PutWIDTh (
        double Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_WIDTh (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_WIDTh (
        /*[in]*/ double Value ) = 0;
};

struct __declspec(uuid("8a0207cd-d06a-421e-be90-2d35d30ffd2a"))
SCPI_CALCulate_SELected_TRANsform_TIME_IMPulse;
    // [ default ] interface ISCPI_CALCulate_SELected_TRANsform_TIME_IMPulse

struct __declspec(uuid("7585c576-4dc0-4f4b-9372-c5c9043fdd4b"))
ISCPI_CALCulate_SELected_TRANsform_TIME_STEP : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRTIMe,put=PutRTIMe))
    double RTIMe;

    //
    // Wrapper methods for error-handling
    //

    double GetRTIMe ( );
    void PutRTIMe (
        double Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RTIMe (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_RTIMe (
        /*[in]*/ double Value ) = 0;
};

struct __declspec(uuid("06510db0-3a7e-45fe-9908-cfc8f42592e9"))
SCPI_CALCulate_SELected_TRANsform_TIME_STEP;
    // [ default ] interface ISCPI_CALCulate_SELected_TRANsform_TIME_STEP

struct __declspec(uuid("7c23b5bc-9938-481c-9da1-9dc2d1835db0"))
SCPI_DISPlay_COLor;
    // [ default ] interface ISCPI_DISPlay_COLor

struct __declspec(uuid("74f81fd0-74dc-4de8-82c3-38a295db33f4"))
ISCPI_DISPlay_COLor_TRACe : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDATA,put=PutDATA))
    _variant_t DATA;
    __declspec(property(get=GetMEMory,put=PutMEMory))
    _variant_t MEMory;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetDATA ( );
    void PutDATA (
        const _variant_t & Value );
    _variant_t GetMEMory ( );
    void PutMEMory (
        const _variant_t & Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DATA (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_DATA (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_MEMory (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_MEMory (
        /*[in]*/ VARIANT Value ) = 0;
};

struct __declspec(uuid("28755084-93fd-436f-9adc-50d910dea64a"))
ISCPI_DISPlay_COLor : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBACK,put=PutBACK))
    _variant_t BACK;
    __declspec(property(get=GetGRATicule,put=PutGRATicule))
    _variant_t GRATicule;
    __declspec(property(get=GetTRACe))
    ISCPI_DISPlay_COLor_TRACePtr TRACe[];

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetBACK ( );
    void PutBACK (
        const _variant_t & Value );
    _variant_t GetGRATicule ( );
    void PutGRATicule (
        const _variant_t & Value );
    HRESULT RESet ( );
    ISCPI_DISPlay_COLor_TRACePtr GetTRACe (
        long Tr );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_BACK (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_BACK (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_GRATicule (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_GRATicule (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall raw_RESet ( ) = 0;
      virtual HRESULT __stdcall get_TRACe (
        /*[in]*/ long Tr,
        /*[out,retval]*/ struct ISCPI_DISPlay_COLor_TRACe * * Value ) = 0;
};

struct __declspec(uuid("2b9762e8-88f4-489e-a95a-7c3f821cd471"))
SCPI_DISPlay_COLor_TRACe;
    // [ default ] interface ISCPI_DISPlay_COLor_TRACe

struct __declspec(uuid("7e2f44f8-c542-469c-9be6-41267ab805e6"))
ISCPI_DISPlay_WINDow_TITLe : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDATA,put=PutDATA))
    _bstr_t DATA;
    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetDATA ( );
    void PutDATA (
        _bstr_t Value );
    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DATA (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_DATA (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("66454ccd-fff8-494f-ba3d-495e0ebfda8f"))
SCPI_DISPlay_WINDow_TITLe;
    // [ default ] interface ISCPI_DISPlay_WINDow_TITLe

struct __declspec(uuid("6971e0d1-4c00-4c5f-9774-39c398a70123"))
ISCPI_DISPlay_WINDow_X : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSPACing,put=PutSPACing))
    _bstr_t SPACing;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetSPACing ( );
    void PutSPACing (
        _bstr_t Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SPACing (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_SPACing (
        /*[in]*/ BSTR Value ) = 0;
};

struct __declspec(uuid("66a74117-e311-43e0-804d-7d00b0103473"))
SCPI_DISPlay_WINDow_X;
    // [ default ] interface ISCPI_DISPlay_WINDow_X

struct __declspec(uuid("871be72f-bd81-4ef1-b21f-5d5c0051e040"))
SCPI_HCOPy;
    // [ default ] interface ISCPI_HCOPy

struct __declspec(uuid("78071fdd-d645-4cc8-be33-7066f0f1321b"))
ISCPI_HCOPy_DATE : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSTAMp,put=PutSTAMp))
    VARIANT_BOOL STAMp;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetSTAMp ( );
    void PutSTAMp (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_STAMp (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STAMp (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("b2e88782-9bfc-46ae-aaee-b75b53a0c248"))
ISCPI_HCOPy : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetIMAGe,put=PutIMAGe))
    _bstr_t IMAGe;
    __declspec(property(get=GetPAINt,put=PutPAINt))
    _bstr_t PAINt;
    __declspec(property(get=GetDATE))
    ISCPI_HCOPy_DATEPtr DATE;

    //
    // Wrapper methods for error-handling
    //

    HRESULT ABORt ( );
    _bstr_t GetIMAGe ( );
    void PutIMAGe (
        _bstr_t Value );
    HRESULT IMMediate ( );
    _bstr_t GetPAINt ( );
    void PutPAINt (
        _bstr_t Value );
    ISCPI_HCOPy_DATEPtr GetDATE ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_ABORt ( ) = 0;
      virtual HRESULT __stdcall get_IMAGe (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_IMAGe (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall raw_IMMediate ( ) = 0;
      virtual HRESULT __stdcall get_PAINt (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_PAINt (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_DATE (
        /*[out,retval]*/ struct ISCPI_HCOPy_DATE * * Value ) = 0;
};

struct __declspec(uuid("58f79342-07b8-40ab-98d1-5cd8fa8f5754"))
SCPI_HCOPy_DATE;
    // [ default ] interface ISCPI_HCOPy_DATE

struct __declspec(uuid("1d20989f-568a-49f5-992b-567a3e325132"))
SCPI_DISPlay_WINDow_ANNotation;
    // [ default ] interface ISCPI_DISPlay_WINDow_ANNotation

struct __declspec(uuid("0b48bc18-4027-4783-9cc5-aa997d2c32b0"))
SCPI_DISPlay_WINDow_ANNotation_MARKer;
    // [ default ] interface ISCPI_DISPlay_WINDow_ANNotation_MARKer

struct __declspec(uuid("53b66689-8bf9-47ff-b5a8-b485e26ef9ed"))
ISCPI_DISPlay_WINDow_ANNotation_MARKer_ALIGn : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetTYPE,put=PutTYPE))
    _bstr_t TYPE;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetTYPE ( );
    void PutTYPE (
        _bstr_t Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TYPE (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_TYPE (
        /*[in]*/ BSTR Value ) = 0;
};

struct __declspec(uuid("fc3c7c81-4b24-4014-a006-32f95b2f9d52"))
SCPI_DISPlay_WINDow_ANNotation_MARKer_ALIGn;
    // [ default ] interface ISCPI_DISPlay_WINDow_ANNotation_MARKer_ALIGn

struct __declspec(uuid("29b4da17-6a0e-4803-9edb-0cf6f958be88"))
ISCPI_DISPlay_WINDow_ANNotation_MARKer_SINGle : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("0aa03b96-cd69-43ad-87ea-f2fff3edcbeb"))
ISCPI_DISPlay_WINDow_ANNotation_MARKer : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetALIGn))
    ISCPI_DISPlay_WINDow_ANNotation_MARKer_ALIGnPtr ALIGn;
    __declspec(property(get=GetSINGle))
    ISCPI_DISPlay_WINDow_ANNotation_MARKer_SINGlePtr SINGle;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_DISPlay_WINDow_ANNotation_MARKer_ALIGnPtr GetALIGn ( );
    ISCPI_DISPlay_WINDow_ANNotation_MARKer_SINGlePtr GetSINGle ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ALIGn (
        /*[out,retval]*/ struct ISCPI_DISPlay_WINDow_ANNotation_MARKer_ALIGn * * Value ) = 0;
      virtual HRESULT __stdcall get_SINGle (
        /*[out,retval]*/ struct ISCPI_DISPlay_WINDow_ANNotation_MARKer_SINGle * * Value ) = 0;
};

struct __declspec(uuid("c1b58c96-106f-4d2f-a5b1-c1e9bfd1358c"))
ISCPI_DISPlay_WINDow_ANNotation : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetMARKer))
    ISCPI_DISPlay_WINDow_ANNotation_MARKerPtr MARKer;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_DISPlay_WINDow_ANNotation_MARKerPtr GetMARKer ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_MARKer (
        /*[out,retval]*/ struct ISCPI_DISPlay_WINDow_ANNotation_MARKer * * Value ) = 0;
};

struct __declspec(uuid("5f15c1a2-4cbe-47cc-85ce-e022fa08077a"))
ISCPI_DISPlay_WINDow : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSPLit,put=PutSPLit))
    long SPLit;
    __declspec(property(get=GetTRACe))
    ISCPI_DISPlay_WINDow_TRACePtr TRACe[];
    __declspec(property(get=GetY))
    ISCPI_DISPlay_WINDow_YPtr Y;
    __declspec(property(get=GetTITLe))
    ISCPI_DISPlay_WINDow_TITLePtr TITLe;
    __declspec(property(get=GetX))
    ISCPI_DISPlay_WINDow_XPtr X;
    __declspec(property(get=GetANNotation))
    ISCPI_DISPlay_WINDow_ANNotationPtr ANNotation;
    __declspec(property(get=GetMAXimize,put=PutMAXimize))
    VARIANT_BOOL MAXimize;

    //
    // Wrapper methods for error-handling
    //

    HRESULT ACTivate ( );
    long GetSPLit ( );
    void PutSPLit (
        long Value );
    ISCPI_DISPlay_WINDow_TRACePtr GetTRACe (
        long Tr );
    ISCPI_DISPlay_WINDow_YPtr GetY ( );
    ISCPI_DISPlay_WINDow_TITLePtr GetTITLe ( );
    ISCPI_DISPlay_WINDow_XPtr GetX ( );
    ISCPI_DISPlay_WINDow_ANNotationPtr GetANNotation ( );
    VARIANT_BOOL GetMAXimize ( );
    void PutMAXimize (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_ACTivate ( ) = 0;
      virtual HRESULT __stdcall get_SPLit (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_SPLit (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_TRACe (
        /*[in]*/ long Tr,
        /*[out,retval]*/ struct ISCPI_DISPlay_WINDow_TRACe * * Value ) = 0;
      virtual HRESULT __stdcall get_Y (
        /*[out,retval]*/ struct ISCPI_DISPlay_WINDow_Y * * Value ) = 0;
      virtual HRESULT __stdcall get_TITLe (
        /*[out,retval]*/ struct ISCPI_DISPlay_WINDow_TITLe * * Value ) = 0;
      virtual HRESULT __stdcall get_X (
        /*[out,retval]*/ struct ISCPI_DISPlay_WINDow_X * * Value ) = 0;
      virtual HRESULT __stdcall get_ANNotation (
        /*[out,retval]*/ struct ISCPI_DISPlay_WINDow_ANNotation * * Value ) = 0;
      virtual HRESULT __stdcall get_MAXimize (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_MAXimize (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("cd6d8a94-a128-4081-a015-6de21adcdecb"))
SCPI_DISPlay_WINDow_ANNotation_MARKer_SINGle;
    // [ default ] interface ISCPI_DISPlay_WINDow_ANNotation_MARKer_SINGle

struct __declspec(uuid("5fcc7ea6-8e20-4ddc-bb99-94a1291808ae"))
ISCPI_MMEMory_LOAD_CHANnel : IDispatch
{
    //
    // Property data
    //

    __declspec(property(put=PutSTATe))
    _bstr_t STATe;

    //
    // Wrapper methods for error-handling
    //

    void PutSTATe (
        _bstr_t _arg1 );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ BSTR _arg1 ) = 0;
};

struct __declspec(uuid("fe0efc37-ac91-4e8b-b2c1-5ed3846cdc75"))
SCPI_MMEMory_LOAD_CHANnel;
    // [ default ] interface ISCPI_MMEMory_LOAD_CHANnel

struct __declspec(uuid("ec95b11a-d81c-494c-82f3-aeb6fdb8a00b"))
ISCPI_MMEMory_STORe_CHANnel : IDispatch
{
    //
    // Property data
    //

    __declspec(property(put=PutSTATe))
    _bstr_t STATe;

    //
    // Wrapper methods for error-handling
    //

    void PutSTATe (
        _bstr_t _arg1 );
    HRESULT CLEar ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall raw_CLEar ( ) = 0;
};

struct __declspec(uuid("a781250f-cbd2-4057-8d8b-be99409c597e"))
SCPI_MMEMory_STORe_CHANnel;
    // [ default ] interface ISCPI_MMEMory_STORe_CHANnel

struct __declspec(uuid("82f284db-06de-4093-b9a3-652bcc7cddf7"))
SCPI_MMEMory_STORe_SNP;
    // [ default ] interface ISCPI_MMEMory_STORe_SNP

struct __declspec(uuid("a1076422-07b5-4a33-8a68-1cb8674297c1"))
ISCPI_MMEMory_STORe_SNP_TYPE : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetS1P,put=PutS1P))
    long S1P;
    __declspec(property(get=GetS2P,put=PutS2P))
    _variant_t S2P;

    //
    // Wrapper methods for error-handling
    //

    long GetS1P ( );
    void PutS1P (
        long Value );
    _variant_t GetS2P ( );
    void PutS2P (
        const _variant_t & Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_S1P (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_S1P (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_S2P (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_S2P (
        /*[in]*/ VARIANT Value ) = 0;
};

struct __declspec(uuid("3377c2ca-118f-40a0-bbb9-eeb1e41df93c"))
ISCPI_MMEMory_STORe_SNP : IDispatch
{
    //
    // Property data
    //

    __declspec(property(put=PutDATA))
    _bstr_t DATA;
    __declspec(property(get=GetFORMat,put=PutFORMat))
    _bstr_t FORMat;
    __declspec(property(get=GetTYPE))
    ISCPI_MMEMory_STORe_SNP_TYPEPtr TYPE;

    //
    // Wrapper methods for error-handling
    //

    void PutDATA (
        _bstr_t _arg1 );
    _bstr_t GetFORMat ( );
    void PutFORMat (
        _bstr_t Value );
    ISCPI_MMEMory_STORe_SNP_TYPEPtr GetTYPE ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_DATA (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_FORMat (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_FORMat (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_TYPE (
        /*[out,retval]*/ struct ISCPI_MMEMory_STORe_SNP_TYPE * * Value ) = 0;
};

struct __declspec(uuid("09af183c-8f7f-4503-9518-5de23f7d553b"))
ISCPI_MMEMory_STORe : IDispatch
{
    //
    // Property data
    //

    __declspec(property(put=PutSTATe))
    _bstr_t STATe;
    __declspec(property(get=GetSTYPe,put=PutSTYPe))
    _bstr_t STYPe;
    __declspec(property(put=PutIMAGe))
    _bstr_t IMAGe;
    __declspec(property(get=GetCHANnel))
    ISCPI_MMEMory_STORe_CHANnelPtr CHANnel;
    __declspec(property(put=PutCKIT))
    _bstr_t CKIT[];
    __declspec(property(put=PutLIMit))
    _bstr_t LIMit;
    __declspec(property(put=PutPLOSs))
    _bstr_t PLOSs[];
    __declspec(property(put=PutRLIMit))
    _bstr_t RLIMit;
    __declspec(property(put=PutSEGMent))
    _bstr_t SEGMent;
    __declspec(property(put=PutFDATa))
    _bstr_t FDATa;
    __declspec(property(get=GetSNP))
    ISCPI_MMEMory_STORe_SNPPtr SNP;
    __declspec(property(put=PutCALibration))
    _bstr_t CALibration;

    //
    // Wrapper methods for error-handling
    //

    void PutSTATe (
        _bstr_t _arg1 );
    _bstr_t GetSTYPe ( );
    void PutSTYPe (
        _bstr_t Param );
    void PutIMAGe (
        _bstr_t _arg1 );
    ISCPI_MMEMory_STORe_CHANnelPtr GetCHANnel ( );
    void PutLIMit (
        _bstr_t _arg1 );
    void PutRLIMit (
        _bstr_t _arg1 );
    void PutSEGMent (
        _bstr_t _arg1 );
    void PutFDATa (
        _bstr_t _arg1 );
    ISCPI_MMEMory_STORe_SNPPtr GetSNP ( );
    void PutCKIT (
        long Ck,
        _bstr_t _arg2 );
    void PutPLOSs (
        long Pt,
        _bstr_t _arg2 );
    void PutCALibration (
        _bstr_t _arg1 );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_STYPe (
        /*[out,retval]*/ BSTR * Param ) = 0;
      virtual HRESULT __stdcall put_STYPe (
        /*[in]*/ BSTR Param ) = 0;
      virtual HRESULT __stdcall put_IMAGe (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_CHANnel (
        /*[out,retval]*/ struct ISCPI_MMEMory_STORe_CHANnel * * Value ) = 0;
      virtual HRESULT __stdcall put_LIMit (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall put_RLIMit (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall put_SEGMent (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall put_FDATa (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_SNP (
        /*[out,retval]*/ struct ISCPI_MMEMory_STORe_SNP * * Value ) = 0;
      virtual HRESULT __stdcall put_CKIT (
        /*[in]*/ long Ck,
        /*[in]*/ BSTR _arg2 ) = 0;
      virtual HRESULT __stdcall put_PLOSs (
        /*[in]*/ long Pt,
        /*[in]*/ BSTR _arg2 ) = 0;
      virtual HRESULT __stdcall put_CALibration (
        /*[in]*/ BSTR _arg1 ) = 0;
};

struct __declspec(uuid("5c68357a-1140-4b5b-965d-c6104c19aedd"))
SCPI_MMEMory_STORe_SNP_TYPE;
    // [ default ] interface ISCPI_MMEMory_STORe_SNP_TYPE

struct __declspec(uuid("d1b38cbb-f65a-4140-be1f-e63a2d2592b4"))
ISCPI_SENSe_ROSCillator : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSOURce,put=PutSOURce))
    _bstr_t SOURce;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetSOURce ( );
    void PutSOURce (
        _bstr_t Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SOURce (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_SOURce (
        /*[in]*/ BSTR Value ) = 0;
};

struct __declspec(uuid("05b7d3db-0013-4972-9e12-82a7905a1514"))
SCPI_SENSe_ROSCillator;
    // [ default ] interface ISCPI_SENSe_ROSCillator

struct __declspec(uuid("b4e7860f-3364-4084-9b56-b4c823468b1f"))
SCPI_SERVice;
    // [ default ] interface ISCPI_SERVice

struct __declspec(uuid("a3469075-13d1-4cc8-81b6-4488ff9e72cd"))
SCPI_SERVice_CHANnel;
    // [ default ] interface ISCPI_SERVice_CHANnel

struct __declspec(uuid("7d18ae16-2a61-4875-acf5-c9b672c47ee4"))
ISCPI_SERVice_CHANnel_TRACe : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetACTive))
    long ACTive;
    __declspec(property(get=GetCOUNt))
    long COUNt;

    //
    // Wrapper methods for error-handling
    //

    long GetACTive ( );
    long GetCOUNt ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ACTive (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall get_COUNt (
        /*[out,retval]*/ long * Value ) = 0;
};

struct __declspec(uuid("872bf2dd-7581-4d1a-b50e-29e92cd9406b"))
ISCPI_SERVice_CHANnel : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetTRACe))
    ISCPI_SERVice_CHANnel_TRACePtr TRACe;
    __declspec(property(get=GetACTive))
    long ACTive;
    __declspec(property(get=GetCOUNt))
    long COUNt;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_SERVice_CHANnel_TRACePtr GetTRACe ( );
    long GetACTive ( );
    long GetCOUNt ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TRACe (
        /*[out,retval]*/ struct ISCPI_SERVice_CHANnel_TRACe * * Value ) = 0;
      virtual HRESULT __stdcall get_ACTive (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall get_COUNt (
        /*[out,retval]*/ long * Value ) = 0;
};

struct __declspec(uuid("b6fad400-71f0-46f0-80be-ebecdb08826d"))
SCPI_SERVice_CHANnel_TRACe;
    // [ default ] interface ISCPI_SERVice_CHANnel_TRACe

struct __declspec(uuid("e5833646-2ee5-4baf-bb93-a9d8f030c5ea"))
ISCPI_SERVice_PORT : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCOUNt))
    long COUNt;

    //
    // Wrapper methods for error-handling
    //

    long GetCOUNt ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_COUNt (
        /*[out,retval]*/ long * Value ) = 0;
};

struct __declspec(uuid("23379690-9bcc-4a7d-9599-750ce4529f60"))
SCPI_SERVice_PORT;
    // [ default ] interface ISCPI_SERVice_PORT

struct __declspec(uuid("82130ad8-ea24-4f77-91e7-b583d6e618b2"))
SCPI_SERVice_SWEep;
    // [ default ] interface ISCPI_SERVice_SWEep

struct __declspec(uuid("4300d173-b0f1-49c4-b7a8-2aafbb3cc9d4"))
ISCPI_SERVice_SWEep_FREQuency : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetMAXimum))
    double MAXimum;
    __declspec(property(get=GetMINimum))
    double MINimum;

    //
    // Wrapper methods for error-handling
    //

    double GetMAXimum ( );
    double GetMINimum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_MAXimum (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall get_MINimum (
        /*[out,retval]*/ double * Value ) = 0;
};

struct __declspec(uuid("d0d74ed1-84ad-4936-9afb-2ccd564df614"))
ISCPI_SERVice_SWEep : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFREQuency))
    ISCPI_SERVice_SWEep_FREQuencyPtr FREQuency;
    __declspec(property(get=GetPOINts))
    long POINts;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_SERVice_SWEep_FREQuencyPtr GetFREQuency ( );
    long GetPOINts ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_FREQuency (
        /*[out,retval]*/ struct ISCPI_SERVice_SWEep_FREQuency * * Value ) = 0;
      virtual HRESULT __stdcall get_POINts (
        /*[out,retval]*/ long * Value ) = 0;
};

struct __declspec(uuid("a185d6ba-43ed-4b76-8ebf-b902914778eb"))
ISCPI_SERVice : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCHANnel))
    ISCPI_SERVice_CHANnelPtr CHANnel[];
    __declspec(property(get=GetPORT))
    ISCPI_SERVice_PORTPtr PORT;
    __declspec(property(get=GetSWEep))
    ISCPI_SERVice_SWEepPtr SWEep;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_SERVice_PORTPtr GetPORT ( );
    ISCPI_SERVice_SWEepPtr GetSWEep ( );
    ISCPI_SERVice_CHANnelPtr GetCHANnel (
        long Ch );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PORT (
        /*[out,retval]*/ struct ISCPI_SERVice_PORT * * Value ) = 0;
      virtual HRESULT __stdcall get_SWEep (
        /*[out,retval]*/ struct ISCPI_SERVice_SWEep * * Value ) = 0;
      virtual HRESULT __stdcall get_CHANnel (
        /*[in]*/ long Ch,
        /*[out,retval]*/ struct ISCPI_SERVice_CHANnel * * Value ) = 0;
};

struct __declspec(uuid("13a63551-6e93-4114-b7be-0f2af3a2df3f"))
SCPI_SERVice_SWEep_FREQuency;
    // [ default ] interface ISCPI_SERVice_SWEep_FREQuency

struct __declspec(uuid("ad50e8a7-bcea-4da3-bd36-49da6a6ece14"))
ISCPI_SENSe_SWEep_POINt : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetTIME,put=PutTIME))
    double TIME;

    //
    // Wrapper methods for error-handling
    //

    double GetTIME ( );
    void PutTIME (
        double Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TIME (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_TIME (
        /*[in]*/ double Value ) = 0;
};

struct __declspec(uuid("a54343b0-6b73-4cb3-b90d-606a03a70c90"))
SCPI_SENSe_SWEep_POINt;
    // [ default ] interface ISCPI_SENSe_SWEep_POINt

struct __declspec(uuid("c40e8d17-145b-4054-94a2-fe06dcaed1ad"))
SCPI_SOURce_POWer_PORT;
    // [ default ] interface ISCPI_SOURce_POWer_PORT

struct __declspec(uuid("2eb02fe4-2e3c-42b4-99f5-7ad4a3ed9e24"))
SCPI_SOURce_POWer_PORT_CORRection;
    // [ default ] interface ISCPI_SOURce_POWer_PORT_CORRection

struct __declspec(uuid("98c6baf6-cbd1-4ffb-b363-b95e7909a635"))
ISCPI_SOURce_POWer_PORT_CORRection_COLLect : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT ACQuire ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_ACQuire ( ) = 0;
};

struct __declspec(uuid("a40eaec0-34b3-4660-892f-cb1376af32c3"))
ISCPI_SOURce_POWer_PORT_CORRection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;
    __declspec(property(get=GetCOLLect))
    ISCPI_SOURce_POWer_PORT_CORRection_COLLectPtr COLLect;
    __declspec(property(get=GetDATA,put=PutDATA))
    _variant_t DATA;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );
    ISCPI_SOURce_POWer_PORT_CORRection_COLLectPtr GetCOLLect ( );
    _variant_t GetDATA ( );
    void PutDATA (
        const _variant_t & Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_COLLect (
        /*[out,retval]*/ struct ISCPI_SOURce_POWer_PORT_CORRection_COLLect * * Value ) = 0;
      virtual HRESULT __stdcall get_DATA (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_DATA (
        /*[in]*/ VARIANT Value ) = 0;
};

struct __declspec(uuid("ddb9b974-715d-4904-ad87-b383703e232f"))
ISCPI_SOURce_POWer_PORT : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCORRection))
    ISCPI_SOURce_POWer_PORT_CORRectionPtr CORRection;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_SOURce_POWer_PORT_CORRectionPtr GetCORRection ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CORRection (
        /*[out,retval]*/ struct ISCPI_SOURce_POWer_PORT_CORRection * * Value ) = 0;
};

struct __declspec(uuid("e21ccd54-bbf8-474d-a189-900c036338c0"))
ISCPI_SOURce_POWer : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCENTer,put=PutCENTer))
    double CENTer;
    __declspec(property(get=GetLEVel))
    ISCPI_SOURce_POWer_LEVelPtr LEVel;
    __declspec(property(get=GetSPAN,put=PutSPAN))
    double SPAN;
    __declspec(property(get=GetPORT))
    ISCPI_SOURce_POWer_PORTPtr PORT[];
    __declspec(property(get=GetSTARt,put=PutSTARt))
    double STARt;
    __declspec(property(get=GetSTOP,put=PutSTOP))
    double STOP;

    //
    // Wrapper methods for error-handling
    //

    double GetCENTer ( );
    void PutCENTer (
        double Value );
    ISCPI_SOURce_POWer_LEVelPtr GetLEVel ( );
    double GetSPAN ( );
    void PutSPAN (
        double Value );
    double GetSTARt ( );
    void PutSTARt (
        double Value );
    double GetSTOP ( );
    void PutSTOP (
        double Value );
    ISCPI_SOURce_POWer_PORTPtr GetPORT (
        long Pt );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CENTer (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_CENTer (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_LEVel (
        /*[out,retval]*/ struct ISCPI_SOURce_POWer_LEVel * * Value ) = 0;
      virtual HRESULT __stdcall get_SPAN (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_SPAN (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_STARt (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_STARt (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_STOP (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_STOP (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_PORT (
        /*[in]*/ long Pt,
        /*[out,retval]*/ struct ISCPI_SOURce_POWer_PORT * * Value ) = 0;
};

struct __declspec(uuid("2694e92a-194b-4853-afc9-27b8b897b30d"))
SCPI_SOURce_POWer_PORT_CORRection_COLLect;
    // [ default ] interface ISCPI_SOURce_POWer_PORT_CORRection_COLLect

struct __declspec(uuid("50f1f035-b6fb-43a0-844a-d4e631905cda"))
ISCPI_SYSTem_CORRection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("2d68ea1a-4634-4350-83b2-cc0a34870d79"))
SCPI_SYSTem_CORRection;
    // [ default ] interface ISCPI_SYSTem_CORRection

struct __declspec(uuid("9c871f3e-002b-4fed-be8f-274109af1649"))
SCPI_CALCulate_SELected_MSTatistics_DOMain;
    // [ default ] interface ISCPI_CALCulate_SELected_MSTatistics_DOMain

struct __declspec(uuid("38196891-25c7-4a82-8c03-3b31a7014d26"))
ISCPI_CALCulate_SELected_MSTatistics_DOMain_MARKer : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSTARt,put=PutSTARt))
    long STARt;
    __declspec(property(get=GetSTOP,put=PutSTOP))
    long STOP;

    //
    // Wrapper methods for error-handling
    //

    long GetSTARt ( );
    void PutSTARt (
        long Value );
    long GetSTOP ( );
    void PutSTOP (
        long Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_STARt (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_STARt (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_STOP (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_STOP (
        /*[in]*/ long Value ) = 0;
};

struct __declspec(uuid("19468960-f3ff-4db0-b68f-24a581e56173"))
ISCPI_CALCulate_SELected_MSTatistics_DOMain : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetMARKer))
    ISCPI_CALCulate_SELected_MSTatistics_DOMain_MARKerPtr MARKer;
    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_CALCulate_SELected_MSTatistics_DOMain_MARKerPtr GetMARKer ( );
    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_MARKer (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_MSTatistics_DOMain_MARKer * * Value ) = 0;
      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("005f282a-ada0-42bc-8f53-00c47327b9ae"))
ISCPI_CALCulate_SELected_MSTatistics : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDATA))
    _variant_t DATA;
    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;
    __declspec(property(get=GetDOMain))
    ISCPI_CALCulate_SELected_MSTatistics_DOMainPtr DOMain;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetDATA ( );
    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );
    ISCPI_CALCulate_SELected_MSTatistics_DOMainPtr GetDOMain ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DATA (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_DOMain (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_MSTatistics_DOMain * * Value ) = 0;
};

struct __declspec(uuid("c28657c5-cddb-4239-9cbd-1999b8e1e83f"))
SCPI_CALCulate_SELected_MSTatistics_DOMain_MARKer;
    // [ default ] interface ISCPI_CALCulate_SELected_MSTatistics_DOMain_MARKer

struct __declspec(uuid("450b5ae8-911a-4723-a576-3ce43e015aae"))
ISCPI_SYSTem_TEMPerature : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSENSor))
    double SENSor[];

    //
    // Wrapper methods for error-handling
    //

    double GetSENSor (
        long Idx );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SENSor (
        /*[in]*/ long Idx,
        /*[out,retval]*/ double * Value ) = 0;
};

struct __declspec(uuid("8854034f-06d7-437c-8251-7ff2922c63fa"))
ISCPI_SYSTem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBEEPer))
    ISCPI_SYSTem_BEEPerPtr BEEPer;
    __declspec(property(get=GetCORRection))
    ISCPI_SYSTem_CORRectionPtr CORRection;
    __declspec(property(get=GetDATE,put=PutDATE))
    _variant_t DATE;
    __declspec(property(get=GetTIME,put=PutTIME))
    _variant_t TIME;
    __declspec(property(get=GetTEMPerature))
    ISCPI_SYSTem_TEMPeraturePtr TEMPerature;

    //
    // Wrapper methods for error-handling
    //

    HRESULT PRESet ( );
    HRESULT LOCal ( );
    HRESULT REMote ( );
    HRESULT RWLock ( );
    ISCPI_SYSTem_BEEPerPtr GetBEEPer ( );
    ISCPI_SYSTem_CORRectionPtr GetCORRection ( );
    _variant_t GetDATE ( );
    void PutDATE (
        const _variant_t & Value );
    _variant_t GetTIME ( );
    void PutTIME (
        const _variant_t & Value );
    HRESULT HIDE ( );
    HRESULT SHOW ( );
    HRESULT TERMinate ( );
    ISCPI_SYSTem_TEMPeraturePtr GetTEMPerature ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_PRESet ( ) = 0;
      virtual HRESULT __stdcall raw_LOCal ( ) = 0;
      virtual HRESULT __stdcall raw_REMote ( ) = 0;
      virtual HRESULT __stdcall raw_RWLock ( ) = 0;
      virtual HRESULT __stdcall get_BEEPer (
        /*[out,retval]*/ struct ISCPI_SYSTem_BEEPer * * Value ) = 0;
      virtual HRESULT __stdcall get_CORRection (
        /*[out,retval]*/ struct ISCPI_SYSTem_CORRection * * Value ) = 0;
      virtual HRESULT __stdcall get_DATE (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_DATE (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_TIME (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_TIME (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall raw_HIDE ( ) = 0;
      virtual HRESULT __stdcall raw_SHOW ( ) = 0;
      virtual HRESULT __stdcall raw_TERMinate ( ) = 0;
      virtual HRESULT __stdcall get_TEMPerature (
        /*[out,retval]*/ struct ISCPI_SYSTem_TEMPerature * * Value ) = 0;
};

struct __declspec(uuid("3af2e009-7bd5-4167-88cd-eabd01f19177"))
SCPI_SYSTem_TEMPerature;
    // [ default ] interface ISCPI_SYSTem_TEMPerature

struct __declspec(uuid("af1a9c36-fb9b-4005-89bd-ee4d25c79742"))
SCPI_CALCulate_TRACe;
    // [ default ] interface ISCPI_CALCulate_TRACe

struct __declspec(uuid("dda7fbab-76cb-4f01-a127-513dc721320c"))
ISCPI_CALCulate_TRACe_DATA : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFDATa,put=PutFDATa))
    _variant_t FDATa;
    __declspec(property(get=GetFMEMory,put=PutFMEMory))
    _variant_t FMEMory;
    __declspec(property(get=GetSDATa,put=PutSDATa))
    _variant_t SDATa;
    __declspec(property(get=GetSMEMory,put=PutSMEMory))
    _variant_t SMEMory;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetFDATa ( );
    void PutFDATa (
        const _variant_t & Value );
    _variant_t GetFMEMory ( );
    void PutFMEMory (
        const _variant_t & Value );
    _variant_t GetSDATa ( );
    void PutSDATa (
        const _variant_t & Value );
    _variant_t GetSMEMory ( );
    void PutSMEMory (
        const _variant_t & Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_FDATa (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_FDATa (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_FMEMory (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_FMEMory (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_SDATa (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_SDATa (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_SMEMory (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_SMEMory (
        /*[in]*/ VARIANT Value ) = 0;
};

struct __declspec(uuid("cc6c34e9-e376-4bad-a925-fe25997b5b95"))
ISCPI_CALCulate_TRACe : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDATA))
    ISCPI_CALCulate_TRACe_DATAPtr DATA;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_CALCulate_TRACe_DATAPtr GetDATA ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DATA (
        /*[out,retval]*/ struct ISCPI_CALCulate_TRACe_DATA * * Value ) = 0;
};

struct __declspec(uuid("3b3cd5cc-c814-4597-9d36-c75ed35225e5"))
SCPI_CALCulate_TRACe_DATA;
    // [ default ] interface ISCPI_CALCulate_TRACe_DATA

struct __declspec(uuid("f638cb77-ab3c-4c77-b9c3-ea07aadeb6b8"))
SCPI_SYSTem_COMMunicate;
    // [ default ] interface ISCPI_SYSTem_COMMunicate

struct __declspec(uuid("8c3a4a6c-e179-4d6f-985e-3127c8985e0f"))
SCPI_SYSTem_COMMunicate_ECAL;
    // [ default ] interface ISCPI_SYSTem_COMMunicate_ECAL

struct __declspec(uuid("7f75d558-deb8-4dea-b41a-6d5f2bf9028d"))
ISCPI_SYSTem_COMMunicate : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetECAL))
    ISCPI_SYSTem_COMMunicate_ECALPtr ECAL;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_SYSTem_COMMunicate_ECALPtr GetECAL ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ECAL (
        /*[out,retval]*/ struct ISCPI_SYSTem_COMMunicate_ECAL * * Value ) = 0;
};

struct __declspec(uuid("830274af-f45d-41ad-b11e-caece98b4612"))
ISCPI_SYSTem_COMMunicate_ECAL_TEMPerature : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSENSor))
    double SENSor;

    //
    // Wrapper methods for error-handling
    //

    double GetSENSor ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SENSor (
        /*[out,retval]*/ double * Value ) = 0;
};

struct __declspec(uuid("1faddfb5-fc4b-4608-9d1e-135304af2fe9"))
SCPI_SYSTem_COMMunicate_ECAL_TEMPerature;
    // [ default ] interface ISCPI_SYSTem_COMMunicate_ECAL_TEMPerature

struct __declspec(uuid("e5af5f08-54c3-4523-a06a-2611b0ac0e4e"))
ISCPI_SYSTem_COMMunicate_ECAL : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetTEMPerature))
    ISCPI_SYSTem_COMMunicate_ECAL_TEMPeraturePtr TEMPerature;
    __declspec(property(get=GetIMPedance,put=PutIMPedance))
    _bstr_t IMPedance[];

    //
    // Wrapper methods for error-handling
    //

    ISCPI_SYSTem_COMMunicate_ECAL_TEMPeraturePtr GetTEMPerature ( );
    _bstr_t GetIMPedance (
        long ePt );
    void PutIMPedance (
        long ePt,
        _bstr_t Value );
    HRESULT THRU (
        long ePt1,
        long ePt2 );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TEMPerature (
        /*[out,retval]*/ struct ISCPI_SYSTem_COMMunicate_ECAL_TEMPerature * * Value ) = 0;
      virtual HRESULT __stdcall get_IMPedance (
        /*[in]*/ long ePt,
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_IMPedance (
        /*[in]*/ long ePt,
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall raw_THRU (
        /*[in]*/ long ePt1,
        /*[in]*/ long ePt2 ) = 0;
};

struct __declspec(uuid("fb3646d1-e82b-4c61-b15d-2c8fc36a13f4"))
SCPI_SENSe_CORRection_COLLect_ECAL;
    // [ default ] interface ISCPI_SENSe_CORRection_COLLect_ECAL

struct __declspec(uuid("0ae18f95-ed2b-4158-8668-7a39fefd037e"))
ISCPI_SENSe_CORRection_COLLect_ECAL_ORIentation : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );
    HRESULT EXECute (
        const _variant_t & Param1 );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall raw_EXECute (
        /*[in]*/ VARIANT Param1 ) = 0;
};

struct __declspec(uuid("aa7d4e99-b2d9-4543-acd2-7906d1a66666"))
SCPI_SENSe_CORRection_COLLect_ECAL_ORIentation;
    // [ default ] interface ISCPI_SENSe_CORRection_COLLect_ECAL_ORIentation

struct __declspec(uuid("43cec0be-5c04-47fc-8a10-9f01bedefae3"))
ISCPI_SENSe_CORRection_COLLect_ECAL_UTHRu : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("168f8a79-80e4-49d1-8758-0f97a1f5774c"))
SCPI_SENSe_CORRection_COLLect_ECAL_UTHRu;
    // [ default ] interface ISCPI_SENSe_CORRection_COLLect_ECAL_UTHRu

struct __declspec(uuid("8b4b6f0c-92cd-4974-917f-be935624e13d"))
ISCPI_CALCulate_SELected_MAXhold : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("bdc5afc4-54e8-477d-a9b1-35b610471d93"))
SCPI_CALCulate_SELected_MAXhold;
    // [ default ] interface ISCPI_CALCulate_SELected_MAXhold

struct __declspec(uuid("7cf7c89a-f35d-40ca-8259-2e5754919e99"))
TR5048;
    // [ default ] interface ITR5048

struct __declspec(uuid("c6e7c644-5466-486f-894d-e7c9cf5d3775"))
TR7530;
    // [ default ] interface ITR7530

struct __declspec(uuid("95487321-7a76-4d54-aa09-2e1d69030d67"))
SCPI_SENSe_CORRection_TRANsform;
    // [ default ] interface ISCPI_SENSe_CORRection_TRANsform

struct __declspec(uuid("a02dd618-15e4-40ab-9944-843424754196"))
ISCPI_SENSe_CORRection_TRANsform_TIME : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;
    __declspec(property(get=GetRVELocity,put=PutRVELocity))
    double RVELocity;
    __declspec(property(get=GetLOSS,put=PutLOSS))
    double LOSS;
    __declspec(property(get=GetFREQuency,put=PutFREQuency))
    double FREQuency;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );
    double GetRVELocity ( );
    void PutRVELocity (
        double Value );
    double GetLOSS ( );
    void PutLOSS (
        double Value );
    double GetFREQuency ( );
    void PutFREQuency (
        double Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_RVELocity (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_RVELocity (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_LOSS (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_LOSS (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_FREQuency (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_FREQuency (
        /*[in]*/ double Value ) = 0;
};

struct __declspec(uuid("daa00d04-bd3b-4b5a-8c15-ab9c541853f4"))
ISCPI_SENSe_CORRection_TRANsform : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetTIME))
    ISCPI_SENSe_CORRection_TRANsform_TIMEPtr TIME;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_SENSe_CORRection_TRANsform_TIMEPtr GetTIME ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TIME (
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection_TRANsform_TIME * * Value ) = 0;
};

struct __declspec(uuid("24d9b7fb-ce9b-4859-95a2-b552c4dc5cc9"))
SCPI_SENSe_CORRection_TRANsform_TIME;
    // [ default ] interface ISCPI_SENSe_CORRection_TRANsform_TIME

struct __declspec(uuid("7a5c0685-8f67-4ff9-9673-7e059609e793"))
ISCPI_CALCulate_SELected_TRANsform_TIME_REFLection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetTYPE,put=PutTYPE))
    _bstr_t TYPE;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetTYPE ( );
    void PutTYPE (
        _bstr_t Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TYPE (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_TYPE (
        /*[in]*/ BSTR Value ) = 0;
};

struct __declspec(uuid("32bc55c8-48f0-40b9-b47b-256963447568"))
ISCPI_CALCulate_SELected_TRANsform_TIME : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCENTer,put=PutCENTer))
    double CENTer;
    __declspec(property(get=GetIMPulse))
    ISCPI_CALCulate_SELected_TRANsform_TIME_IMPulsePtr IMPulse;
    __declspec(property(get=GetKBESsel,put=PutKBESsel))
    double KBESsel;
    __declspec(property(get=GetSPAN,put=PutSPAN))
    double SPAN;
    __declspec(property(get=GetSTARt,put=PutSTARt))
    double STARt;
    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;
    __declspec(property(get=GetSTEP))
    ISCPI_CALCulate_SELected_TRANsform_TIME_STEPPtr STEP;
    __declspec(property(get=GetSTIMulus,put=PutSTIMulus))
    _bstr_t STIMulus;
    __declspec(property(get=GetSTOP,put=PutSTOP))
    double STOP;
    __declspec(property(get=GetTYPE,put=PutTYPE))
    _bstr_t TYPE;
    __declspec(property(get=GetUNIT,put=PutUNIT))
    _bstr_t UNIT;
    __declspec(property(get=GetREFLection))
    ISCPI_CALCulate_SELected_TRANsform_TIME_REFLectionPtr REFLection;

    //
    // Wrapper methods for error-handling
    //

    double GetCENTer ( );
    void PutCENTer (
        double Value );
    ISCPI_CALCulate_SELected_TRANsform_TIME_IMPulsePtr GetIMPulse ( );
    double GetKBESsel ( );
    void PutKBESsel (
        double Value );
    HRESULT LPFRequency ( );
    double GetSPAN ( );
    void PutSPAN (
        double Value );
    double GetSTARt ( );
    void PutSTARt (
        double Value );
    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );
    ISCPI_CALCulate_SELected_TRANsform_TIME_STEPPtr GetSTEP ( );
    _bstr_t GetSTIMulus ( );
    void PutSTIMulus (
        _bstr_t Value );
    double GetSTOP ( );
    void PutSTOP (
        double Value );
    _bstr_t GetTYPE ( );
    void PutTYPE (
        _bstr_t Value );
    _bstr_t GetUNIT ( );
    void PutUNIT (
        _bstr_t Value );
    ISCPI_CALCulate_SELected_TRANsform_TIME_REFLectionPtr GetREFLection ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CENTer (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_CENTer (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_IMPulse (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_TRANsform_TIME_IMPulse * * Value ) = 0;
      virtual HRESULT __stdcall get_KBESsel (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_KBESsel (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall raw_LPFRequency ( ) = 0;
      virtual HRESULT __stdcall get_SPAN (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_SPAN (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_STARt (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_STARt (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_STEP (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_TRANsform_TIME_STEP * * Value ) = 0;
      virtual HRESULT __stdcall get_STIMulus (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_STIMulus (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_STOP (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_STOP (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_TYPE (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_TYPE (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_UNIT (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_UNIT (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_REFLection (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_TRANsform_TIME_REFLection * * Value ) = 0;
};

struct __declspec(uuid("c9416682-4a2f-443c-8064-ba815297a910"))
ISCPI_CALCulate_SELected_TRANsform : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetTIME))
    ISCPI_CALCulate_SELected_TRANsform_TIMEPtr TIME;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_CALCulate_SELected_TRANsform_TIMEPtr GetTIME ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TIME (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_TRANsform_TIME * * Value ) = 0;
};

struct __declspec(uuid("dc990e36-3424-4125-a80e-b59cab48e71a"))
ISCPI_CALCulate_SELected : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFORMat,put=PutFORMat))
    _bstr_t FORMat;
    __declspec(property(get=GetDATA))
    ISCPI_CALCulate_SELected_DATAPtr DATA;
    __declspec(property(get=GetLIMit))
    ISCPI_CALCulate_SELected_LIMitPtr LIMit;
    __declspec(property(get=GetMARKer))
    ISCPI_CALCulate_SELected_MARKerPtr MARKer[];
    __declspec(property(get=GetMATH))
    ISCPI_CALCulate_SELected_MATHPtr MATH;
    __declspec(property(get=GetMSTatistics))
    ISCPI_CALCulate_SELected_MSTatisticsPtr MSTatistics;
    __declspec(property(get=GetSMOothing))
    ISCPI_CALCulate_SELected_SMOothingPtr SMOothing;
    __declspec(property(get=GetRLIMit))
    ISCPI_CALCulate_SELected_RLIMitPtr RLIMit;
    __declspec(property(get=GetCORRection))
    ISCPI_CALCulate_SELected_CORRectionPtr CORRection;
    __declspec(property(get=GetCONVersion))
    ISCPI_CALCulate_SELected_CONVersionPtr CONVersion;
    __declspec(property(get=GetFILTer))
    ISCPI_CALCulate_SELected_FILTerPtr FILTer;
    __declspec(property(get=GetFUNCtion))
    ISCPI_CALCulate_SELected_FUNCtionPtr FUNCtion;
    __declspec(property(get=GetTRANsform))
    ISCPI_CALCulate_SELected_TRANsformPtr TRANsform;
    __declspec(property(get=GetMAXHold))
    ISCPI_CALCulate_SELected_MAXholdPtr MAXHold;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetFORMat ( );
    void PutFORMat (
        _bstr_t Value );
    ISCPI_CALCulate_SELected_DATAPtr GetDATA ( );
    ISCPI_CALCulate_SELected_LIMitPtr GetLIMit ( );
    ISCPI_CALCulate_SELected_MARKerPtr GetMARKer (
        long Mk );
    ISCPI_CALCulate_SELected_MATHPtr GetMATH ( );
    ISCPI_CALCulate_SELected_MSTatisticsPtr GetMSTatistics ( );
    ISCPI_CALCulate_SELected_SMOothingPtr GetSMOothing ( );
    ISCPI_CALCulate_SELected_RLIMitPtr GetRLIMit ( );
    ISCPI_CALCulate_SELected_CORRectionPtr GetCORRection ( );
    ISCPI_CALCulate_SELected_FILTerPtr GetFILTer ( );
    ISCPI_CALCulate_SELected_FUNCtionPtr GetFUNCtion ( );
    ISCPI_CALCulate_SELected_TRANsformPtr GetTRANsform ( );
    ISCPI_CALCulate_SELected_CONVersionPtr GetCONVersion ( );
    ISCPI_CALCulate_SELected_MAXholdPtr GetMAXHold ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_FORMat (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_FORMat (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_DATA (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_DATA * * Value ) = 0;
      virtual HRESULT __stdcall get_LIMit (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_LIMit * * Value ) = 0;
      virtual HRESULT __stdcall get_MARKer (
        /*[in]*/ long Mk,
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_MARKer * * Value ) = 0;
      virtual HRESULT __stdcall get_MATH (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_MATH * * Value ) = 0;
      virtual HRESULT __stdcall get_MSTatistics (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_MSTatistics * * Value ) = 0;
      virtual HRESULT __stdcall get_SMOothing (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_SMOothing * * Value ) = 0;
      virtual HRESULT __stdcall get_RLIMit (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_RLIMit * * Value ) = 0;
      virtual HRESULT __stdcall get_CORRection (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_CORRection * * Value ) = 0;
      virtual HRESULT __stdcall get_FILTer (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_FILTer * * Value ) = 0;
      virtual HRESULT __stdcall get_FUNCtion (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_FUNCtion * * Value ) = 0;
      virtual HRESULT __stdcall get_TRANsform (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_TRANsform * * Value ) = 0;
      virtual HRESULT __stdcall get_CONVersion (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_CONVersion * * Value ) = 0;
      virtual HRESULT __stdcall get_MAXHold (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected_MAXhold * * Value ) = 0;
};

struct __declspec(uuid("c569beed-a31f-43b4-a935-f1af67c227cc"))
ISCPI_CALCulate : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetPARameter))
    ISCPI_CALCulate_PARameterPtr PARameter[];
    __declspec(property(get=GetSELected))
    ISCPI_CALCulate_SELectedPtr SELected;
    __declspec(property(get=GetFSIMulator))
    ISCPI_CALCulate_FSIMulatorPtr FSIMulator;
    __declspec(property(get=GetTRACe))
    ISCPI_CALCulate_TRACePtr TRACe[];

    //
    // Wrapper methods for error-handling
    //

    ISCPI_CALCulate_PARameterPtr GetPARameter (
        long Tr );
    ISCPI_CALCulate_SELectedPtr GetSELected ( );
    ISCPI_CALCulate_FSIMulatorPtr GetFSIMulator ( );
    ISCPI_CALCulate_TRACePtr GetTRACe (
        long Tr );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PARameter (
        /*[in]*/ long Tr,
        /*[out,retval]*/ struct ISCPI_CALCulate_PARameter * * Value ) = 0;
      virtual HRESULT __stdcall get_SELected (
        /*[out,retval]*/ struct ISCPI_CALCulate_SELected * * Value ) = 0;
      virtual HRESULT __stdcall get_FSIMulator (
        /*[out,retval]*/ struct ISCPI_CALCulate_FSIMulator * * Value ) = 0;
      virtual HRESULT __stdcall get_TRACe (
        /*[in]*/ long Tr,
        /*[out,retval]*/ struct ISCPI_CALCulate_TRACe * * Value ) = 0;
};

struct __declspec(uuid("9e143472-de9a-4c38-82a3-2ade7d667846"))
SCPI_CALCulate_SELected_TRANsform_TIME_REFLection;
    // [ default ] interface ISCPI_CALCulate_SELected_TRANsform_TIME_REFLection

struct __declspec(uuid("6be6ca1b-60e3-4309-99b6-a43fe3d03970"))
ISCPI_SENSe_SWEep_REVerse : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("8b15f31a-99a9-44f4-be5f-00b3131c7ee6"))
ISCPI_SENSe_SWEep : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetPOINts,put=PutPOINts))
    long POINts;
    __declspec(property(get=GetTYPE,put=PutTYPE))
    _bstr_t TYPE;
    __declspec(property(get=GetPOINt))
    ISCPI_SENSe_SWEep_POINtPtr POINt;
    __declspec(property(get=GetREVerse))
    ISCPI_SENSe_SWEep_REVersePtr REVerse;

    //
    // Wrapper methods for error-handling
    //

    long GetPOINts ( );
    void PutPOINts (
        long Value );
    _bstr_t GetTYPE ( );
    void PutTYPE (
        _bstr_t Value );
    ISCPI_SENSe_SWEep_POINtPtr GetPOINt ( );
    ISCPI_SENSe_SWEep_REVersePtr GetREVerse ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_POINts (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_POINts (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_TYPE (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_TYPE (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_POINt (
        /*[out,retval]*/ struct ISCPI_SENSe_SWEep_POINt * * Value ) = 0;
      virtual HRESULT __stdcall get_REVerse (
        /*[out,retval]*/ struct ISCPI_SENSe_SWEep_REVerse * * Value ) = 0;
};

struct __declspec(uuid("edefc34e-83d4-4d37-bb92-bb959bfeaa78"))
SCPI_SENSe_SWEep_REVerse;
    // [ default ] interface ISCPI_SENSe_SWEep_REVerse

struct __declspec(uuid("4170540d-4958-49c1-8663-21a035bd2e76"))
SCPI_DISPlay_ANNotation;
    // [ default ] interface ISCPI_DISPlay_ANNotation

struct __declspec(uuid("e11fa372-0514-4836-a7d5-56ec892ce97d"))
ISCPI_DISPlay_ANNotation_FREQuency : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("e45ef321-c6a6-4eca-8e51-ff0bdb392eef"))
ISCPI_DISPlay_ANNotation : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFREQuency))
    ISCPI_DISPlay_ANNotation_FREQuencyPtr FREQuency;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_DISPlay_ANNotation_FREQuencyPtr GetFREQuency ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_FREQuency (
        /*[out,retval]*/ struct ISCPI_DISPlay_ANNotation_FREQuency * * Value ) = 0;
};

struct __declspec(uuid("75ad1000-3c70-4341-8d1a-4b8fa394b575"))
ISCPI_DISPlay : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSPLit,put=PutSPLit))
    long SPLit;
    __declspec(property(get=GetWINDow))
    ISCPI_DISPlay_WINDowPtr WINDow[];
    __declspec(property(get=GetENABle,put=PutENABle))
    VARIANT_BOOL ENABle;
    __declspec(property(get=GetUPDate_))
    ISCPI_DISPlay_UPDatePtr UPDate_;
    __declspec(property(get=GetFSIGn,put=PutFSIGn))
    VARIANT_BOOL FSIGn;
    __declspec(property(get=GetIMAGe,put=PutIMAGe))
    _bstr_t IMAGe;
    __declspec(property(get=GetCOLor))
    ISCPI_DISPlay_COLorPtr COLor;
    __declspec(property(get=GetANNotation))
    ISCPI_DISPlay_ANNotationPtr ANNotation;
    __declspec(property(get=GetMAXimize,put=PutMAXimize))
    VARIANT_BOOL MAXimize;

    //
    // Wrapper methods for error-handling
    //

    long GetSPLit ( );
    void PutSPLit (
        long Value );
    ISCPI_DISPlay_WINDowPtr GetWINDow (
        long Ch );
    VARIANT_BOOL GetENABle ( );
    void PutENABle (
        VARIANT_BOOL Value );
    ISCPI_DISPlay_UPDatePtr GetUPDate_ ( );
    VARIANT_BOOL GetFSIGn ( );
    void PutFSIGn (
        VARIANT_BOOL Value );
    ISCPI_DISPlay_COLorPtr GetCOLor ( );
    _bstr_t GetIMAGe ( );
    void PutIMAGe (
        _bstr_t Value );
    ISCPI_DISPlay_ANNotationPtr GetANNotation ( );
    VARIANT_BOOL GetMAXimize ( );
    void PutMAXimize (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SPLit (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_SPLit (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_WINDow (
        /*[in]*/ long Ch,
        /*[out,retval]*/ struct ISCPI_DISPlay_WINDow * * Value ) = 0;
      virtual HRESULT __stdcall get_ENABle (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_ENABle (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_UPDate_ (
        /*[out,retval]*/ struct ISCPI_DISPlay_UPDate * * Value ) = 0;
      virtual HRESULT __stdcall get_FSIGn (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_FSIGn (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_COLor (
        /*[out,retval]*/ struct ISCPI_DISPlay_COLor * * Value ) = 0;
      virtual HRESULT __stdcall get_IMAGe (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_IMAGe (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_ANNotation (
        /*[out,retval]*/ struct ISCPI_DISPlay_ANNotation * * Value ) = 0;
      virtual HRESULT __stdcall get_MAXimize (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_MAXimize (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("170b6ed1-8a37-4992-9533-62f1dcf6ff1d"))
SCPI_DISPlay_ANNotation_FREQuency;
    // [ default ] interface ISCPI_DISPlay_ANNotation_FREQuency

struct __declspec(uuid("1181dffe-44a2-4c74-8e02-cd8f823d3734"))
ISCPI_TRIGger_SEQuence_EXTernal : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSLOPe,put=PutSLOPe))
    _bstr_t SLOPe;
    __declspec(property(get=GetPOSition,put=PutPOSition))
    _bstr_t POSition;
    __declspec(property(get=GetDelay,put=PutDelay))
    double Delay;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetSLOPe ( );
    void PutSLOPe (
        _bstr_t Value );
    _bstr_t GetPOSition ( );
    void PutPOSition (
        _bstr_t Value );
    double GetDelay ( );
    void PutDelay (
        double Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SLOPe (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_SLOPe (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_POSition (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_POSition (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_Delay (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_Delay (
        /*[in]*/ double Value ) = 0;
};

struct __declspec(uuid("606e55f4-69cb-4b15-9029-98cee282b688"))
ISCPI_TRIGger_SEQuence : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSOURce,put=PutSOURce))
    _bstr_t SOURce;
    __declspec(property(get=GetSTATe))
    _bstr_t STATe;
    __declspec(property(get=GetPOINt,put=PutPOINt))
    VARIANT_BOOL POINt;
    __declspec(property(get=GetEXTernal))
    ISCPI_TRIGger_SEQuence_EXTernalPtr EXTernal;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetSOURce ( );
    void PutSOURce (
        _bstr_t Value );
    HRESULT IMMediate ( );
    HRESULT SINGle ( );
    _bstr_t GetSTATe ( );
    VARIANT_BOOL GetPOINt ( );
    void PutPOINt (
        VARIANT_BOOL Value );
    ISCPI_TRIGger_SEQuence_EXTernalPtr GetEXTernal ( );
    HRESULT WAIT (
        _bstr_t Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SOURce (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_SOURce (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall raw_IMMediate ( ) = 0;
      virtual HRESULT __stdcall raw_SINGle ( ) = 0;
      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall get_POINt (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_POINt (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_EXTernal (
        /*[out,retval]*/ struct ISCPI_TRIGger_SEQuence_EXTernal * * Value ) = 0;
      virtual HRESULT __stdcall raw_WAIT (
        /*[in]*/ BSTR Value ) = 0;
};

struct __declspec(uuid("0aebccd1-58a8-408d-b586-c17d32679ebe"))
ISCPI_TRIGger : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSEQuence))
    ISCPI_TRIGger_SEQuencePtr SEQuence;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_TRIGger_SEQuencePtr GetSEQuence ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SEQuence (
        /*[out,retval]*/ struct ISCPI_TRIGger_SEQuence * * Value ) = 0;
};

struct __declspec(uuid("8fedf72f-da28-464a-907f-3332613568e5"))
SCPI_TRIGger_SEQuence_EXTernal;
    // [ default ] interface ISCPI_TRIGger_SEQuence_EXTernal

struct __declspec(uuid("80b7593b-c620-4248-9afb-edd93925b506"))
SCPI_MMEMory_LOAD_SNP;
    // [ default ] interface ISCPI_MMEMory_LOAD_SNP

struct __declspec(uuid("26c49756-f9be-49f8-b600-ba1503ebd230"))
ISCPI_MMEMory_LOAD_SNP_TRACe : IDispatch
{
    //
    // Property data
    //

    __declspec(property(put=PutMEMory))
    _bstr_t MEMory;

    //
    // Wrapper methods for error-handling
    //

    void PutMEMory (
        _bstr_t _arg1 );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_MEMory (
        /*[in]*/ BSTR _arg1 ) = 0;
};

struct __declspec(uuid("1559e614-7c40-42f4-a640-234dd6aadbe2"))
ISCPI_MMEMory_LOAD_SNP : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetTRACe))
    ISCPI_MMEMory_LOAD_SNP_TRACePtr TRACe[];
    __declspec(property(put=PutDATA))
    _bstr_t DATA;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_MMEMory_LOAD_SNP_TRACePtr GetTRACe (
        long Tr );
    void PutDATA (
        _bstr_t _arg1 );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TRACe (
        /*[in]*/ long Tr,
        /*[out,retval]*/ struct ISCPI_MMEMory_LOAD_SNP_TRACe * * Value ) = 0;
      virtual HRESULT __stdcall put_DATA (
        /*[in]*/ BSTR _arg1 ) = 0;
};

struct __declspec(uuid("94aad00c-8e1a-4189-b4fd-2cdf27975576"))
ISCPI_MMEMory_LOAD : IDispatch
{
    //
    // Property data
    //

    __declspec(property(put=PutSTATe))
    _bstr_t STATe;
    __declspec(property(get=GetCHANnel))
    ISCPI_MMEMory_LOAD_CHANnelPtr CHANnel;
    __declspec(property(put=PutCKIT))
    _bstr_t CKIT[];
    __declspec(property(put=PutCALibration))
    _bstr_t CALibration;
    __declspec(property(put=PutLIMit))
    _bstr_t LIMit;
    __declspec(property(put=PutPLOSs))
    _bstr_t PLOSs[];
    __declspec(property(put=PutRLIMit))
    _bstr_t RLIMit;
    __declspec(property(put=PutSEGMent))
    _bstr_t SEGMent;
    __declspec(property(get=GetSNP))
    ISCPI_MMEMory_LOAD_SNPPtr SNP;

    //
    // Wrapper methods for error-handling
    //

    void PutSTATe (
        _bstr_t _arg1 );
    ISCPI_MMEMory_LOAD_CHANnelPtr GetCHANnel ( );
    void PutLIMit (
        _bstr_t _arg1 );
    void PutPLOSs (
        long Pt,
        _bstr_t _arg2 );
    void PutRLIMit (
        _bstr_t _arg1 );
    void PutSEGMent (
        _bstr_t _arg1 );
    void PutCKIT (
        long Ck,
        _bstr_t _arg2 );
    void PutCALibration (
        _bstr_t _arg1 );
    ISCPI_MMEMory_LOAD_SNPPtr GetSNP ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_CHANnel (
        /*[out,retval]*/ struct ISCPI_MMEMory_LOAD_CHANnel * * Value ) = 0;
      virtual HRESULT __stdcall put_LIMit (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall put_PLOSs (
        /*[in]*/ long Pt,
        /*[in]*/ BSTR _arg2 ) = 0;
      virtual HRESULT __stdcall put_RLIMit (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall put_SEGMent (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall put_CKIT (
        /*[in]*/ long Ck,
        /*[in]*/ BSTR _arg2 ) = 0;
      virtual HRESULT __stdcall put_CALibration (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_SNP (
        /*[out,retval]*/ struct ISCPI_MMEMory_LOAD_SNP * * Value ) = 0;
};

struct __declspec(uuid("41e3e253-5ad8-4ee7-af92-44417cffd6a0"))
ISCPI_MMEMory : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetLOAD))
    ISCPI_MMEMory_LOADPtr LOAD;
    __declspec(property(get=GetSTORe))
    ISCPI_MMEMory_STORePtr STORe;
    __declspec(property(put=PutMDIRectory))
    _bstr_t MDIRectory;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_MMEMory_LOADPtr GetLOAD ( );
    ISCPI_MMEMory_STORePtr GetSTORe ( );
    HRESULT COPY (
        _bstr_t Src,
        _bstr_t Dst );
    HRESULT DELete (
        _bstr_t File );
    void PutMDIRectory (
        _bstr_t _arg1 );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_LOAD (
        /*[out,retval]*/ struct ISCPI_MMEMory_LOAD * * Value ) = 0;
      virtual HRESULT __stdcall get_STORe (
        /*[out,retval]*/ struct ISCPI_MMEMory_STORe * * Value ) = 0;
      virtual HRESULT __stdcall raw_COPY (
        /*[in]*/ BSTR Src,
        /*[in]*/ BSTR Dst ) = 0;
      virtual HRESULT __stdcall raw_DELete (
        /*[in]*/ BSTR File ) = 0;
      virtual HRESULT __stdcall put_MDIRectory (
        /*[in]*/ BSTR _arg1 ) = 0;
};

struct __declspec(uuid("daf4ad66-c8af-449d-b03e-7bd7589adee8"))
SCPI_MMEMory_LOAD_SNP_TRACe;
    // [ default ] interface ISCPI_MMEMory_LOAD_SNP_TRACe

struct __declspec(uuid("928eb365-0c4e-4d7b-a62d-1f27d359c60d"))
SCPI_SENSe_OFFSet;
    // [ default ] interface ISCPI_SENSe_OFFSet

struct __declspec(uuid("5298036a-82c2-49ae-8cb4-ae769f53e6ff"))
SCPI_SENSe_OFFSet_PORT;
    // [ default ] interface ISCPI_SENSe_OFFSet_PORT

struct __declspec(uuid("b3ce41a7-e763-45fb-85f0-5e7f69d636b4"))
ISCPI_SENSe_OFFSet_PORT_FREQuency : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDATA))
    _variant_t DATA;
    __declspec(property(get=GetDIVisor,put=PutDIVisor))
    double DIVisor;
    __declspec(property(get=GetMULTiplier,put=PutMULTiplier))
    double MULTiplier;
    __declspec(property(get=GetOFFSet,put=PutOFFSet))
    double OFFSet;
    __declspec(property(get=GetSTARt,put=PutSTARt))
    double STARt;
    __declspec(property(get=GetSTOP,put=PutSTOP))
    double STOP;

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetDATA ( );
    double GetDIVisor ( );
    void PutDIVisor (
        double Value );
    double GetMULTiplier ( );
    void PutMULTiplier (
        double Value );
    double GetOFFSet ( );
    void PutOFFSet (
        double Value );
    double GetSTARt ( );
    void PutSTARt (
        double Value );
    double GetSTOP ( );
    void PutSTOP (
        double Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DATA (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall get_DIVisor (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_DIVisor (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_MULTiplier (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_MULTiplier (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_OFFSet (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_OFFSet (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_STARt (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_STARt (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_STOP (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_STOP (
        /*[in]*/ double Value ) = 0;
};

struct __declspec(uuid("422e0590-9568-4890-8641-2534254a22d8"))
ISCPI_SENSe_OFFSet_PORT : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFREQuency))
    ISCPI_SENSe_OFFSet_PORT_FREQuencyPtr FREQuency;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_SENSe_OFFSet_PORT_FREQuencyPtr GetFREQuency ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_FREQuency (
        /*[out,retval]*/ struct ISCPI_SENSe_OFFSet_PORT_FREQuency * * Value ) = 0;
};

struct __declspec(uuid("3372e96e-be4c-463c-aea9-26342052b8c6"))
SCPI_SENSe_OFFSet_PORT_FREQuency;
    // [ default ] interface ISCPI_SENSe_OFFSet_PORT_FREQuency

struct __declspec(uuid("198afd5d-d1ef-4f22-9a2b-b333da5eb371"))
SCPI_SENSe_OFFSet_ADJust;
    // [ default ] interface ISCPI_SENSe_OFFSet_ADJust

struct __declspec(uuid("2fbed54c-f36e-4c43-ae2b-2d627644a0ba"))
ISCPI_SENSe_OFFSet_ADJust_CONTinuous : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;
    __declspec(property(get=GetPERiod,put=PutPERiod))
    long PERiod;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );
    long GetPERiod ( );
    void PutPERiod (
        long Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_PERiod (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_PERiod (
        /*[in]*/ long Value ) = 0;
};

struct __declspec(uuid("f4103226-6371-4ab8-b0dc-4eb02921cf2c"))
ISCPI_SENSe_OFFSet_ADJust : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;
    __declspec(property(get=GetPORT,put=PutPORT))
    long PORT;
    __declspec(property(get=GetValue,put=PutValue))
    double Value;
    __declspec(property(get=GetCONTinuous))
    ISCPI_SENSe_OFFSet_ADJust_CONTinuousPtr CONTinuous;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );
    long GetPORT ( );
    void PutPORT (
        long Value );
    double GetValue ( );
    void PutValue (
        double Value );
    HRESULT EXECute ( );
    ISCPI_SENSe_OFFSet_ADJust_CONTinuousPtr GetCONTinuous ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_PORT (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_PORT (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall raw_EXECute ( ) = 0;
      virtual HRESULT __stdcall get_CONTinuous (
        /*[out,retval]*/ struct ISCPI_SENSe_OFFSet_ADJust_CONTinuous * * Value ) = 0;
};

struct __declspec(uuid("d70c9fe9-1619-4bdd-97a4-d01e6236f15f"))
ISCPI_SENSe_OFFSet : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;
    __declspec(property(get=GetPORT))
    ISCPI_SENSe_OFFSet_PORTPtr PORT[];
    __declspec(property(get=GetADJust))
    ISCPI_SENSe_OFFSet_ADJustPtr ADJust;
    __declspec(property(get=GetTYPE,put=PutTYPE))
    long TYPE;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );
    ISCPI_SENSe_OFFSet_PORTPtr GetPORT (
        long Pt );
    ISCPI_SENSe_OFFSet_ADJustPtr GetADJust ( );
    long GetTYPE ( );
    void PutTYPE (
        long Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_PORT (
        /*[in]*/ long Pt,
        /*[out,retval]*/ struct ISCPI_SENSe_OFFSet_PORT * * Value ) = 0;
      virtual HRESULT __stdcall get_ADJust (
        /*[out,retval]*/ struct ISCPI_SENSe_OFFSet_ADJust * * Value ) = 0;
      virtual HRESULT __stdcall get_TYPE (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_TYPE (
        /*[in]*/ long Value ) = 0;
};

struct __declspec(uuid("cd49e59a-7866-46c8-bf40-46d7bab6604a"))
SCPI_SENSe_OFFSet_ADJust_CONTinuous;
    // [ default ] interface ISCPI_SENSe_OFFSet_ADJust_CONTinuous

struct __declspec(uuid("10f630f3-a153-458c-84fa-016b1984d6b3"))
ISCPI_SENSe_DATA : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRAWData))
    _variant_t RAWData[];
    __declspec(property(get=GetCORData))
    _variant_t CORData[];

    //
    // Wrapper methods for error-handling
    //

    _variant_t GetRAWData (
        _bstr_t Param1 );
    _variant_t GetCORData (
        _bstr_t Param1 );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RAWData (
        /*[in]*/ BSTR Param1,
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall get_CORData (
        /*[in]*/ BSTR Param1,
        /*[out,retval]*/ VARIANT * Value ) = 0;
};

struct __declspec(uuid("0d090afe-da6b-431d-bd9a-f99c116ece57"))
SCPI_SENSe_DATA;
    // [ default ] interface ISCPI_SENSe_DATA

struct __declspec(uuid("be3d8fec-af4a-49a8-98a7-ffe980b5ca4c"))
TRVNA;
    // [ default ] interface ITRVNA

struct __declspec(uuid("8b5c6367-a445-403f-b4d2-0c2f5e080ab1"))
SCPI_SOURce_REFerence;
    // [ default ] interface ISCPI_SOURce_REFerence

struct __declspec(uuid("501e9f61-7042-422c-b3a8-b1d953bf755d"))
ISCPI_SOURce_REFerence_CORRection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("9eb0fe00-082f-4906-936f-9eb7c1e00e67"))
ISCPI_SOURce_REFerence : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFREQuency,put=PutFREQuency))
    double FREQuency;
    __declspec(property(get=GetCORRection))
    ISCPI_SOURce_REFerence_CORRectionPtr CORRection;

    //
    // Wrapper methods for error-handling
    //

    double GetFREQuency ( );
    void PutFREQuency (
        double Value );
    ISCPI_SOURce_REFerence_CORRectionPtr GetCORRection ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_FREQuency (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_FREQuency (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_CORRection (
        /*[out,retval]*/ struct ISCPI_SOURce_REFerence_CORRection * * Value ) = 0;
};

struct __declspec(uuid("a83f1b74-7150-408f-8ae4-15d4c2cf1647"))
ISCPI_SOURce : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetPOWer))
    ISCPI_SOURce_POWerPtr POWer;
    __declspec(property(get=GetREFerence))
    ISCPI_SOURce_REFerencePtr REFerence;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_SOURce_POWerPtr GetPOWer ( );
    ISCPI_SOURce_REFerencePtr GetREFerence ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_POWer (
        /*[out,retval]*/ struct ISCPI_SOURce_POWer * * Value ) = 0;
      virtual HRESULT __stdcall get_REFerence (
        /*[out,retval]*/ struct ISCPI_SOURce_REFerence * * Value ) = 0;
};

struct __declspec(uuid("cc6ff122-3e8d-4b71-8f27-5f1a4fc4c68b"))
SCPI_SOURce_REFerence_CORRection;
    // [ default ] interface ISCPI_SOURce_REFerence_CORRection

struct __declspec(uuid("70d15d0c-039e-45f9-9632-fd58aa315960"))
ISCPI_SENSe_VVM_FREQuency : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCW,put=PutCW))
    double CW;

    //
    // Wrapper methods for error-handling
    //

    double GetCW ( );
    void PutCW (
        double Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CW (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_CW (
        /*[in]*/ double Value ) = 0;
};

struct __declspec(uuid("f3530e9e-8f8b-47f5-8d82-b8b077b7379b"))
SCPI_SENSe_VVM_FREQuency;
    // [ default ] interface ISCPI_SENSe_VVM_FREQuency

struct __declspec(uuid("227462f6-b959-4c1d-b8f6-0e3046a7d0bc"))
ISCPI_SENSe_VVM_REFerence : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDATA))
    _variant_t DATA;

    //
    // Wrapper methods for error-handling
    //

    HRESULT MEMorize ( );
    HRESULT CLEar ( );
    _variant_t GetDATA ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_MEMorize ( ) = 0;
      virtual HRESULT __stdcall raw_CLEar ( ) = 0;
      virtual HRESULT __stdcall get_DATA (
        /*[out,retval]*/ VARIANT * Value ) = 0;
};

struct __declspec(uuid("c27a8ca5-15bd-4a5f-bf90-30469b67b6df"))
SCPI_SENSe_VVM_REFerence;
    // [ default ] interface ISCPI_SENSe_VVM_REFerence

struct __declspec(uuid("8a98561c-976d-47a8-bacf-50c5461a6084"))
ISCPI_SENSe_VVM_TABLe : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDATA))
    _variant_t DATA;

    //
    // Wrapper methods for error-handling
    //

    HRESULT MEMorize ( );
    HRESULT CLEar ( );
    HRESULT INSert (
        long Index );
    HRESULT REMove (
        long Index );
    HRESULT SAVE (
        _bstr_t NAME );
    _variant_t GetDATA ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_MEMorize ( ) = 0;
      virtual HRESULT __stdcall raw_CLEar ( ) = 0;
      virtual HRESULT __stdcall raw_INSert (
        /*[in]*/ long Index ) = 0;
      virtual HRESULT __stdcall raw_REMove (
        /*[in]*/ long Index ) = 0;
      virtual HRESULT __stdcall raw_SAVE (
        /*[in]*/ BSTR NAME ) = 0;
      virtual HRESULT __stdcall get_DATA (
        /*[out,retval]*/ VARIANT * Value ) = 0;
};

struct __declspec(uuid("b53b64e0-37a3-4a9d-92b0-de347ebc8220"))
SCPI_SENSe_VVM_TABLe;
    // [ default ] interface ISCPI_SENSe_VVM_TABLe

struct __declspec(uuid("0bae9e0d-d843-4a84-bb45-0cefdfcaffe8"))
SCPI_SENSe_VVM;
    // [ default ] interface ISCPI_SENSe_VVM

struct __declspec(uuid("7877600a-7897-477d-a103-4df94ffc8227"))
SCPI_SENSe_VVM_DISPlay;
    // [ default ] interface ISCPI_SENSe_VVM_DISPlay

struct __declspec(uuid("adb06a8c-d7a2-41e7-a112-340af082da43"))
ISCPI_SENSe_VVM_DISPlay_FONT : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSIZE,put=PutSIZE))
    long SIZE;

    //
    // Wrapper methods for error-handling
    //

    long GetSIZE ( );
    void PutSIZE (
        long Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SIZE (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_SIZE (
        /*[in]*/ long Value ) = 0;
};

struct __declspec(uuid("99c98828-a742-4392-a823-a89f7dda9f01"))
ISCPI_SENSe_VVM_DISPlay : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRESolution,put=PutRESolution))
    long RESolution;
    __declspec(property(get=GetFONT))
    ISCPI_SENSe_VVM_DISPlay_FONTPtr FONT;

    //
    // Wrapper methods for error-handling
    //

    long GetRESolution ( );
    void PutRESolution (
        long Value );
    ISCPI_SENSe_VVM_DISPlay_FONTPtr GetFONT ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RESolution (
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_RESolution (
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall get_FONT (
        /*[out,retval]*/ struct ISCPI_SENSe_VVM_DISPlay_FONT * * Value ) = 0;
};

struct __declspec(uuid("07a02e47-8f21-4325-b039-5985aca72a05"))
ISCPI_SENSe_VVM : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetTYPE,put=PutTYPE))
    _bstr_t TYPE;
    __declspec(property(get=GetFORMat,put=PutFORMat))
    _bstr_t FORMat;
    __declspec(property(get=GetFREQuency))
    ISCPI_SENSe_VVM_FREQuencyPtr FREQuency;
    __declspec(property(get=GetREFerence))
    ISCPI_SENSe_VVM_REFerencePtr REFerence;
    __declspec(property(get=GetTABLe))
    ISCPI_SENSe_VVM_TABLePtr TABLe;
    __declspec(property(get=GetDISPlay))
    ISCPI_SENSe_VVM_DISPlayPtr DISPlay;
    __declspec(property(get=GetDATA))
    _variant_t DATA;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetTYPE ( );
    void PutTYPE (
        _bstr_t Value );
    _bstr_t GetFORMat ( );
    void PutFORMat (
        _bstr_t Value );
    ISCPI_SENSe_VVM_FREQuencyPtr GetFREQuency ( );
    ISCPI_SENSe_VVM_REFerencePtr GetREFerence ( );
    ISCPI_SENSe_VVM_TABLePtr GetTABLe ( );
    ISCPI_SENSe_VVM_DISPlayPtr GetDISPlay ( );
    _variant_t GetDATA ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TYPE (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_TYPE (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_FORMat (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_FORMat (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_FREQuency (
        /*[out,retval]*/ struct ISCPI_SENSe_VVM_FREQuency * * Value ) = 0;
      virtual HRESULT __stdcall get_REFerence (
        /*[out,retval]*/ struct ISCPI_SENSe_VVM_REFerence * * Value ) = 0;
      virtual HRESULT __stdcall get_TABLe (
        /*[out,retval]*/ struct ISCPI_SENSe_VVM_TABLe * * Value ) = 0;
      virtual HRESULT __stdcall get_DISPlay (
        /*[out,retval]*/ struct ISCPI_SENSe_VVM_DISPlay * * Value ) = 0;
      virtual HRESULT __stdcall get_DATA (
        /*[out,retval]*/ VARIANT * Value ) = 0;
};

struct __declspec(uuid("dbb12e86-1182-4e96-9f5a-8be8b295b6b3"))
SCPI_SENSe_VVM_DISPlay_FONT;
    // [ default ] interface ISCPI_SENSe_VVM_DISPlay_FONT

struct __declspec(uuid("714fbbdf-06e6-4134-866f-787efb4f012f"))
ISCPI_EVENts : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("c15535bb-2428-4fc4-8048-41e8ef80a5da"))
ISCPI_EVENtsEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT WAIT ( );
    HRESULT MEASure ( );
    HRESULT HOLD ( );
    HRESULT CONNect ( );
    HRESULT DISConnect ( );
};

struct __declspec(uuid("76b6d599-7a99-4a06-bab5-942713410ceb"))
SCPI_EVENts;
    // [ default ] interface ISCPI_EVENts
    // [ default, source ] dispinterface ISCPI_EVENtsEvents

struct __declspec(uuid("977c3bd5-7aa5-40e8-95ca-b6408ef23fdf"))
ISCPI_SENSe_CORRection_COLLect_ECAL_CHECk : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT EXECute (
        const _variant_t & Param1 );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_EXECute (
        /*[in]*/ VARIANT Param1 ) = 0;
};

struct __declspec(uuid("b55f3108-8f3d-4ddf-a37a-56e8dfe1af91"))
ISCPI_SENSe_CORRection_COLLect_ECAL : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUTHRu))
    ISCPI_SENSe_CORRection_COLLect_ECAL_UTHRuPtr UTHRu;
    __declspec(property(get=GetINFormation))
    _bstr_t INFormation;
    __declspec(property(get=GetPATH,put=PutPATH))
    long PATH[];
    __declspec(property(put=PutSOLT1))
    long SOLT1;
    __declspec(property(put=PutSOLT2))
    _variant_t SOLT2;
    __declspec(property(get=GetUCHar,put=PutUCHar))
    _bstr_t UCHar;
    __declspec(property(get=GetORIentation))
    ISCPI_SENSe_CORRection_COLLect_ECAL_ORIentationPtr ORIentation;
    __declspec(property(get=GetCHECK))
    ISCPI_SENSe_CORRection_COLLect_ECAL_CHECkPtr CHECK;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_SENSe_CORRection_COLLect_ECAL_UTHRuPtr GetUTHRu ( );
    _bstr_t GetINFormation ( );
    long GetPATH (
        long Cpt );
    void PutPATH (
        long Cpt,
        long Value );
    void PutSOLT1 (
        long _arg1 );
    void PutSOLT2 (
        const _variant_t & _arg1 );
    _bstr_t GetUCHar ( );
    void PutUCHar (
        _bstr_t Value );
    ISCPI_SENSe_CORRection_COLLect_ECAL_ORIentationPtr GetORIentation ( );
    ISCPI_SENSe_CORRection_COLLect_ECAL_CHECkPtr GetCHECK ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_UTHRu (
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection_COLLect_ECAL_UTHRu * * Value ) = 0;
      virtual HRESULT __stdcall get_INFormation (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall get_PATH (
        /*[in]*/ long Cpt,
        /*[out,retval]*/ long * Value ) = 0;
      virtual HRESULT __stdcall put_PATH (
        /*[in]*/ long Cpt,
        /*[in]*/ long Value ) = 0;
      virtual HRESULT __stdcall put_SOLT1 (
        /*[in]*/ long _arg1 ) = 0;
      virtual HRESULT __stdcall put_SOLT2 (
        /*[in]*/ VARIANT _arg1 ) = 0;
      virtual HRESULT __stdcall get_UCHar (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_UCHar (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_ORIentation (
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection_COLLect_ECAL_ORIentation * * Value ) = 0;
      virtual HRESULT __stdcall get_CHECK (
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection_COLLect_ECAL_CHECk * * Value ) = 0;
};

struct __declspec(uuid("2bb35c3c-d175-48d4-b5af-70d493714eeb"))
ISCPI_SENSe_CORRection_COLLect : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetACQuire))
    ISCPI_SENSe_CORRection_COLLect_ACQuirePtr ACQuire;
    __declspec(property(get=GetCKIT))
    ISCPI_SENSe_CORRection_COLLect_CKITPtr CKIT;
    __declspec(property(get=GetMETHod))
    ISCPI_SENSe_CORRection_COLLect_METHodPtr METHod;
    __declspec(property(get=GetDATA))
    ISCPI_SENSe_CORRection_COLLect_DATAPtr DATA;
    __declspec(property(get=GetECAL))
    ISCPI_SENSe_CORRection_COLLect_ECALPtr ECAL;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_SENSe_CORRection_COLLect_ACQuirePtr GetACQuire ( );
    ISCPI_SENSe_CORRection_COLLect_CKITPtr GetCKIT ( );
    ISCPI_SENSe_CORRection_COLLect_METHodPtr GetMETHod ( );
    HRESULT CLEar ( );
    HRESULT SAVE ( );
    ISCPI_SENSe_CORRection_COLLect_DATAPtr GetDATA ( );
    ISCPI_SENSe_CORRection_COLLect_ECALPtr GetECAL ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ACQuire (
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection_COLLect_ACQuire * * Value ) = 0;
      virtual HRESULT __stdcall get_CKIT (
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection_COLLect_CKIT * * Value ) = 0;
      virtual HRESULT __stdcall get_METHod (
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection_COLLect_METHod * * Value ) = 0;
      virtual HRESULT __stdcall raw_CLEar ( ) = 0;
      virtual HRESULT __stdcall raw_SAVE ( ) = 0;
      virtual HRESULT __stdcall get_DATA (
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection_COLLect_DATA * * Value ) = 0;
      virtual HRESULT __stdcall get_ECAL (
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection_COLLect_ECAL * * Value ) = 0;
};

struct __declspec(uuid("69270e18-7800-4c88-a0e0-335054bb1d3f"))
SCPI_SENSe_CORRection_COLLect_ECAL_CHECk;
    // [ default ] interface ISCPI_SENSe_CORRection_COLLect_ECAL_CHECk

struct __declspec(uuid("c782b814-6eee-4045-a76f-b463b4cb2fff"))
SCPI_SENSe_CORRection_EXTension_AUTO;
    // [ default ] interface ISCPI_SENSe_CORRection_EXTension_AUTO

struct __declspec(uuid("7164c686-722b-4743-bb83-458d985bdc42"))
ISCPI_SENSe_CORRection_EXTension_AUTO_MEASure : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT SHORt ( );
    HRESULT OPEN ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_SHORt ( ) = 0;
      virtual HRESULT __stdcall raw_OPEN ( ) = 0;
};

struct __declspec(uuid("aa2fe89a-eed2-45d2-8566-0d09eee96af0"))
ISCPI_SENSe_CORRection_EXTension_AUTO : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCONFig,put=PutCONFig))
    _bstr_t CONFig;
    __declspec(property(get=GetDCOFfset,put=PutDCOFfset))
    VARIANT_BOOL DCOFfset;
    __declspec(property(get=GetLOSS,put=PutLOSS))
    VARIANT_BOOL LOSS;
    __declspec(property(get=GetMEASure))
    ISCPI_SENSe_CORRection_EXTension_AUTO_MEASurePtr MEASure;
    __declspec(property(get=GetSTARt,put=PutSTARt))
    double STARt;
    __declspec(property(get=GetSTOP,put=PutSTOP))
    double STOP;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetCONFig ( );
    void PutCONFig (
        _bstr_t Value );
    VARIANT_BOOL GetDCOFfset ( );
    void PutDCOFfset (
        VARIANT_BOOL Value );
    VARIANT_BOOL GetLOSS ( );
    void PutLOSS (
        VARIANT_BOOL Value );
    ISCPI_SENSe_CORRection_EXTension_AUTO_MEASurePtr GetMEASure ( );
    HRESULT SAVE ( );
    HRESULT RESet ( );
    double GetSTARt ( );
    void PutSTARt (
        double Value );
    double GetSTOP ( );
    void PutSTOP (
        double Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CONFig (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall put_CONFig (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall get_DCOFfset (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_DCOFfset (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_LOSS (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_LOSS (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_MEASure (
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection_EXTension_AUTO_MEASure * * Value ) = 0;
      virtual HRESULT __stdcall raw_SAVE ( ) = 0;
      virtual HRESULT __stdcall raw_RESet ( ) = 0;
      virtual HRESULT __stdcall get_STARt (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_STARt (
        /*[in]*/ double Value ) = 0;
      virtual HRESULT __stdcall get_STOP (
        /*[out,retval]*/ double * Value ) = 0;
      virtual HRESULT __stdcall put_STOP (
        /*[in]*/ double Value ) = 0;
};

struct __declspec(uuid("ae6c920b-f8d6-40bd-8d37-6564dfc27f56"))
ISCPI_SENSe_CORRection_EXTension : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetPORT))
    ISCPI_SENSe_CORRection_EXTension_PORTPtr PORT[];
    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;
    __declspec(property(get=GetAUTO))
    ISCPI_SENSe_CORRection_EXTension_AUTOPtr AUTO;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_SENSe_CORRection_EXTension_PORTPtr GetPORT (
        long Pt );
    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );
    ISCPI_SENSe_CORRection_EXTension_AUTOPtr GetAUTO ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PORT (
        /*[in]*/ long Pt,
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection_EXTension_PORT * * Value ) = 0;
      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_AUTO (
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection_EXTension_AUTO * * Value ) = 0;
};

struct __declspec(uuid("3e8a3363-4f15-461d-b669-f0b8724b3137"))
ISCPI_SENSe_CORRection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSTATe,put=PutSTATe))
    VARIANT_BOOL STATe;
    __declspec(property(get=GetCOLLect))
    ISCPI_SENSe_CORRection_COLLectPtr COLLect;
    __declspec(property(get=GetEXTension))
    ISCPI_SENSe_CORRection_EXTensionPtr EXTension;
    __declspec(property(get=GetCOEFficient))
    ISCPI_SENSe_CORRection_COEFficientPtr COEFficient;
    __declspec(property(get=GetTRANsform))
    ISCPI_SENSe_CORRection_TRANsformPtr TRANsform;
    __declspec(property(get=GetIMPedance))
    ISCPI_SENSe_CORRection_IMPedancePtr IMPedance;
    __declspec(property(get=GetTYPE))
    _variant_t TYPE[];
    __declspec(property(get=GetRECeiver))
    ISCPI_SENSe_CORRection_RECeiverPtr RECeiver[];

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetSTATe ( );
    void PutSTATe (
        VARIANT_BOOL Value );
    ISCPI_SENSe_CORRection_COLLectPtr GetCOLLect ( );
    HRESULT CLEar ( );
    ISCPI_SENSe_CORRection_COEFficientPtr GetCOEFficient ( );
    ISCPI_SENSe_CORRection_EXTensionPtr GetEXTension ( );
    ISCPI_SENSe_CORRection_IMPedancePtr GetIMPedance ( );
    _variant_t GetTYPE (
        long Tr );
    ISCPI_SENSe_CORRection_RECeiverPtr GetRECeiver (
        long Pt );
    ISCPI_SENSe_CORRection_TRANsformPtr GetTRANsform ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_STATe (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall put_STATe (
        /*[in]*/ VARIANT_BOOL Value ) = 0;
      virtual HRESULT __stdcall get_COLLect (
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection_COLLect * * Value ) = 0;
      virtual HRESULT __stdcall raw_CLEar ( ) = 0;
      virtual HRESULT __stdcall get_COEFficient (
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection_COEFficient * * Value ) = 0;
      virtual HRESULT __stdcall get_EXTension (
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection_EXTension * * Value ) = 0;
      virtual HRESULT __stdcall get_IMPedance (
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection_IMPedance * * Value ) = 0;
      virtual HRESULT __stdcall get_TYPE (
        /*[in]*/ long Tr,
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall get_RECeiver (
        /*[in]*/ long Pt,
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection_RECeiver * * Value ) = 0;
      virtual HRESULT __stdcall get_TRANsform (
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection_TRANsform * * Value ) = 0;
};

struct __declspec(uuid("fde9439e-96da-44cb-b0b1-ab10cf787c1b"))
ISCPI_SENSe : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAVERage))
    ISCPI_SENSe_AVERagePtr AVERage;
    __declspec(property(get=GetBANDwidth))
    ISCPI_SENSe_BANDwidthPtr BANDwidth;
    __declspec(property(get=GetCORRection))
    ISCPI_SENSe_CORRectionPtr CORRection;
    __declspec(property(get=GetFREQuency))
    ISCPI_SENSe_FREQuencyPtr FREQuency;
    __declspec(property(get=GetSEGMent))
    ISCPI_SENSe_SEGMentPtr SEGMent;
    __declspec(property(get=GetROSCillator))
    ISCPI_SENSe_ROSCillatorPtr ROSCillator;
    __declspec(property(get=GetSWEep))
    ISCPI_SENSe_SWEepPtr SWEep;
    __declspec(property(get=GetOFFSet))
    ISCPI_SENSe_OFFSetPtr OFFSet;
    __declspec(property(get=GetDATA))
    ISCPI_SENSe_DATAPtr DATA;
    __declspec(property(get=GetVVM))
    ISCPI_SENSe_VVMPtr VVM;

    //
    // Wrapper methods for error-handling
    //

    ISCPI_SENSe_AVERagePtr GetAVERage ( );
    ISCPI_SENSe_BANDwidthPtr GetBANDwidth ( );
    ISCPI_SENSe_CORRectionPtr GetCORRection ( );
    ISCPI_SENSe_FREQuencyPtr GetFREQuency ( );
    ISCPI_SENSe_SEGMentPtr GetSEGMent ( );
    ISCPI_SENSe_SWEepPtr GetSWEep ( );
    ISCPI_SENSe_ROSCillatorPtr GetROSCillator ( );
    ISCPI_SENSe_OFFSetPtr GetOFFSet ( );
    ISCPI_SENSe_DATAPtr GetDATA ( );
    ISCPI_SENSe_VVMPtr GetVVM ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AVERage (
        /*[out,retval]*/ struct ISCPI_SENSe_AVERage * * Value ) = 0;
      virtual HRESULT __stdcall get_BANDwidth (
        /*[out,retval]*/ struct ISCPI_SENSe_BANDwidth * * Value ) = 0;
      virtual HRESULT __stdcall get_CORRection (
        /*[out,retval]*/ struct ISCPI_SENSe_CORRection * * Value ) = 0;
      virtual HRESULT __stdcall get_FREQuency (
        /*[out,retval]*/ struct ISCPI_SENSe_FREQuency * * Value ) = 0;
      virtual HRESULT __stdcall get_SEGMent (
        /*[out,retval]*/ struct ISCPI_SENSe_SEGMent * * Value ) = 0;
      virtual HRESULT __stdcall get_SWEep (
        /*[out,retval]*/ struct ISCPI_SENSe_SWEep * * Value ) = 0;
      virtual HRESULT __stdcall get_ROSCillator (
        /*[out,retval]*/ struct ISCPI_SENSe_ROSCillator * * Value ) = 0;
      virtual HRESULT __stdcall get_OFFSet (
        /*[out,retval]*/ struct ISCPI_SENSe_OFFSet * * Value ) = 0;
      virtual HRESULT __stdcall get_DATA (
        /*[out,retval]*/ struct ISCPI_SENSe_DATA * * Value ) = 0;
      virtual HRESULT __stdcall get_VVM (
        /*[out,retval]*/ struct ISCPI_SENSe_VVM * * Value ) = 0;
};

struct __declspec(uuid("c528b4f7-99e7-4d15-8c3b-165a4b001e39"))
ISCPI : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCALCulate))
    ISCPI_CALCulatePtr CALCulate[];
    __declspec(property(get=GetDISPlay))
    ISCPI_DISPlayPtr DISPlay;
    __declspec(property(get=GetIEEE4882))
    ISCPI_IEEE4882Ptr IEEE4882;
    __declspec(property(get=GetINITiate))
    ISCPI_INITiatePtr INITiate[];
    __declspec(property(get=GetMMEMory))
    ISCPI_MMEMoryPtr MMEMory;
    __declspec(property(get=GetSENSe))
    ISCPI_SENSePtr SENSe[];
    __declspec(property(get=GetSOURce))
    ISCPI_SOURcePtr SOURce[];
    __declspec(property(get=GetSYSTem))
    ISCPI_SYSTemPtr SYSTem;
    __declspec(property(get=GetTRIGger))
    ISCPI_TRIGgerPtr TRIGger;
    __declspec(property(get=GetSTATus))
    ISCPI_STATusPtr STATus;
    __declspec(property(get=GetOUTPut))
    ISCPI_OUTPutPtr OUTPut;
    __declspec(property(get=GetHCOPy))
    ISCPI_HCOPyPtr HCOPy;
    __declspec(property(get=GetSERVice))
    ISCPI_SERVicePtr SERVice;
    __declspec(property(get=GetEVENts))
    ISCPI_EVENtsPtr EVENts;

    //
    // Wrapper methods for error-handling
    //

    HRESULT ABORt ( );
    ISCPI_CALCulatePtr GetCALCulate (
        long Ch );
    ISCPI_DISPlayPtr GetDISPlay ( );
    ISCPI_IEEE4882Ptr GetIEEE4882 ( );
    ISCPI_INITiatePtr GetINITiate (
        long Ch );
    ISCPI_MMEMoryPtr GetMMEMory ( );
    ISCPI_SENSePtr GetSENSe (
        long Ch );
    ISCPI_SOURcePtr GetSOURce (
        long Ch );
    ISCPI_SYSTemPtr GetSYSTem ( );
    ISCPI_TRIGgerPtr GetTRIGger ( );
    ISCPI_STATusPtr GetSTATus ( );
    ISCPI_OUTPutPtr GetOUTPut ( );
    ISCPI_HCOPyPtr GetHCOPy ( );
    ISCPI_SERVicePtr GetSERVice ( );
    ISCPI_EVENtsPtr GetEVENts ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_ABORt ( ) = 0;
      virtual HRESULT __stdcall get_CALCulate (
        /*[in]*/ long Ch,
        /*[out,retval]*/ struct ISCPI_CALCulate * * Value ) = 0;
      virtual HRESULT __stdcall get_DISPlay (
        /*[out,retval]*/ struct ISCPI_DISPlay * * Value ) = 0;
      virtual HRESULT __stdcall get_IEEE4882 (
        /*[out,retval]*/ struct ISCPI_IEEE4882 * * Value ) = 0;
      virtual HRESULT __stdcall get_INITiate (
        /*[in]*/ long Ch,
        /*[out,retval]*/ struct ISCPI_INITiate * * Value ) = 0;
      virtual HRESULT __stdcall get_MMEMory (
        /*[out,retval]*/ struct ISCPI_MMEMory * * Value ) = 0;
      virtual HRESULT __stdcall get_SENSe (
        /*[in]*/ long Ch,
        /*[out,retval]*/ struct ISCPI_SENSe * * Value ) = 0;
      virtual HRESULT __stdcall get_SOURce (
        /*[in]*/ long Ch,
        /*[out,retval]*/ struct ISCPI_SOURce * * Value ) = 0;
      virtual HRESULT __stdcall get_SYSTem (
        /*[out,retval]*/ struct ISCPI_SYSTem * * Value ) = 0;
      virtual HRESULT __stdcall get_TRIGger (
        /*[out,retval]*/ struct ISCPI_TRIGger * * Value ) = 0;
      virtual HRESULT __stdcall get_STATus (
        /*[out,retval]*/ struct ISCPI_STATus * * Value ) = 0;
      virtual HRESULT __stdcall get_OUTPut (
        /*[out,retval]*/ struct ISCPI_OUTPut * * Value ) = 0;
      virtual HRESULT __stdcall get_HCOPy (
        /*[out,retval]*/ struct ISCPI_HCOPy * * Value ) = 0;
      virtual HRESULT __stdcall get_SERVice (
        /*[out,retval]*/ struct ISCPI_SERVice * * Value ) = 0;
      virtual HRESULT __stdcall get_EVENts (
        /*[out,retval]*/ struct ISCPI_EVENts * * Value ) = 0;
};

struct __declspec(uuid("36e2ed6b-21e7-476e-9d8f-9b734c4b532b"))
ITR1300 : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSCPI))
    ISCPIPtr SCPI;
    __declspec(property(get=GetApplication))
    ITR1300Ptr Application;
    __declspec(property(get=GetNAME))
    _bstr_t NAME;
    __declspec(property(get=GetReady))
    VARIANT_BOOL Ready;
    __declspec(property(get=GetSERial))
    _bstr_t SERial;

    //
    // Wrapper methods for error-handling
    //

    ISCPIPtr GetSCPI ( );
    ITR1300Ptr GetApplication ( );
    _bstr_t GetNAME ( );
    VARIANT_BOOL GetReady ( );
    _bstr_t GetSERial ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SCPI (
        /*[out,retval]*/ struct ISCPI * * Value ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct ITR1300 * * Value ) = 0;
      virtual HRESULT __stdcall get_NAME (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall get_Ready (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall get_SERial (
        /*[out,retval]*/ BSTR * Value ) = 0;
};

struct __declspec(uuid("d800223a-978d-4d0d-aabe-cc1b96d27535"))
ITR5048 : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSCPI))
    ISCPIPtr SCPI;
    __declspec(property(get=GetApplication))
    ITR5048Ptr Application;
    __declspec(property(get=GetNAME))
    _bstr_t NAME;
    __declspec(property(get=GetReady))
    VARIANT_BOOL Ready;
    __declspec(property(get=GetSERial))
    _bstr_t SERial;

    //
    // Wrapper methods for error-handling
    //

    ISCPIPtr GetSCPI ( );
    ITR5048Ptr GetApplication ( );
    _bstr_t GetNAME ( );
    VARIANT_BOOL GetReady ( );
    _bstr_t GetSERial ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SCPI (
        /*[out,retval]*/ struct ISCPI * * Value ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct ITR5048 * * Value ) = 0;
      virtual HRESULT __stdcall get_NAME (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall get_Ready (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall get_SERial (
        /*[out,retval]*/ BSTR * Value ) = 0;
};

struct __declspec(uuid("829930f2-c411-4cb0-9255-750a78bd02a4"))
ITR7530 : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSCPI))
    ISCPIPtr SCPI;
    __declspec(property(get=GetApplication))
    ITR7530Ptr Application;
    __declspec(property(get=GetNAME))
    _bstr_t NAME;
    __declspec(property(get=GetReady))
    VARIANT_BOOL Ready;
    __declspec(property(get=GetSERial))
    _bstr_t SERial;

    //
    // Wrapper methods for error-handling
    //

    ISCPIPtr GetSCPI ( );
    ITR7530Ptr GetApplication ( );
    _bstr_t GetNAME ( );
    VARIANT_BOOL GetReady ( );
    _bstr_t GetSERial ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SCPI (
        /*[out,retval]*/ struct ISCPI * * Value ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct ITR7530 * * Value ) = 0;
      virtual HRESULT __stdcall get_NAME (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall get_Ready (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall get_SERial (
        /*[out,retval]*/ BSTR * Value ) = 0;
};

struct __declspec(uuid("9d563b19-8ff2-48a1-a202-63b37e9d6614"))
ITRVNA : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSCPI))
    ISCPIPtr SCPI;
    __declspec(property(get=GetApplication))
    ITRVNAPtr Application;
    __declspec(property(get=GetNAME))
    _bstr_t NAME;
    __declspec(property(get=GetReady))
    VARIANT_BOOL Ready;
    __declspec(property(get=GetSERial))
    _bstr_t SERial;

    //
    // Wrapper methods for error-handling
    //

    ISCPIPtr GetSCPI ( );
    ITRVNAPtr GetApplication ( );
    _bstr_t GetNAME ( );
    VARIANT_BOOL GetReady ( );
    _bstr_t GetSERial ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SCPI (
        /*[out,retval]*/ struct ISCPI * * Value ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct ITRVNA * * Value ) = 0;
      virtual HRESULT __stdcall get_NAME (
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall get_Ready (
        /*[out,retval]*/ VARIANT_BOOL * Value ) = 0;
      virtual HRESULT __stdcall get_SERial (
        /*[out,retval]*/ BSTR * Value ) = 0;
};

struct __declspec(uuid("a26b0b71-f7f1-4e3d-be3c-4f1a29d46bba"))
SCPI_SENSe_CORRection_EXTension_AUTO_MEASure;
    // [ default ] interface ISCPI_SENSe_CORRection_EXTension_AUTO_MEASure

//
// Wrapper method implementations
//

#include "C:\Users\hsyn\Desktop\SoftRoles\trvna-com\vna\Debug\trvna.tli"

#pragma pack(pop)
